{"version":3,"sources":["assets/bundles/book_player/src/PBBottomArea.ts","assets/bundles/book_player/src/PBPageContainer.ts","assets/bundles/book_player/src/PBPage.ts","assets/bundles/book_player/src/PBText.ts","assets/bundles/book_player/src/PBTrumpet.ts","assets/bundles/book_player/src/PictureBookPlayer.ts","assets/bundles/book_player/verlet/page-effect-assembler-base2.ts","assets/bundles/book_player/verlet/verlet-assembler2.ts","assets/bundles/book_player/verlet/verlet-render2.ts"],"names":["PBText_1","require","PBTrumpet_1","PictureBookPlayer_1","_a","cc","_decorator","ccclass","property","PBBottomArea","_super","__extends","_this","apply","this","arguments","trumpet","text","page_num","prototype","onTrumpetClicked","console","log","conf","default","instance","currConfig","voice","length","page","currPage","playVoice","onLoad","string","start","__decorate","type","displayName","RichText","Component","exports","AudioManager_1","verlet_render2_1","PBPage_1","PBPageContainer","pages","Map","uniqMap","prefabs","currPageIndex","leftHalf","rightHalf","leftHalf2","rightHalf2","verlet","page_material","turningLock","PBPageContainer_1","node","group","find","getComponent","onEnable","leftNode","Sprite","is3DNode","anchorX","width","height","x","y","rightNode","leftNode2","rightNode2","addVerlet","page1","page2","initAngle","isNext","Promise","resolve","active","zIndex","addComponent","setMaterial","_resetAssembler","updateAngle","setTextures","rightSpf","getTexture","leftSpf","removeVerlet","removeComponent","addPrefab","prefab","index","isValid","set","instantiate","eduPage","page_count","pageNum","turn_mode","PageModeEnum","_turn_mode","addPage","error","has","addChild","Object","defineProperty","get","onCaptured","toNextPage","__awaiter","nextPage","capture","sent","stopAllSounds","Camera","main","ortho","spriteFrame","eulerAngles","Vec3","ZERO","tween","delay","call","to","_angle","v3","TURN_DURATION","easing","toPrevPage","prevPage","unloadPrev","name","getPrefabName","destroy","assetManager","releaseAsset","delete","book_bundle","release","Prefab","unloadNext","forward","playEffect","loadNext","updatePageNum","backward","loadPrev","warn","loadPage","Enum","2d","3d","Material","PBPage","image","renderTexture","music","sound","soundLoop","soundMap","sleep","seconds","scheduleOnce","findImage","root","img","i","children","element","fixBg","onPageLoaded","audioEngine","playMusic","frameSize","view","getFrameSize","designResolution","Canvas","designSize","size","frameAspectRatio","screenSize","__assign","ratio","setLeftRight","left","right","visibleRect","Node","parent","camera","backgroundColor","Color","TRANSPARENT","clearFlags","ClearFlags","DEPTH","STENCIL","COLOR","cullingMask","rect","RenderTexture","gl","game","fmt","STENCIL_INDEX8","initWithSize","targetTexture","render","arr","Uint8Array","readPixels","texture","Texture2D","setFlipY","initWithData","sp","SpriteFrame","arr2","texture2","sp2","getSound","getVoice","clip","single","loop","duration","nativeUrl","id_1","stopEffect","id","bottomArea","play","stop","playSound","onDestroy","stopMusic","PBText","PBTrumpet","anim","Animation","bundleUtils_1","PBBottomArea_1","BaseChapterComponent_1","kit_1","PictureBookPlayer","left_slot","right_slot","bottom_slot","page_slot","left_arrow","right_arrow","book_bundle_name","playMode","PLAY_MODE_AUTO","mode_btn","autoturnpage","autoturnpage_after_voice","needAutoTurnPage","restTime","setText","txt","loadBook","bundleName","bookBundleName","loadBundle","then","bundle","loadFirstPage","kit","manager","Event","emit","consts","LIFE_CYCLE_READY","on","LIFE_CYCLE_PARAMS","onParams","Button","off","data","params","pageTimer","update","dt","onRightArrowClicked","onPageUnLoaded","reject","prefabName","str","load","onLeftArrowClicked","b","onModeChanged","label","Label","PLAY_MODE_MANAUL","PageEffectAssemblerBase","verticesCount","indicesCount","floatsPerVert","colorOffset","renderData","getBuffer","renderer","_handle","getVfmt","updateColor","comp","color","uintVerts","uintVDatas","_val","l","updateIsFront","dataOffset","verts","vDatas","n","isFirstVert","firstVertX","secondVertX","isFront","initData","RenderData","init","createFlexData","indices","iDatas","count","idx","vertextID","fillBuffers","vData","iData","buffer","offsetInfo","request","vertexOffset","byteOffset","vbuf","_vData","subarray","ibuf","_iData","indiceOffset","vertexId","Assembler","page_effect_assembler_base2_1","gfx","vfmtPosUvColorFront","VertexFormat","ATTR_POSITION","ATTR_TYPE_FLOAT32","num","ATTR_UV0","ATTR_COLOR","ATTR_TYPE_UINT8","normalize","VerletAssembler","segmentCount","pointsCount","updateRenderData","pointList","getPointList","pointNum","posX","posY","anchorY","gapU","lastU","nextU","dstOffset","lastPoint","nextPoint","verlet_assembler2_1","PagePoint","oldPos","newPos","v2","VerletRender2","constraintTimes","damping","gravity","_initedMaterial","_pointList","pointListShadow","initPointList","assembler","texture1","material","getMaterial","define","setProperty","angle","forEach","pp","push","simulate","applyConstraint","draw","point","velocity","sub","mul","Math","max","add","_updateEndPos","endPos","tailPoint","Vec2","_getEndPos","rad","PI","per","endPosX","pow","endPosY","normalDistance","t","firstPoint","secondPoint","delatPos","distance","mag","fixDirection","fixDirection2","negate","fixLen","abs","fixVector","addSelf","fixHalfVector1","fixHalfVector2","RenderComponent"],"mappings":"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","sourcesContent":["// Learn TypeScript:\n//  - https://docs.cocos.com/creator/manual/en/scripting/typescript.html\n// Learn Attribute:\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\n\nimport AudioManager from \"../../../kit/system/audio/AudioManager\";\nimport PBText from \"./PBText\";\nimport PBTrumpet from \"./PBTrumpet\";\nimport PictureBookPlayer from \"./PictureBookPlayer\";\n\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class PBBottomArea extends cc.Component {\n\n    @property({ type: PBTrumpet, displayName: '小喇叭' })\n    trumpet: PBTrumpet = null\n\n    @property({ type: PBText, displayName: '文本' })\n    text: PBText = null\n\n    @property({ type: cc.RichText, displayName: '页码' })\n    page_num: cc.RichText = null\n\n    onTrumpetClicked() {\n        console.log('on pbbottomarea >>>>>>>>>>>>')\n        let conf = PictureBookPlayer.instance.currConfig\n        if (conf.voice && conf.voice.length > 0) {\n            let page = PictureBookPlayer.instance.page.currPage\n            page.playVoice(0)\n        }\n    }\n\n    onLoad() {\n        this.text.text.string = ''\n    }\n    start() {\n\n    }\n\n    // update (dt) {}\n}\n","// Learn TypeScript:\n//  - https://docs.cocos.com/creator/manual/en/scripting/typescript.html\n// Learn Attribute:\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\n\nimport AudioManager from \"../../../kit/system/audio/AudioManager\";\nimport VerletRender2 from \"../verlet/verlet-render2\";\nimport PBPage from \"./PBPage\";\nimport PictureBookPlayer from \"./PictureBookPlayer\";\n\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class PBPageContainer extends cc.Component {\n\n    pages = new Map<number, PBPage>()\n    uniqMap = new Map<number, boolean>()\n    prefabs = new Map<number, cc.Prefab>()\n\n    currPageIndex = 0\n\n    leftHalf: cc.Sprite = null\n    rightHalf: cc.Sprite = null\n\n    leftHalf2: cc.Sprite = null\n    rightHalf2: cc.Sprite = null\n\n    static instance: PBPageContainer = null\n    verlet: VerletRender2 = null\n\n    @property({ type: cc.Material, displayName: '翻页' })\n    page_material: cc.Material = null\n\n    // @property({ type: cc.Material, displayName: '翻页' })\n    // page_material:cc.Material = null\n\n    onLoad() {\n        PBPageContainer.instance = this\n        this.node.group = 'bookplayer'\n        this.verlet = cc.find('verlet', this.node).getComponent(VerletRender2)\n    }\n\n    onEnable() {\n        let leftNode = cc.find('left1', this.node)\n        this.leftHalf = leftNode.getComponent(cc.Sprite)\n        leftNode.is3DNode = false\n        leftNode.anchorX = 1\n        leftNode.width = this.node.width / 2\n        leftNode.height = this.node.height\n        leftNode.x = 0\n        leftNode.y = 0\n\n        let rightNode = cc.find('right1', this.node)\n        this.rightHalf = rightNode.getComponent(cc.Sprite)\n        rightNode.is3DNode = true\n        rightNode.anchorX = 0\n        rightNode.width = this.node.width / 2\n        rightNode.height = this.node.height\n        rightNode.x = 0\n        rightNode.y = 0\n\n        let leftNode2 = cc.find('left2', this.node)\n        this.leftHalf2 = leftNode2.getComponent(cc.Sprite)\n        leftNode2.is3DNode = true\n        leftNode2.anchorX = 1\n        leftNode2.width = this.node.width / 2\n        leftNode2.height = this.node.height\n        leftNode2.x = 0\n        leftNode2.y = 0\n\n        let rightNode2 = cc.find('right2', this.node)\n        this.rightHalf2 = rightNode2.getComponent(cc.Sprite)\n        rightNode2.is3DNode = true\n        rightNode2.anchorX = 0\n        rightNode2.width = this.node.width / 2\n        rightNode2.height = this.node.height\n        rightNode2.x = 0\n        rightNode2.y = 0\n    }\n    /**\n     * 添加verlet翻页效果节点\n     * @param page1 \n     * @param page2 \n     */\n    async addVerlet(page1: PBPage, page2: PBPage, initAngle: number, isNext: boolean) {\n        return new Promise<void>(resolve => {\n            let node = this.verlet.node\n            node.active = true\n            node.zIndex = 10000\n            node.width = this.node.width / 2\n            node.height = this.node.height\n            node.anchorX = 0\n            node.x = 0\n            node.y = 0\n            this.verlet = node.addComponent(VerletRender2)\n            this.verlet.setMaterial(0, this.page_material)\n            this.verlet._resetAssembler()\n            this.verlet.updateAngle(initAngle)\n            this.verlet.setTextures(page1.rightSpf.getTexture(), page2.leftSpf.getTexture())\n            resolve()\n        })\n    }\n\n    removeVerlet() {\n        this.verlet.node.active = false\n        this.verlet.node.removeComponent(VerletRender2)\n        // this.verlet.node.destroy()\n    }\n\n    start() {\n\n\n    }\n\n    static PageModeEnum = cc.Enum({ 'verlet': 0, '2d': 1, '3d': 2 })\n\n    async addPrefab(prefab: cc.Prefab, index: number) {\n        if (cc.isValid(prefab)) {\n            this.prefabs.set(index, prefab)\n            // if (this.prefabs.length == 1) {\n            let page = cc.instantiate(prefab).addComponent(PBPage)\n            page.index = index\n            if (index == 0) {//首页\n                //读取页数\n                let eduPage = page.node.getComponent('EduPage') as EduPage\n                PictureBookPlayer.page_count = eduPage.pageNum\n                PictureBookPlayer.turn_mode = PBPageContainer.PageModeEnum[eduPage._turn_mode] //eduPage.turnModeName\n            }\n            this.addPage(page)\n            // if (index == 0) {\n            //     this.loadNext()\n            // }\n        } else {\n            console.error('prefab is invalid!')\n        }\n\n        // }\n    }\n\n    addPage(page: PBPage) {\n        if (this.uniqMap.has(page.index)) {\n            return\n        }\n        this.uniqMap.set(page.index, true)\n        page.node.zIndex = -page.index * 10\n        this.node.addChild(page.node)\n        this.pages.set(page.index, page)\n    }\n\n    get currPage() {\n        return this.pages.get(this.currPageIndex)\n    }\n\n    get nextPage() {\n        if (this.currPageIndex + 1 < PictureBookPlayer.page_count) {\n            return this.pages.get(this.currPageIndex + 1)\n        }\n        return null\n    }\n\n    get prevPage() {\n        if (this.currPageIndex - 1 >= 0) {\n            return this.pages.get(this.currPageIndex - 1)\n        }\n        return null\n    }\n\n    onCaptured(page: PBPage) {\n        // if (page.index == this.currPageIndex) {\n        //     this.leftHalf.spriteFrame = page.leftSpf\n        //     this.rightHalf.spriteFrame = page.rightSpf\n        //     //test\n        //     this.leftHalf.node.active = true\n        //     this.rightHalf.node.active = false\n        // } else {\n        //     this.leftHalf2.spriteFrame = page.leftSpf\n        //     this.rightHalf2.spriteFrame = page.rightSpf\n        //     this.leftHalf2.node.active = false\n        //     this.rightHalf2.node.active = true\n        // }\n    }\n\n    private turningLock = false\n    static TURN_DURATION = 0.8\n\n    //下一页\n    async toNextPage() {\n        return new Promise<void>(async resolve => {\n            let nextPage = this.nextPage\n            if (nextPage == null) {\n                console.log('nextPage is null2>>>')\n                resolve()\n                return\n            }\n\n            let currPage = this.currPage\n\n            await currPage.capture()\n\n            // PictureBookPlayer.instance.config.turn_mode = '3d'\n            currPage.stopAllSounds()\n            if (PictureBookPlayer.turn_mode == '3d') {\n                cc.Camera.main.ortho = false\n            } else if (PictureBookPlayer.turn_mode == 'verlet') {\n                this.leftHalf.node.active = true\n                this.leftHalf.spriteFrame = currPage.leftSpf\n                this.rightHalf.node.active = false\n                this.rightHalf.spriteFrame = nextPage.rightSpf\n                this.leftHalf2.node.active = false\n                this.rightHalf2.node.active = false\n                this.leftHalf.node.eulerAngles = cc.Vec3.ZERO\n                this.rightHalf.node.eulerAngles = cc.Vec3.ZERO\n                currPage.node.zIndex = 101\n                nextPage.node.zIndex = 100\n                this.leftHalf.node.zIndex = 101\n                this.rightHalf.node.zIndex = 102\n                await this.addVerlet(currPage, nextPage, 0, true)\n                cc.tween(this.verlet).delay(0.05).call(() => {\n                    currPage.node.zIndex = 0\n                    nextPage.node.zIndex = 100\n                    this.rightHalf.node.active = true\n                }).to(0.7, { _angle: 180 }).delay(0.5).call(() => {\n                    this.leftHalf.node.active = false\n                    this.rightHalf.node.active = false\n                    this.currPageIndex = nextPage.index\n                    this.removeVerlet()\n                    resolve()\n                }).start()\n            }\n\n            if (PictureBookPlayer.turn_mode != 'verlet') {\n                //设置图片内容\n                this.leftHalf.spriteFrame = currPage.leftSpf\n                this.rightHalf.spriteFrame = currPage.rightSpf\n                this.leftHalf2.spriteFrame = nextPage.leftSpf\n                this.rightHalf2.spriteFrame = nextPage.rightSpf\n\n                //设置姿态\n                this.leftHalf.node.eulerAngles = cc.Vec3.ZERO\n                this.rightHalf.node.eulerAngles = cc.Vec3.ZERO\n                this.leftHalf2.node.eulerAngles = cc.v3(0, 90, 0)\n                this.rightHalf2.node.eulerAngles = cc.Vec3.ZERO\n\n                //显隐\n                this.leftHalf.node.active = true\n                this.rightHalf.node.active = true\n                this.leftHalf2.node.active = false\n                this.rightHalf2.node.active = true\n\n                //设置遮挡\n                currPage.node.zIndex = 0\n                nextPage.node.zIndex = 100\n\n                this.leftHalf.node.zIndex = nextPage.node.zIndex + 1\n                this.rightHalf2.node.zIndex = nextPage.node.zIndex\n                this.rightHalf.node.zIndex = this.rightHalf2.node.zIndex + 1\n                this.leftHalf2.node.zIndex = this.leftHalf.node.zIndex + 1\n\n                //currPage\n                cc.tween(this.rightHalf.node)\n                    .to(PBPageContainer.TURN_DURATION / 2, { eulerAngles: cc.v3(0, -90, 0) }, { easing: 'sineIn' })\n                    .call(() => {\n                        this.rightHalf.node.active = false\n                    }).start()\n                //nextPage\n                cc.tween(this.leftHalf2.node)\n                    .delay(PBPageContainer.TURN_DURATION / 2)\n                    .call(() => {\n                        this.leftHalf2.node.active = true\n                    })\n                    .to(PBPageContainer.TURN_DURATION / 2, { eulerAngles: cc.v3(0, 0, 0) }, { easing: 'sineOut' })\n                    .call(() => {\n                        this.leftHalf2.node.active = false\n                        this.leftHalf.node.active = false\n                        this.rightHalf.node.active = false\n                        this.currPageIndex = nextPage.index\n                        if (PictureBookPlayer.turn_mode == '3d') {\n                            cc.Camera.main.ortho = true\n                        }\n                        resolve()\n                    }).start()\n            }\n\n            // PictureBookPlayer.instance.config.turn_mode = 'verlet'\n\n        })\n    }\n\n    //上一页\n    async toPrevPage() {\n        return new Promise<void>(async resolve => {\n            let prevPage = this.prevPage\n            if (prevPage == null) {\n                resolve()\n                return\n            }\n\n            let currPage = this.currPage\n\n            await currPage.capture()\n            currPage.stopAllSounds()\n            if (PictureBookPlayer.turn_mode == '3d') {\n                cc.Camera.main.ortho = false\n            } else if (PictureBookPlayer.turn_mode == 'verlet') {\n                this.leftHalf.node.active = false\n                this.leftHalf.spriteFrame = prevPage.leftSpf\n                this.rightHalf.node.active = true\n                this.rightHalf.spriteFrame = currPage.rightSpf\n                this.leftHalf2.node.active = false\n                this.rightHalf2.node.active = false\n                this.leftHalf.node.eulerAngles = cc.Vec3.ZERO\n                this.rightHalf.node.eulerAngles = cc.Vec3.ZERO\n                currPage.node.zIndex = 101\n                prevPage.node.zIndex = 100\n                this.leftHalf.node.zIndex = 101\n                this.rightHalf.node.zIndex = 100\n                await this.addVerlet(prevPage, currPage, 180, false)\n                cc.tween(this.verlet).delay(0.05).call(() => {\n                    currPage.node.zIndex = 0\n                    prevPage.node.zIndex = 100\n                    this.leftHalf.node.active = true\n                }).to(0.7, { _angle: 0 }).delay(0.5).call(() => {\n                    this.leftHalf2.node.active = false\n                    this.rightHalf.node.active = false\n                    this.rightHalf2.node.active = false\n                    this.leftHalf.node.active = false\n                    this.currPageIndex = prevPage.index\n                    this.removeVerlet()\n                    resolve()\n                }).start()\n            }\n\n            if (PictureBookPlayer.turn_mode != 'verlet') {\n                //设置图片内容\n                this.leftHalf.spriteFrame = currPage.leftSpf\n                this.rightHalf.spriteFrame = currPage.rightSpf\n                this.leftHalf2.spriteFrame = prevPage.leftSpf\n                this.rightHalf2.spriteFrame = prevPage.rightSpf\n\n                //设置姿态\n                this.leftHalf.node.eulerAngles = cc.Vec3.ZERO\n                this.rightHalf.node.eulerAngles = cc.Vec3.ZERO\n                this.leftHalf2.node.eulerAngles = cc.Vec3.ZERO\n                this.rightHalf2.node.eulerAngles = cc.v3(0, -90, 0)\n\n                //显隐\n                this.leftHalf.node.active = true\n                this.rightHalf.node.active = true\n                this.leftHalf2.node.active = true\n                this.rightHalf2.node.active = false\n\n                //设置遮挡\n                currPage.node.zIndex = 0\n                prevPage.node.zIndex = 100\n\n                this.leftHalf2.node.zIndex = prevPage.node.zIndex + 1\n                this.rightHalf.node.zIndex = this.leftHalf2.node.zIndex\n                this.rightHalf2.node.zIndex = this.rightHalf.node.zIndex + 1\n                this.leftHalf.node.zIndex = this.leftHalf2.node.zIndex + 1\n\n                //currPage\n                cc.tween(this.leftHalf.node)\n                    .to(PBPageContainer.TURN_DURATION / 2, { eulerAngles: cc.v3(0, 90, 0) }, { easing: 'sineIn' })\n                    .call(() => {\n                        this.leftHalf.node.active = false\n                    }).start()\n                //nextPage\n                cc.tween(this.rightHalf2.node)\n                    .delay(PBPageContainer.TURN_DURATION / 2)\n                    .call(() => {\n                        this.rightHalf2.node.active = true\n                    })\n                    .to(PBPageContainer.TURN_DURATION / 2, { eulerAngles: cc.v3(0, 0, 0) }, { easing: 'sineOut' })\n                    .call(() => {\n                        this.rightHalf2.node.active = false\n                        this.leftHalf2.node.active = false\n                        this.rightHalf.node.active = false\n                        this.currPageIndex = prevPage.index\n                        if (PictureBookPlayer.turn_mode == '3d') {\n                            cc.Camera.main.ortho = true\n                        }\n                        resolve()\n                    }).start()\n            }\n        })\n    }\n\n    unloadPrev() {\n        const index = this.currPageIndex - 2\n        if (index >= 0) {\n            let page = this.pages.get(index)\n            let name = PictureBookPlayer.instance.getPrefabName(index)\n            if (page) {\n                // console.log('destroy page node:' + page.index)\n                page.node.destroy()\n            }\n            let prefab = this.prefabs.get(index)\n            if (prefab) {\n                // console.log('destroy prefab:' + (index))\n                cc.assetManager.releaseAsset(prefab)\n                prefab.destroy()\n            }\n            this.uniqMap.delete(index)\n            this.pages.delete(index)\n            PictureBookPlayer.instance.book_bundle.release(name, cc.Prefab)\n        }\n    }\n\n    unloadNext() {\n        const index = this.currPageIndex + 2\n        if (index < PictureBookPlayer.page_count) {\n            let page = this.pages.get(index)\n            let name = PictureBookPlayer.instance.getPrefabName(index)\n            if (page) {\n                // console.log('destroy page node:' + page.index)\n                page.node.destroy()\n            }\n            let prefab = this.prefabs.get(index)\n            if (prefab) {\n                // console.log('destroy prefab:' + (index))\n                cc.assetManager.releaseAsset(prefab)\n                prefab.destroy()\n            }\n            this.uniqMap.delete(index)\n            this.pages.delete(index)\n            PictureBookPlayer.instance.book_bundle.release(name, cc.Prefab)\n        }\n    }\n\n    async forward() {\n        if (this.turningLock) {\n            return false\n        }\n\n        let nextPage = this.nextPage\n        if (nextPage == null) {\n            return false\n        }\n\n        this.turningLock = true\n        AudioManager.playEffect('book_player', 'sound/changepage')\n        await this.toNextPage()\n        if (this.currPageIndex < PictureBookPlayer.page_count - 1) {\n            await this.loadNext()\n        }\n        PictureBookPlayer.instance.updatePageNum()\n        this.unloadPrev()\n        this.turningLock = false\n        return true\n    }\n\n    async backward() {\n        if (this.turningLock) {\n            return\n        }\n        this.turningLock = true\n        AudioManager.playEffect('book_player', 'sound/changepage')\n        await this.toPrevPage()\n        if (this.currPageIndex > 0) {\n            await this.loadPrev()\n        }\n        PictureBookPlayer.instance.updatePageNum()\n        this.unloadNext()\n        this.turningLock = false\n    }\n\n    async loadNext() {\n        return new Promise<void>(async resolve => {\n            console.warn('load next:' + (this.currPageIndex + 1))\n            let prefab = await PictureBookPlayer.instance.loadPage(this.currPageIndex + 1)\n            if (prefab) {\n                this.addPrefab(prefab, this.currPageIndex + 1)\n            }\n            resolve()\n        })\n    }\n\n    async loadPrev() {\n        return new Promise<void>(async resolve => {\n            let prefab = await PictureBookPlayer.instance.loadPage(this.currPageIndex - 1)\n            if (prefab) {\n                this.addPrefab(prefab, this.currPageIndex - 1)\n            }\n            resolve()\n        })\n    }\n}\n","// Learn TypeScript:\n//  - https://docs.cocos.com/creator/manual/en/scripting/typescript.html\n// Learn Attribute:\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\n\nimport PBPageContainer from \"./PBPageContainer\";\nimport PictureBookPlayer from \"./PictureBookPlayer\";\n\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class PBPage extends cc.Component {\n\n    image: cc.Sprite = null //背景\n\n    renderTexture: cc.RenderTexture = null\n\n    index = 0\n\n    // leftHalf: cc.Sprite = null\n    // rightHalf: cc.Sprite = null\n\n    leftSpf: cc.SpriteFrame = null\n    rightSpf: cc.SpriteFrame = null\n\n    // config: PageConfig = null\n\n    music: cc.AudioClip = null\n    voice: cc.AudioClip = null\n    sound: cc.AudioClip = null\n    soundLoop = true\n    text = ''\n\n\n    onLoad() {\n        //加载资源\n        let eduPage = this.node.getComponent('EduPage') as EduPage\n        this.music = eduPage.music\n        this.voice = eduPage.voice\n        this.sound = eduPage.sound\n        this.soundLoop = eduPage.soundLoop\n        this.text = eduPage.text\n    }\n\n    async sleep(seconds: number) {\n        return new Promise<void>(resolve => {\n            this.scheduleOnce(() => {\n                resolve()\n            }, seconds)\n        });\n    }\n\n    /**\n     * 查找bg\n     */\n    static findImage(root: cc.Node) {\n        let img = root.getComponent(cc.Sprite)\n        if (img && (root.width >= 1334 && root.height >= 750)) {\n            return img\n        }\n        for (let i = 0; i < root.children.length; i++) {\n            const element = root.children[i];\n            img = this.findImage(element)\n            if (img) {\n                return img\n            }\n        }\n        return null\n    }\n\n    async start() {\n        this.image = cc.find('bg', this.node).getComponent(cc.Sprite)\n        // this.config = PictureBookPlayer.instance.getConfig(this.index)\n        let eduPage = this.node.getComponent('EduPage')\n        let music = eduPage.music\n        this.fixBg()\n        await this.capture()\n        PictureBookPlayer.instance.onPageLoaded(this)\n        if (this.music) {\n            // AudioManager.playMusic(PictureBookPlayer.instance.config.bundle, 'music/' + this.config.music)\n            cc.audioEngine.playMusic(this.music, true)\n        }\n    }\n\n    fixBg() {\n        let frameSize: cc.Size = cc.view.getFrameSize() // 屏幕尺寸\n        let designResolution: cc.Size = cc.Canvas.instance.designResolution\n        let designSize: cc.Size = cc.size(designResolution.width, designResolution.height)  // cc.Canvas.instance.designResolution\n        let frameAspectRatio: number = frameSize.width / frameSize.height\n        let screenSize: cc.Size = { ...designSize } as cc.Size\n\n        let ratio: number = this.image.node.width / this.image.node.height\n        if (ratio > frameAspectRatio) {\n            let width = this.image.node.width * screenSize.height / this.image.node.height\n            this.image.node.width = width\n            this.image.node.height = screenSize.height\n        } else {\n            let height = this.image.node.height * screenSize.width / this.image.node.width\n            this.image.node.width = screenSize.width\n            this.image.node.height = height\n        }\n        this.image.node.x = 0\n        this.image.node.y = 0\n    }\n\n    setLeftRight(left: cc.Sprite, right: cc.Sprite) {\n        // this.leftHalf = left\n        // this.rightHalf = right\n    }\n\n    async capture() {\n        return new Promise<void>(resolve => {\n            let width = cc.visibleRect.width\n            let height = cc.visibleRect.height\n            let node = new cc.Node('capture node')\n            node.parent = this.node\n            let camera = node.addComponent(cc.Camera)\n            camera.backgroundColor = cc.Color.TRANSPARENT\n            camera.clearFlags = cc.Camera.ClearFlags.DEPTH | cc.Camera.ClearFlags.STENCIL | cc.Camera.ClearFlags.COLOR\n            camera.cullingMask = 4\n\n            camera.rect = cc.rect(0, 0, 1, 1)\n            // camera.alignWithScreen = false\n            // camera.orthoSize = width / 2\n            let renderTexture = new cc.RenderTexture()\n            let gl = cc.game['_renderContext']\n            let fmt = gl.STENCIL_INDEX8//cc['gfx'].RB_FMT_S8 //gl.STENCIL_INDEX8\n            // renderTexture.initWithSize(width, height, gl.STENCIL_INDEX8);\n            renderTexture.initWithSize(width, height, fmt);\n            camera.targetTexture = renderTexture\n            camera.render()\n            //left half\n            let arr = new Uint8Array(width * height * 4)\n            renderTexture.readPixels(arr, 0, 0, width / 2, height)\n            let texture = new cc.Texture2D()\n            texture.setFlipY(true)\n            texture.initWithData(arr, fmt, width / 2, height)\n            let sp = new cc.SpriteFrame(texture)\n            this.leftSpf = sp\n\n            //right half\n            let arr2 = new Uint8Array(width * height * 4)\n            renderTexture.readPixels(arr2, width / 2, 0, width / 2, height)\n            let texture2 = new cc.Texture2D()\n            texture2.setFlipY(true)\n            texture2.initWithData(arr2, fmt, width / 2, height)\n            let sp2 = new cc.SpriteFrame(texture2)\n            this.rightSpf = sp2\n\n            renderTexture = null\n            arr = null\n            arr2 = null\n            node.destroy()\n            resolve()\n            PBPageContainer.instance.onCaptured(this)\n\n            // cc.find('snapshot1',PBPageContainer.instance.node.parent).getComponent(cc.Sprite).spriteFrame = sp\n            // cc.find('snapshot2',PBPageContainer.instance.node.parent).getComponent(cc.Sprite).spriteFrame = sp2\n\n        })\n    }\n\n    getSound(index) {\n        // if (!this.sound) {\n        //     return null\n        // }\n        // if (this.sound.length == 0) {\n        //     return null\n        // }\n        // if (index < 0 || index > this.config.sound.length - 1) {\n        //     return null\n        // }\n        // let sound = this.config.sound[index]\n        // let sound = this.sound\n        // let type = typeof sound\n        // if (type == 'object') {\n        //     return { name: 'sound/' + sound.name, loop: true }\n        // } else if (type == 'string') {\n        // return { name: 'sound/' + sound, loop: false }\n        // }\n\n        return this.sound\n    }\n\n    getVoice(index) {\n        // if (!this.config.voice) {\n        //     return null\n        // }\n        // if (this.config.voice.length == 0) {\n        //     return null\n        // }\n        // if (index < 0 || index > this.config.voice.length - 1) {\n        //     return null\n        // }\n        // let sound = this.config.voice[index]\n        // let type = typeof sound\n        // if (type == 'object') {\n        //     return { name: 'voice/' + sound.name, loop: true }\n        // } else if (type == 'string') {\n        //     return { name: 'voice/' + sound, loop: false }\n        // }\n        return this.voice\n    }\n\n    soundMap: Map<string, number> = new Map<string, number>()\n\n    async playEffect(clip: cc.AudioClip, single: boolean, loop: boolean) {\n        return new Promise<void>(resolve => {\n            let duration = clip.duration\n            if (single) {\n                if (this.soundMap.has(clip.nativeUrl)) {\n                    let id = this.soundMap.get(clip.nativeUrl)\n                    cc.audioEngine.stopEffect(id)\n                }\n            }\n            let id = cc.audioEngine.playEffect(clip, loop)\n            this.soundMap.set(clip.nativeUrl, id)\n            this.scheduleOnce(() => {\n                if (this.soundMap.has(clip.nativeUrl)) {\n                    this.soundMap.delete(clip.nativeUrl)\n                }\n                console.log('sound play over' + clip.nativeUrl)\n                resolve()\n            }, duration)\n        })\n    }\n\n    async playVoice(index: number) {\n        // AudioManager.stopEffect()\n        let sound = this.getVoice(index)\n        if (sound) {\n            PictureBookPlayer.instance.bottomArea.trumpet.play()\n            // await AudioManager.playEffectByName(PictureBookPlayer.instance.config.bundle, sound.name, true, sound.loop)\n            await this.playEffect(sound, true, false)\n            PictureBookPlayer.instance.bottomArea.trumpet.stop()\n        }\n    }\n\n    async playSound(index: number) {\n        // AudioManager.stopEffect()\n        let sound = this.getSound(index)\n        if (sound) {\n            // await AudioManager.playEffectByName(PictureBookPlayer.instance.config.bundle, sound.name, true, sound.loop)\n            await this.playEffect(sound, true, this.soundLoop)\n        }\n    }\n    // update (dt) {}\n\n    onDestroy() {\n        console.log('destroy page: ' + this.index)\n        if (this.leftSpf) {\n            this.leftSpf.destroy()\n            this.leftSpf = null\n        }\n\n        if (this.rightSpf) {\n            this.rightSpf.destroy()\n            this.rightSpf = null\n        }\n\n        // if (this.config.voice) {\n        //     this.config.voice.forEach((sound) => {\n        //         let type = typeof sound\n        //         let name = ''\n        //         if (type == 'object') {\n        //             name = sound.name\n        //         } else if (type == 'string') {\n        //             name = sound\n        //         }\n        //         AudioManager.destroyAudio(PictureBookPlayer.instance.config.bundle, 'voice/' + name)\n        //     })\n        // }\n\n        // if (this.config.sound) {\n        //     this.config.sound.forEach((sound) => {\n        //         let type = typeof sound\n        //         let name = ''\n        //         if (type == 'object') {\n        //             name = sound.name\n        //         } else if (type == 'string') {\n        //             name = sound\n        //         }\n        //         AudioManager.destroyAudio(PictureBookPlayer.instance.config.bundle, 'sound/' + name)\n        //     })\n        // }\n\n        // if (this.config.music) {\n        //     AudioManager.destroyAudio(PictureBookPlayer.instance.config.bundle, 'music/' + this.config.music)\n        // }\n\n    }\n\n\n    stopAllSounds() {\n        // if (this.config.voice) {\n        //     this.config.voice.forEach((sound) => {\n        //         let type = typeof sound\n        //         let name = ''\n        //         let isloop = false\n        //         if (type == 'object') {\n        //             name = 'voice/' + sound.name\n        //             isloop = sound.loop\n        //         } else if (type == 'string') {\n        //             name = 'voice/' + sound\n        //         }\n        //         if (!isloop) {\n        //             AudioManager.stopEffectByName(name)\n        //         } else {\n        //             AudioManager.stopLoopEffect(PictureBookPlayer.instance.config.bundle, name)\n        //         }\n        //     })\n        // }\n\n        // if (this.config.sound) {\n        //     this.config.sound.forEach((sound) => {\n        //         let type = typeof sound\n        //         let name = ''\n        //         let isloop = false\n        //         if (type == 'object') {\n        //             name = 'sound/' + sound.name\n        //             isloop = sound.loop\n        //         } else if (type == 'string') {\n        //             name = 'sound/' + sound\n        //         }\n        //         if (!isloop) {\n        //             AudioManager.stopEffectByName(name)\n        //         } else {\n        //             AudioManager.stopLoopEffect(PictureBookPlayer.instance.config.bundle, name)\n        //         }\n        //     })\n        // }\n\n        // if (this.config.music) {\n        //     AudioManager.stopMusic()\n        // }\n\n        if (this.sound) {\n            let clip = this.sound\n            if (this.soundMap.has(clip.nativeUrl)) {\n                let id = this.soundMap.get(clip.nativeUrl)\n                cc.audioEngine.stopEffect(id)\n            }\n        }\n\n        if (this.voice) {\n            let clip = this.voice\n            if (this.soundMap.has(clip.nativeUrl)) {\n                let id = this.soundMap.get(clip.nativeUrl)\n                cc.audioEngine.stopEffect(id)\n            }\n        }\n        if (this.music) {\n            cc.audioEngine.stopMusic()\n        }\n    }\n}\n","// Learn TypeScript:\n//  - https://docs.cocos.com/creator/manual/en/scripting/typescript.html\n// Learn Attribute:\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\n\nconst {ccclass, property} = cc._decorator;\n\n@ccclass\nexport default class PBText extends cc.Component {\n\n    \n    @property({ type: cc.RichText, displayName: '文本' })\n    text: cc.RichText = null\n\n    // LIFE-CYCLE CALLBACKS:\n\n    // onLoad () {}\n\n    start () {\n\n    }\n\n    // update (dt) {}\n}\n","// Learn TypeScript:\n//  - https://docs.cocos.com/creator/manual/en/scripting/typescript.html\n// Learn Attribute:\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\n\nconst { ccclass, property } = cc._decorator;\n/**\n * 绘本小喇叭\n */\n@ccclass\nexport default class PBTrumpet extends cc.Component {\n\n    anim: cc.Animation = null\n    onLoad() {\n        this.anim = cc.find('icon', this.node).getComponent(cc.Animation)\n    }\n\n    play() {\n        this.anim.play('playing')\n    }\n\n    stop() {\n        this.anim.play('pausing')\n    }\n\n    start() {\n\n    }\n\n    // update (dt) {}\n}\n","// Learn TypeScript:\n//  - https://docs.cocos.com/creator/manual/en/scripting/typescript.html\n// Learn Attribute:\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\n\nimport AudioManager from \"../../../kit/system/audio/AudioManager\";\nimport { loadBundle } from \"../../../kit/utils/bundleUtils\";\nimport PBBottomArea from \"./PBBottomArea\";\nimport PBPage from \"./PBPage\";\nimport PBPageContainer from \"./PBPageContainer\";\nimport BaseChapterComponent from \"../../../common/scripts/BaseChapterComponent\";\nimport { kit } from \"../../../kit/kit\";\n\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class PictureBookPlayer extends BaseChapterComponent {\n    left_slot: cc.Node = null\n    right_slot: cc.Node = null\n    bottom_slot: cc.Node = null\n    page_slot: cc.Node = null\n    book_bundle: cc.AssetManager.Bundle = null\n\n    bottomArea: PBBottomArea = null\n\n    left_arrow: cc.Node = null\n    right_arrow: cc.Node = null\n    // bottom: PBBottomArea = null\n\n    private book_bundle_name = ''\n\n    page: PBPageContainer = null\n\n    static instance: PictureBookPlayer = null\n    static turn_mode = 'verlet'\n    // config: BookConfig = null\n\n    static PLAY_MODE_AUTO = 0\n    static PLAY_MODE_MANAUL = 1\n    playMode = PictureBookPlayer.PLAY_MODE_AUTO //0自动 1手动\n\n    mode_btn: cc.Button = null\n\n    // getConfig(index: number) {\n    //     return this.config.pages[`${index + 1}`] as PageConfig\n    // }\n\n    // get currConfig() {\n    //     return this.getConfig(this.page.currPageIndex)\n    // }\n\n    setText(txt: string) {\n        this.bottomArea.text.text.string = txt\n    }\n\n    set bookBundleName(name) {\n        this.book_bundle_name = name\n    }\n\n    async loadBook(bundleName: string) {\n        this.bookBundleName = bundleName\n        return new Promise<void>(resolve => {\n            loadBundle(this.book_bundle_name).then(async (bundle: cc.AssetManager.Bundle) => {\n                this.book_bundle = bundle\n                // //加载UI\n                // this.book_bundle.load('custom/left_arrow', cc.Prefab, (error: Error, prefab: cc.Prefab) => {\n                //     if (error) {\n                        // this.left_arrow.active = true\n                //         return\n                //     }\n                //     let left_arrow = cc.instantiate(prefab)\n                //     this.left_slot.addChild(left_arrow)\n                // })\n                // this.book_bundle.load('custom/right_arrow', cc.Prefab, (error: Error, prefab: cc.Prefab) => {\n                //     if (error) {\n                        // this.right_arrow.active = true\n                //         return\n                //     }\n                //     let right_arrow = cc.instantiate(prefab)\n                //     this.right_slot.addChild(right_arrow)\n                // })\n\n                // this.book_bundle.load('custom/bottom_area', cc.Prefab, (error: Error, prefab: cc.Prefab) => {\n                //     if (error) {\n                        // this.bottomArea.node.active = true\n                //         return\n                //     }\n                //     let bottom_area = cc.instantiate(prefab).getComponent(PBBottomArea)\n                //     this.bottomArea = bottom_area\n                //     this.node.addChild(bottom_area.node)\n                // })\n\n                // this.book_bundle.load('setting', cc.JsonAsset, async (error: Error, txt: cc.JsonAsset) => {\n                //     if (error) {\n                //         console.log(error)\n                //         return\n                //     }\n                //     this.config = txt.json\n                //     await this.loadAllPages()\n                //     this.updatePageNum()\n                //     kit.manager.Event.emit(kit.consts.Event.LIFE_CYCLE_READY)\n                //     resolve()\n                // })\n                await this.loadFirstPage()\n                this.updatePageNum()\n                kit.manager.Event.emit(kit.consts.Event.LIFE_CYCLE_READY)\n            })\n        })\n    }\n\n    onLoad() {\n        PictureBookPlayer.instance = this\n        this.left_slot = cc.find('left_slot', this.node)\n        this.right_slot = cc.find('right_slot', this.node)\n        this.bottom_slot = cc.find('bottom_slot', this.node)\n        this.left_arrow = cc.find('left_arrow', this.left_slot)\n        this.left_arrow.active = true\n        this.right_arrow = cc.find('right_arrow', this.right_slot)\n        this.right_arrow.active = true\n        this.bottomArea = cc.find('bottom_area', this.bottom_slot).getComponent(PBBottomArea)\n        this.bottomArea.node.active = true\n        this.page_slot = cc.find('page_slot', this.node)\n        this.page = cc.find('page', this.page_slot).getComponent(PBPageContainer)\n        // let mc = cc.Camera.main\n        // mc.ortho = false\n        // mc.zoomRatio = 1\n        // mc.alignWithScreen = false\n        // mc.farClip = 4096*2\n        // // this.node.z = -1000\n        // this.node.is3DNode = true\n        kit.manager.Event.on(kit.consts.Event.LIFE_CYCLE_PARAMS, this.onParams, this)\n        this.mode_btn = cc.find('mode_btn', this.node).getComponent(cc.Button)\n    }\n\n    onDestroy() {\n        kit.manager.Event.off(kit.consts.Event.LIFE_CYCLE_PARAMS, this.onParams, this)\n    }\n\n    onParams(data) {\n        this.params = data.data\n        this.loadBook(this.params.bundle)\n    }\n\n    async onPageLoaded(page: PBPage) {\n        if (page.index == this.page.currPageIndex) {\n            if (page.text && page.text.length > 0) {\n                PictureBookPlayer.instance.setText(page.text)\n            }\n            if (page.sound) {\n                page.playSound(0)\n            }\n            this.pageTimer(page)\n        }\n    }\n\n    autoturnpage = 10\n    autoturnpage_after_voice = 5\n\n    pageTimer(page: PBPage) {\n        this.needAutoTurnPage = false\n        // if (page.config.voice && page.config.voice.length > 0) {\n        if (page.voice) {\n            if (this.autoturnpage > 0) {\n                page.playVoice(0).then(() => {\n                    // console.log('voice ended:' + page.config.voice[0])\n                    if (this.playMode == PictureBookPlayer.PLAY_MODE_AUTO) {\n                        this.needAutoTurnPage = true\n                        this.restTime = this.autoturnpage_after_voice\n                    }\n                })\n            } else {\n                page.playVoice(0)\n            }\n        } else {\n            this.needAutoTurnPage = true\n            this.restTime = this.autoturnpage\n        }\n    }\n\n    // autoTurningMode = false\n    needAutoTurnPage = false\n    restTime = 0\n    update(dt: number) {\n        if (this.needAutoTurnPage) {\n            if (this.restTime > 0) {\n                this.restTime -= dt\n                if (this.restTime <= 0) {\n                    console.log('auto turn page >>>>>')\n                    this.onRightArrowClicked()\n                }\n            }\n        }\n    }\n\n    async sleep(seconds: number) {\n        return new Promise<void>(resolve => {\n            this.scheduleOnce(() => {\n                resolve()\n            }, seconds)\n        });\n    }\n\n    onPageUnLoaded(page: PBPage) {\n        if (page.index == this.page.currPageIndex) {\n            PictureBookPlayer.instance.setText('')\n            AudioManager.stopEffect()\n        }\n    }\n\n    static page_count = 0\n\n    updatePageNum() {\n        this.bottomArea.page_num.string = `${this.page.currPageIndex + 1}/${PictureBookPlayer.page_count}`\n    }\n\n    async loadFirstPage() {\n        // let index = 0\n        return new Promise<void>(async (resolve, reject) => {\n            let prefab: cc.Prefab = null\n            // while (true) {\n            try {\n                prefab = await this.loadPage(0)\n                if (prefab == null) {\n                    // break\n                }\n                // index++\n                await this.page.addPrefab(prefab, 0)\n                this.page.loadNext()\n            } catch (error) {\n                // break\n            }\n            // }\n            resolve()\n        })\n    }\n\n    getPrefabName(index) {\n        let prefabName = 'EduPage'\n        if (index == 0) {\n            return prefabName\n        }\n\n        if (index > 0) {\n            let str = `${index}`\n            if (str.length == 1) {\n                prefabName += ' - 00' + str\n            } else if (str.length == 2) {\n                prefabName += ' - 0' + str\n            } else {\n                prefabName += ' - ' + str\n            }\n        }\n        return prefabName\n    }\n\n    async loadPage(index: number) {\n        return new Promise<cc.Prefab>(resolve => {\n            let prefabName = this.getPrefabName(index)\n            this.book_bundle.load(prefabName, cc.Prefab, (error: Error, prefab: cc.Prefab) => {\n                if (error) {\n                    resolve(null)\n                }\n                resolve(prefab)\n            })\n        })\n    }\n\n    start() {\n    }\n\n    // update (dt) {}\n\n    async onLeftArrowClicked() {\n        if (this.page.currPageIndex == 0) {\n            return\n        }\n        this.needAutoTurnPage = false\n        this.restTime = 0\n        this.onPageUnLoaded(this.page.currPage)\n        await this.page.backward()\n        this.onPageLoaded(this.page.currPage)\n    }\n\n    async onRightArrowClicked() {\n        if (this.page.currPageIndex == PictureBookPlayer.page_count) {\n            return\n        }\n        this.needAutoTurnPage = false\n        this.restTime = 0\n        this.onPageUnLoaded(this.page.currPage)\n        let b = await this.page.forward()\n        if (b) {\n            this.onPageLoaded(this.page.currPage)\n        }\n    }\n\n    onModeChanged() {\n        let label = cc.find('Label', cc.find('Background', this.mode_btn.node)).getComponent(cc.Label)\n        if (this.playMode == PictureBookPlayer.PLAY_MODE_AUTO) {\n            this.playMode = PictureBookPlayer.PLAY_MODE_MANAUL\n            label.string = '手动'\n        } else {\n            this.playMode = PictureBookPlayer.PLAY_MODE_AUTO\n            label.string = '自动'\n            let page = this.page.currPage\n            this.pageTimer(page)\n        }\n    }\n}\n","\nexport default class PageEffectAssemblerBase extends cc.Assembler {\n    // 普通四边形的属性，根据实际的顶点格式、数量调整\n    protected verticesCount = 4;\n    protected indicesCount = 6;\n    protected floatsPerVert = 5;\n\n    protected colorOffset = 4;    \n    protected renderData: cc.RenderData = null;\n\n    get verticesFloats() {\n        return this.verticesCount * this.floatsPerVert;\n    }\n\n    getBuffer() {\n        //@ts-ignore\n        return cc.renderer._handle.getBuffer(\"mesh\", this.getVfmt());\n    }\n\n    getVfmt() {\n        // to be overwrite\n        return null;\n    }\n\n    updateColor(comp, color) {\n        let uintVerts = this.renderData.uintVDatas[0];\n        if (!uintVerts) return;\n        color = color != null ? color : comp.node.color._val;\n        let floatsPerVert = this.floatsPerVert;\n        let colorOffset = this.colorOffset;\n        for (let i = colorOffset, l = uintVerts.length; i < l; i += floatsPerVert) {\n            uintVerts[i] = color;\n        }\n    }\n\n    updateIsFront(comp, dataOffset) {\n        let verts = this.renderData.vDatas[0];\n        let index = 0;\n        let floatsPerVert = this.floatsPerVert;\n        for (let i = 0, n = this.verticesCount; i < n; ++i) {\n            index = i * floatsPerVert;\n            let isFirstVert = i % 2 === 0;\n            let firstVertX = isFirstVert ? verts[index] : verts[index - floatsPerVert];\n            let secondVertX = isFirstVert ? verts[index + floatsPerVert] : verts[index];\n            let isFront = firstVertX < secondVertX ? 1.0 : 0.0;\n            verts[index + dataOffset] = isFront;\n        }\n    }\n    \n    initData() {\n        //@ts-ignore\n        this.renderData = new cc.RenderData();\n        this.renderData.init(this);\n\n        let data = this.renderData;\n        // createFlexData支持创建指定格式的renderData\n        data.createFlexData(0, this.verticesCount, this.indicesCount, this.getVfmt());\n\n        // 顶点数固定的情况下索引不变化\n        let indices = data.iDatas[0];\n        let count = indices.length / 6;\n        for (let i = 0, idx = 0; i < count; i++) {\n            let vertextID = i * 4;\n            indices[idx++] = vertextID;\n            indices[idx++] = vertextID+1;\n            indices[idx++] = vertextID+2;\n            indices[idx++] = vertextID+1;\n            indices[idx++] = vertextID+3;\n            indices[idx++] = vertextID+2;\n        }\n    }\n\n    fillBuffers(comp, renderer) {\n        let renderData = this.renderData;\n        let vData = renderData.vDatas[0] as any;\n        let iData = renderData.iDatas[0];\n\n        let buffer = this.getBuffer();\n        let offsetInfo = buffer.request(this.verticesCount, this.indicesCount);\n\n        let vertexOffset = offsetInfo.byteOffset >> 2,\n            vbuf = buffer._vData;\n\n        if (vData.length + vertexOffset > vbuf.length) {\n            //@ts-egnore\n            vbuf.set(vData.subarray(0, vbuf.length - vertexOffset), vertexOffset);\n        } else {\n            vbuf.set(vData, vertexOffset);\n        }\n\n        let ibuf = buffer._iData,\n            indiceOffset = offsetInfo.indiceOffset,\n            vertexId = offsetInfo.vertexOffset;\n        for (let i = 0, l = iData.length; i < l; i++) {\n            ibuf[indiceOffset++] = vertexId + iData[i];\n        }\n    }\n}\n","import PageEffectAssemblerBase from \"./page-effect-assembler-base2\";\r\n\r\nconst gfx = cc.gfx\r\n\r\nlet vfmtPosUvColorFront = new gfx.VertexFormat([\r\n    { name: gfx.ATTR_POSITION, type: gfx.ATTR_TYPE_FLOAT32, num: 2 },\r\n    { name: gfx.ATTR_UV0, type: gfx.ATTR_TYPE_FLOAT32, num: 2 },\r\n    { name: gfx.ATTR_COLOR, type: gfx.ATTR_TYPE_UINT8, num: 4, normalize: true },\r\n    { name: \"a_isFront\", type: gfx.ATTR_TYPE_FLOAT32, num: 1},\r\n]);\r\n\r\nexport default class VerletAssembler extends PageEffectAssemblerBase {\r\n\r\n    init(comp: cc.RenderComponent) {\r\n        super['init'](comp);\r\n\r\n        //@ts-ignore\r\n        let segmentCount = comp.pointsCount - 1;\r\n        this.verticesCount = 4 * segmentCount;\r\n        this.indicesCount = 6 * segmentCount;\r\n        this.floatsPerVert = 6;\r\n        \r\n        this.initData();\r\n    }\r\n\r\n    getVfmt() {\r\n        return vfmtPosUvColorFront;\r\n    }\r\n    \r\n    public updateRenderData (comp: any) {\r\n        if (comp) {\r\n            let pointList: cc.Vec2[] = comp.getPointList()\r\n            let pointNum: number = pointList.length\r\n            if (pointNum < 2) {\r\n                return\r\n            }\r\n\r\n            let node = comp.node\r\n            let height = node.height\r\n            let width = node.width\r\n            let posX = - width * node.anchorX\r\n            let posY = - height * node.anchorY\r\n\r\n            let gapU = 1 / (pointNum - 1)\r\n            let lastU = 0\r\n            let nextU = 0\r\n\r\n            let floatsPerVert = this.floatsPerVert;\r\n            let verts = this.renderData.vDatas[0];\r\n            // 写verts时的下标\r\n            let dstOffset = 0;\r\n            for (let i = 1; i < pointNum; i++) {\r\n                let lastPoint = pointList[i - 1]\r\n                let nextPoint = pointList[i]\r\n                nextU = lastU + gapU\r\n\r\n                // 顶点和质点一一对应\r\n                // 顶点数据写入verts\r\n                dstOffset = floatsPerVert * (i-1) * 4;\r\n                verts[dstOffset]     = posX + lastPoint.x;\r\n                verts[dstOffset + 1] = posY + lastPoint.y;\r\n                verts[dstOffset + 2] = lastU;\r\n                verts[dstOffset + 3] = 1;\r\n                dstOffset += floatsPerVert;\r\n\r\n                verts[dstOffset]     = posX + nextPoint.x;\r\n                verts[dstOffset + 1] = posY + nextPoint.y;\r\n                verts[dstOffset + 2] = nextU;\r\n                verts[dstOffset + 3] = 1;\r\n                dstOffset += floatsPerVert;\r\n\r\n                verts[dstOffset]     = posX + lastPoint.x;\r\n                verts[dstOffset + 1] = posY + height + lastPoint.y;\r\n                verts[dstOffset + 2] = lastU;\r\n                verts[dstOffset + 3] = 0;\r\n                dstOffset += floatsPerVert;\r\n\r\n                verts[dstOffset]     = posX + nextPoint.x;\r\n                verts[dstOffset + 1] = posY + height + nextPoint.y;\r\n                verts[dstOffset + 2] = nextU;\r\n                verts[dstOffset + 3] = 0;\r\n\r\n                lastU = nextU\r\n            }\r\n\r\n            this.updateColor(comp, null);\r\n            this.updateIsFront(comp, 5);\r\n        }\r\n    }\r\n}","import VerletAssembler from \"./verlet-assembler2\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\nclass PagePoint {\r\n    public oldPos: cc.Vec2\r\n    public newPos: cc.Vec2\r\n\r\n    constructor(x: number, y: number) {\r\n        this.oldPos = this.newPos = cc.v2(x, y)\r\n    }\r\n}\r\n\r\n@ccclass\r\nexport default class VerletRender2 extends cc.RenderComponent {\r\n    // @property({type: [cc.Texture2D], displayName:\"纹理\"})\r\n    // public textureList: cc.Texture2D[] = []\r\n\r\n    // @property({displayName:\"每条边上的顶点数量\"})\r\n    public pointsCount: number = 10\r\n\r\n    // @property({displayName:\"纠正次数\"})\r\n    public constraintTimes: number = 50\r\n\r\n    // @property({displayName:\"速度衰减系数\"})\r\n    public damping: number = 0.7\r\n\r\n    // @property({displayName:\"重力\"})\r\n    public gravity: number = -0.2\r\n\r\n    protected _initedMaterial: boolean = false\r\n    private _pointList: PagePoint[] = []\r\n    _angle: number = 0\r\n    // onEnable() {\r\n    //     super.onEnable();\r\n    //     this.initPointList();\r\n    //     // this.draw();\r\n    // }\r\n\r\n    start() {\r\n        this.initPointList();\r\n        this.update();\r\n    }\r\n\r\n    public _resetAssembler() {\r\n        let assembler = this['_assembler'] = new VerletAssembler()\r\n        assembler.init(this)\r\n    }\r\n\r\n    setTextures(texture1: cc.Texture2D, texture2: cc.Texture2D) {\r\n        let material = this.getMaterial(0)\r\n        if (material) {\r\n            material.define('CC_USE_MODEL', 1);\r\n            material.setProperty('texture0', texture1);\r\n            material.setProperty('texture1', texture2);\r\n        }\r\n    }\r\n\r\n    public updateAngle(angle: number) {\r\n        this._angle = angle\r\n    }\r\n\r\n    private pointListShadow: cc.Vec2[] = []\r\n    public getPointList() {\r\n        let pointList = this.pointListShadow\r\n        // if (pointList.length == 0) {\r\n        //     for (let point of this._pointList) {\r\n        //         pointList.push(new cc.Vec2(point.newPos.x, point.newPos.y))\r\n        //     }\r\n        // } else {\r\n        this._pointList.forEach((pp, i) => {\r\n            pointList[i].x = pp.newPos.x\r\n            pointList[i].y = pp.newPos.y\r\n        })\r\n        // }\r\n        return pointList\r\n    }\r\n\r\n    // 初始化质点\r\n    public initPointList() {\r\n        for (let i = 0; i < this.pointsCount; ++i) {\r\n            let posX = i / (this.pointsCount - 1) * this.node.width\r\n            this._pointList.push(new PagePoint(posX, 0))\r\n            this.pointListShadow.push(cc.v2(this._pointList[i].newPos.x, this._pointList[i].newPos.y))\r\n        }\r\n    }\r\n\r\n    public update() {\r\n        this.simulate()\r\n        this.applyConstraint()\r\n        this.draw()\r\n    }\r\n\r\n    // 使用verlet积分更新位置\r\n    public simulate() {\r\n        let gravity = cc.v2(0, this.gravity)\r\n        for (let i = this.pointsCount - 1; i >= 1; i--) {\r\n            let point = this._pointList[i]\r\n            // 速度等于当前位置与上一个位置的差乘上衰减系数\r\n            let velocity: cc.Vec2 = point.newPos.sub(point.oldPos).mul(this.damping)\r\n            // 模拟一个水平放置的绳子，当y小于等于0时，将不再受重力影响\r\n            if (point.newPos.y <= 0) {\r\n                gravity.y = Math.max(0, gravity.y)\r\n            }\r\n            point.oldPos = point.newPos\r\n            point.newPos = point.newPos.add(velocity)\r\n            point.newPos = point.newPos.add(gravity)\r\n        }\r\n    }\r\n\r\n    private _updateEndPos(endPos: cc.Vec2) {\r\n        let tailPoint = this._pointList[this.pointsCount - 1]\r\n        tailPoint.newPos = new cc.Vec2(endPos.x, endPos.y)\r\n    }\r\n\r\n    private _getEndPos(): cc.Vec2 {\r\n        let endPos = new cc.Vec2(0, 0)\r\n        let width = this.node.width\r\n        let rad = this._angle * Math.PI / 180\r\n\r\n        // 与贝塞尔曲线使用相同的运动轨迹\r\n        let per = rad * 2 / Math.PI\r\n        if (this._angle <= 90) {\r\n            let endPosX = width * (1 - Math.pow(per, 3))\r\n            let endPosY = width * 1 / 4 * (1 - Math.pow(1 - per, 4))\r\n            endPos = new cc.Vec2(endPosX, endPosY)\r\n        } else {\r\n            per = per - 1\r\n            let endPosX = - width * (1 - Math.pow(1 - per, 3))\r\n            let endPosY = width * 1 / 4 * (1 - Math.pow(per, 4))\r\n            endPos = new cc.Vec2(endPosX, endPosY)\r\n        }\r\n\r\n\r\n        return endPos\r\n    }\r\n    // 约束纠正\r\n    public applyConstraint() {\r\n        // 两个质点之间的固定距离\r\n        let normalDistance = this.node.width / (this.pointsCount - 1)\r\n        let endPos = this._getEndPos()\r\n        for (let t = 0; t < this.constraintTimes; t++) {\r\n            this._updateEndPos(endPos)\r\n            //由最后一个质点开始依次纠正\r\n            for (let i = this.pointsCount - 1; i >= 1; i--) {\r\n                let firstPoint = this._pointList[i - 1]\r\n                let secondPoint = this._pointList[i]\r\n                let delatPos = secondPoint.newPos.sub(firstPoint.newPos)  //d\r\n                let distance = delatPos.mag()\r\n                let fixDirection: cc.Vec2 = null\r\n                let fixDirection2: cc.Vec2 = null\r\n                if (distance < normalDistance) {\r\n                    fixDirection = delatPos.normalize().negate()\r\n                    fixDirection2 = delatPos.normalize()\r\n                } else if (distance > normalDistance) {\r\n                    fixDirection = delatPos.normalize()\r\n                    fixDirection2 = delatPos.normalize().negate()\r\n                } else {\r\n                    continue\r\n                }\r\n\r\n                let fixLen = Math.abs(distance - normalDistance)\r\n                if (i == 1) {\r\n                    // 由于第一个质点是固定的，所以只对第二个质点做纠正\r\n                    let fixVector = fixDirection2.mul(fixLen)\r\n                    secondPoint.newPos.addSelf(fixVector)\r\n                } else {\r\n                    // 将两个质点之间的距离纠正为固定长度\r\n                    let fixHalfVector1 = fixDirection.mul(fixLen * 0.5)\r\n                    firstPoint.newPos.addSelf(fixHalfVector1)\r\n                    let fixHalfVector2 = fixDirection2.mul(fixLen * 0.5)\r\n                    secondPoint.newPos.addSelf(fixHalfVector2)\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    public draw() {\r\n        this['setVertsDirty']()\r\n    }\r\n}"],"file":"index.js"}