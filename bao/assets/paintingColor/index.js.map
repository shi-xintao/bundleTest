{"version":3,"sources":["assets/bundles/paintingColor/scr/kongItem.ts","assets/bundles/paintingColor/scr/paintingColor.ts","assets/bundles/paintingColor/scr/pdragItem.ts"],"names":["_a","cc","_decorator","ccclass","property","NewClass","_super","__extends","_this","apply","this","arguments","maskNode","maskSpArr","itemSp","itemSpArr","colorAniNode","mainCom","mid","mround","posiArr","v3","posiMaskArr","colorAniArr","prototype","start","setCompleteListener","colorAniNodeback","bind","node","position","spriteFrame","x","startAni","initItem","id","round","mc","tween","to","call","setBlock","splashColor","active","playAin","mmid","loop","ainName","playSpine","date","showPaintSp","turnOnMask","enabled","width","getRect","height","scheduleOnce","moveOut","by","roundEnd","destroy","spNode","spName","tg","clearTracks","setToSetupPose","setAnimation","__decorate","Mask","SpriteFrame","Sprite","sp","Skeleton","Component","exports","default","ChapterGameComponent_1","require","events_1","AudioManager_1","EventSystem_1","PaintingColor","shading","paintSp","paintSpArr","boardSp","boardSpArr","kongItem","itemBoard","lightNode","boxNode","showNode","bgSp","bgSpArr","fachen","dolphineAin","heiyanAin","blockNode","curNode","overTag","cur_index","sounds_arr","gameWordData","guidehandle","taskData","gameTaskCom","BUNDLE_NAME","onLoad","bundleName","imgList","on","FOLLOW_MODULE_TO_CLIENT","recordResult","playLoopEffect","dolphineAinback","fachenback","emit","LIFE_CYCLE_CREATED","LIFE_CYCLE_BLOCK","onBlock","LIFE_CYCLE_UNBLOCK","unBlock","initTaskComp","myShowTaskFun","mtag","showParams","taskIndex","complete","callFunc3","showGameTow","getChildByName","assembleItem","gameOver","shakeItem","showTaskList","Promise","resolve","reject","bundle","assetManager","getBundle","load","Prefab","error","assets","taskNode","instantiate","getComponent","initData","parent","catch","testgame2","showAllPainting","onDestroy","off","aniDate","animation","name","mnode_1","opacity","nextFollowStep","ctag","i","item","itemCom","addChild","guideColorBox","scale","union","repeat","splashColorAni","playEffect","nextRound","log","y","isShowRecord","_i","children","length","iterator","angle","playFollowEff","gameRunRecord","map","startRecordAudio","CC_PREVIEW","result","data","eventName","success","sayRight","sayWrong","moveToCenterAin","saytag","pNode","kp","kwp","convertToWorldSpaceAR","kcp","convertToNodeSpaceAR","disappearNode","yingwu_1","bird_1","delay","onDragStart","unschedule","tag","schedule","LIFE_CYCLE_COMPLETE","audioEngine","pauseMusic","pauseAllEffects","resumeMusic","resumeAllEffects","Node","Hand_1","paintingColor_1","guideHand","checkBox","colorBoxArr","guidePos","isCanMove","PosiArr","hand","gameCount","gameHandCount","handNode","EventType","TOUCH_START","event","hideHand","showGuide","TOUCH_MOVE","onTouchMove","touchStart","TOUCH_END","touchEnd","TOUCH_CANCEL","setCanTouch","handGuide","myv2","v2","checkRect","getBoundingBox","guide2Target","setTargetNode","playDown","cursor","playUp","onHandCompleted","touchEvent","location","getLocation","bendiLoc","timerKey","clearTimeout","setTimeout","hide","stopAllActions"],"mappings":"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","sourcesContent":["import PaintingColor from \"../scr/paintingColor\";\nconst {ccclass, property} = cc._decorator;\n\n@ccclass\nexport default class NewClass extends cc.Component {\n    @property(cc.Mask)\n    maskNode:cc.Mask=null;\n\n    @property(cc.SpriteFrame)\n    maskSpArr:cc.SpriteFrame[]=[];\n\n    @property(cc.Sprite)\n    itemSp:cc.Sprite = null;\n\n    @property(cc.SpriteFrame)\n    itemSpArr:cc.SpriteFrame[]=[];\n\n    // @property(cc.Sprite)\n    // colorSp:cc.Sprite = null;\n\n    // @property(cc.SpriteFrame)\n    // colorSpArr:cc.SpriteFrame[]=[];\n\n    @property(sp.Skeleton)\n    colorAniNode: sp.Skeleton = null;\n\n    // @property(sp.SkeletonData)\n    // coloraniDataArr:sp.SkeletonData[]= [];\n    \n    mainCom:PaintingColor = null;\n    mid = 0;\n    mround = 0;\n    posiArr = [cc.v3(-0.88,18.55,0),cc.v3(0.7,-12.3,0),cc.v3(-16,-0.8,0),cc.v3(35.4,16,0)];\n    posiMaskArr = [cc.v3(2.2,-18.5,0),cc.v3(0.5,12.5,0),cc.v3(18,1.2,0),cc.v3(-35,-16,0)];\n    colorAniArr = [cc.v3(-250,15,0),cc.v3(-262,36.5,0),cc.v3(-262,80,0),cc.v3(-230,30,0)];\n    // onLoad () {}\n\n    start () {\n        this.colorAniNode.setCompleteListener(this.colorAniNodeback.bind(this));\n        this.node.position = this.posiArr[this.mround];\n        this.itemSp.spriteFrame = this.itemSpArr[this.mround];\n        this.maskNode.node.position = this.posiMaskArr[this.mround];\n        this.colorAniNode.node.position = this.colorAniArr[this.mround];\n        this.node.x = 800;\n\n        this.startAni();\n    }\n\n    initItem(id:number,round:number,mc:PaintingColor){\n        this.mid = id;\n        this.mround = round;\n        this.mainCom = mc;\n    }\n\n    startAni(){\n        cc.tween(this.node)\n        .to(2,{position:this.posiArr[this.mround]})\n        .call(()=>{\n            this.mainCom.setBlock(false);\n        })\n        .start()\n    }\n\n    // showColorSp(){\n    //     this.colorSp.node.active = true;\n    //     this.colorSp.spriteFrame = this.colorSpArr[this.mround];\n    // }\n\n    // setSke(skeData:sp.SkeletonData,aniName:string){\n    //     this.aniNode.skeletonData = skeData;\n    //     this.aniNode.animation = aniName;     \n    // }\n\n    splashColor(){\n        this.colorAniNode.node.active = true;\n        this.playAin(this.mround);\n    }\n\n    playAin(mmid,loop:boolean = false){\n        let ainName = ''\n        switch (mmid) {\n            case 0:\n                ainName = 'lan' \n                break;\n            case 1:\n                ainName = 'hong' \n                break;\n            case 2:\n                ainName = 'huang' \n                break;\n            case 3:\n                ainName = 'lan1' \n                break;\n            default:\n                break;\n        }\n        this.playSpine(this.colorAniNode,ainName,loop);\n    }\n\n    colorAniNodeback(date){\n        // let aniDate = date;\n        // if (aniDate.animation.name === \"\") {\n        // }\n        this.mainCom.showPaintSp();\n        this.turnOnMask();\n    }\n\n    turnOnMask(){\n        this.maskNode.enabled = true;\n        this.maskNode.spriteFrame =  this.maskSpArr[this.mround];\n        this.maskNode.node.width = this.maskSpArr[this.mround].getRect().width;\n        this.maskNode.node.height = this.maskSpArr[this.mround].getRect().height;\n\n        this.scheduleOnce(()=>this.moveOut(),2);\n    }\n\n    moveOut(){\n        cc.tween(this.node)\n        .by(2,{x:750})\n        .call(()=>{\n            this.mainCom.roundEnd();\n            this.node.destroy();\n        })\n        .start()\n    }\n\n    playSpine(spNode,spName,tg) {\n        spNode.clearTracks();\n        spNode.setToSetupPose();\n        spNode.setAnimation(0, spName, tg);\n    }\n\n    // update (dt) {}\n}\n","import gameTask from \"../../../common/gameTask/scripts/gameTask\";\nimport ChapterGameComponent from \"../../../common/scripts/ChapterGameComponent\";\nimport { GameTaskInitParam, GameTaskShowParam } from \"../../../common/structure/CompInterface\";\nimport { FOLLOW_CLIENT_TO_MODULE, FOLLOW_MODULE_TO_CLIENT, LIFE_CYCLE_BLOCK, LIFE_CYCLE_COMPLETE, LIFE_CYCLE_CREATED, LIFE_CYCLE_UNBLOCK } from \"../../../kit/events/events\";\nimport AudioManager from \"../../../kit/system/audio/AudioManager\";\nimport EventSystem from \"../../../kit/system/event/EventSystem\";\n\n\nconst { ccclass, property } = cc._decorator;\n// const CONFIG = { id: 1, main: 'paintingColor', assets: ['common','paintingColor'], params: { } }\n\n@ccclass\nexport default class PaintingColor extends ChapterGameComponent {\n    @property(cc.Node)\n    public shading: cc.Node = null;\n\n    @property(cc.Sprite)\n    public paintSp: cc.Sprite = null;\n\n    @property(cc.SpriteFrame)\n    public paintSpArr: cc.SpriteFrame[] = [];\n\n    @property(cc.Sprite)\n    public boardSp: cc.Sprite = null;\n\n    @property(cc.SpriteFrame)\n    public boardSpArr: cc.SpriteFrame[] = [];\n\n    @property(cc.Prefab)\n    public kongItem: cc.Prefab = null;\n\n    @property(cc.Node)\n    public itemBoard: cc.Node = null;\n\n    @property(cc.Node)\n    public lightNode: cc.Node = null;\n\n    @property(cc.Node)\n    public boxNode: cc.Node = null;\n\n    @property(cc.Node)\n    public showNode: cc.Node = null;\n\n    @property(cc.Sprite)\n    public bgSp: cc.Sprite = null;\n\n    @property(cc.SpriteFrame)\n    public bgSpArr: cc.SpriteFrame[] = [];\n\n\n    @property(sp.Skeleton)\n    public fachen: sp.Skeleton = null;\n\n    @property(sp.Skeleton)\n    public dolphineAin: sp.Skeleton = null;\n\n    @property(sp.Skeleton)\n    public heiyanAin: sp.Skeleton = null;\n\n    // @property(sp.SkeletonData)\n    // skedataArr:sp.SkeletonData[]= [];\n\n    @property(cc.Node)\n    public blockNode: cc.Node = null;\n\n    public curNode: cc.Node = null;\n\n\n    public overTag: boolean = true;\n    public cur_index = 0;\n    public sounds_arr = ['blue', 'red', 'yel', 'blue'];\n    public gameWordData: string[] = ['蓝色'];\n    public guidehandle = null;\n\n    // 任务组件参数\n    public taskData: GameTaskInitParam = null;\n    public gameTaskCom: gameTask = null;\n\n    public isShowRecord: boolean;\n    public BUNDLE_NAME: string = 'paintingColor';\n\n    public onLoad() {\n        this.taskData = {\n            bundleName: this.BUNDLE_NAME,\n            imgList: ['res/task1', 'res/task2']\n        };\n        super.onLoad();\n        EventSystem.on(FOLLOW_MODULE_TO_CLIENT, this.recordResult, this);\n        AudioManager.playLoopEffect(this.BUNDLE_NAME, 'audio/bg');\n    }\n\n    public start() {\n        this.dolphineAin.setCompleteListener(this.dolphineAinback.bind(this));\n        this.fachen.setCompleteListener(this.fachenback.bind(this));\n        EventSystem.emit(LIFE_CYCLE_CREATED);\n        EventSystem.on(LIFE_CYCLE_BLOCK, this.onBlock, this);\n        EventSystem.on(LIFE_CYCLE_UNBLOCK, this.unBlock, this);\n\n        this.initTaskComp();\n        this.scheduleOnce(() => {\n            this.myShowTaskFun(0, false);\n        }, 1)\n    }\n\n    public myShowTaskFun(mid: number, mtag: boolean) {\n        let showParams: GameTaskShowParam = {\n            taskIndex: mid,\n            complete: mtag,\n            callFunc3: () => {\n                this.shading.active = false;\n                switch (mid) {\n                    case 0:\n                        if (!mtag) {// 一阶段未完成\n                            this.node.getChildByName('paintboard').active = true;\n                            this.boxNode.active = true;\n                            this.assembleItem();\n                            // this.testgame2()\n                        } else {// 一阶段完成\n                            this.showGameTow();\n                        }\n                        break;\n                    case 1:\n                        if (!mtag) {\n                            this.shakeItem();\n                        } else {\n                            this.gameOver();\n                        }\n                        break;\n                    default:\n                        break;\n                }\n            },\n        }\n        this.shading && (this.shading.active = true);\n        this.gameTaskCom.showTaskList(showParams);\n    }\n\n    // 任务组件\n    public initTaskComp(): Promise<void> {\n        return new Promise<void>((resolve, reject) => {\n            if (this.taskData) {\n                let bundle = cc.assetManager.getBundle(\"common\");\n                if (bundle) {\n                    bundle.load(\"gameTask/gameTask\", cc.Prefab, (error: Error, assets: cc.Prefab) => {\n                        let taskNode = cc.instantiate(assets);\n                        this.gameTaskCom = taskNode.getComponent(\"gameTask\");\n                        this.gameTaskCom && this.gameTaskCom.initData(this.taskData);\n                        taskNode.parent = this.node;\n                        resolve();\n                    });\n                } else {\n                    reject(\"common bundle nil!\");\n                }\n            } else {\n                reject(\"task data nil!\");\n            }\n\n        }).catch((error) => {\n            cc.error(`initTaskComp error: ${error}`);\n        });\n    }\n\n    public testgame2() {// 测试游戏第二流程\n        this.cur_index = 4;\n        this.boxNode.active = false;\n        this.lightNode.active = false;\n        this.itemBoard.active = false;\n        this.showAllPainting()\n    }\n\n    public onDestroy() {\n        EventSystem.off(LIFE_CYCLE_BLOCK, this.onBlock, this);\n        EventSystem.off(LIFE_CYCLE_UNBLOCK, this.unBlock, this);\n        EventSystem.off(FOLLOW_MODULE_TO_CLIENT, this.recordResult, this);\n    }\n\n    public dolphineAinback(date) {\n        let aniDate = date;\n        if (aniDate.animation.name === \"tiaoyue\") {\n            this.playSpine(this.dolphineAin, \"daiji\", true);\n        } else if (aniDate.animation.name === \"daiji\") {\n            let mnode = this.bgSp.node.getChildByName('haitunNode');\n            cc.tween(mnode)\n                .to(2, { opacity: 0 })\n                .call(() => {\n                    mnode.destroy();\n                    this.nextFollowStep()// 海豚跟读正确 show动画完毕\n                })\n                .start()\n        }\n    }\n\n    public fachenback(date) {\n        let aniDate = date;\n        if (aniDate.animation.name === \"Lanse\") {\n            this.fachen.node.active = false;\n        }\n    }\n\n    public assembleItem(ctag: number = 1) {\n        this.boxNode.getComponent('pdragItem').initItem(this.cur_index);\n\n        this.paintSp.node.active = false;\n        this.boardSp.spriteFrame = this.boardSpArr[this.cur_index];\n\n        // this.itemBoard.destroyAllChildren();\n        for (let i = 0; i < ctag; i++) {\n            let item = cc.instantiate(this.kongItem);\n            let itemCom = item.getComponent('kongItem');\n            itemCom.initItem(i, this.cur_index, this);\n            this.itemBoard.addChild(item);\n        }\n    }\n\n    public guideColorBox() {\n        cc.tween(this.boxNode)\n            .by(0.2, { scale: 0.1 })\n            .by(0.2, { scale: -0.1 })\n            .union()\n            .repeat(2)\n            .start()\n    }\n\n    public splashColorAni() {\n        this.setBlock(true);\n        let item = this.itemBoard.getChildByName('kongItem').getComponent('kongItem');\n        item.splashColor();\n    }\n\n    public showPaintSp() {// item 动画完成 回调\n        AudioManager.playEffect(this.BUNDLE_NAME, 'audio/' + this.sounds_arr[this.cur_index]);\n        this.paintSp.node.active = true;\n        this.paintSp.spriteFrame = this.paintSpArr[this.cur_index];\n    }\n\n    public roundEnd() {\n        this.lightNode.active = true;\n        AudioManager.playEffect(this.BUNDLE_NAME, 'audio/grate');\n        this.scheduleOnce(() => this.nextRound(), 3)\n    }\n\n    public nextRound() {\n        this.lightNode.active = false;\n        this.cur_index++;\n        if (this.cur_index >= 4) {\n            cc.log('game one end')\n            this.itemBoard.active = false;\n            this.showAllPainting();\n            return;\n        }\n\n        this.assembleItem(1);\n    }\n\n    public showAllPainting() {\n        this.showNode.active = true;\n        this.showNode.opacity = 0;\n        cc.tween(this.showNode)\n            .to(0.5, { opacity: 255 })\n            .start()\n\n        this.scheduleOnce(() => this.myShowTaskFun(0, true), 2);\n    }\n\n    public showGameTow() {\n        this.showNode.getComponent(cc.Sprite).spriteFrame = null;\n        this.bgSp.spriteFrame = this.bgSpArr[0];\n        cc.tween(this.showNode)\n            .by(1, { y: -200 })\n            .call(() => {\n                this.bgSp.node.getChildByName('kuang').active = true;\n                this.myShowTaskFun(1, false);\n            })\n            // .parallel(\n            //     cc.tween().by(1,{scale:-0.2}),\n            //     cc.tween().by(1,{y:-150})\n            // )\n            .start()\n    }\n\n    public shakeItem() {\n        this.isShowRecord = false;\n        for (const iterator of this.showNode.children) {\n            cc.tween(iterator)\n                .by(0.1, { angle: 10 })\n                .by(0.1, { angle: -10 })\n                .by(0.1, { angle: -10 })\n                .by(0.1, { angle: 10 })\n                .union()\n                .repeat(2)\n                .call(() => {\n                    // 跟读\n                    this.playFollowEff();\n                })\n                .start()\n        }\n    }\n\n    public playFollowEff() {\n        if (this.isShowRecord) {\n            return;\n        }\n        this.isShowRecord = true;\n        // EventSystem.emit(FOLLOW_CLIENT_TO_MODULE, { eventName: \"display\" });\n        this.gameRunRecord();\n        // AudioManager.playEffect(this.BUNDLE_NAME, 'audio/blue', () => this.gameRunRecord());\n    }\n\n    public nextFollowStep() {\n        this.cur_index++;\n        if (this.cur_index >= 6) {\n            cc.log('game all end')\n            this.myShowTaskFun(1, true);\n            return\n        }\n        this.showNode.children.map((node) => {\n            if (node != this.curNode) {\n                node.active = true;\n            }\n        });\n\n        this.shakeItem();\n    }\n\n    /** 运行跟读环节 */\n    private gameRunRecord() {\n        cc.log(\"gameRunRecord~~~\");\n        cc.log(`${this.gameWordData[0]},${this.BUNDLE_NAME},audio/blue,res/read`);\n        this.startRecordAudio(this.gameWordData[0], this.BUNDLE_NAME, `audio/blue`, `res/read`);\n        if (CC_PREVIEW) {\n            this.scheduleOnce(() => {\n                let result = { data: { success: true, eventName: \"ResultCb\" } }\n                this.recordResult(result);\n            }, 1);\n        }\n    }\n\n    /** 检测返回来的结果 */\n    private recordResult(result) {\n        cc.log(\"recordResult\" + result.data);\n        if (result.data.eventName == \"ResultCb\") {\n            // let score = result.data.extra.score;\n            if (result.data.success) {\n                this.sayRight()\n            } else {\n                this.sayWrong()\n            }\n        }\n    }\n\n    public sayRight() {\n        this.moveToCenterAin(true);\n    }\n\n    public sayWrong() {\n        this.moveToCenterAin(false);\n    }\n\n    public moveToCenterAin(saytag: boolean) {\n        let pNode: cc.Node = null;\n        if (this.cur_index == 4) {\n            pNode = this.showNode.getChildByName('dolphine_show');\n        } else if (this.cur_index == 5) {\n            pNode = this.showNode.getChildByName('yingwu_show');\n        }\n        this.curNode = pNode;\n        this.showNode.children.map((node)=>{\n            if (node != this.curNode) {\n                node.active = false;\n            }\n        })\n        let kp = this.bgSp.node.getChildByName('kuang').position;\n        let kwp = this.bgSp.node.convertToWorldSpaceAR(kp)\n        let kcp = pNode.parent.convertToNodeSpaceAR(kwp);\n        cc.tween(pNode)\n            .to(1, { position: kcp })\n            .call(() => {\n                this.fachen.node.position = kcp;\n                this.fachen.node.y -= 300;\n                this.fachen.node.active = true;\n                this.playSpine(this.fachen, \"Lanse\", false);\n                if (saytag) {\n                    this.disappearNode(pNode, true);\n                } else {\n                    this.scheduleOnce(() => {\n                        pNode.angle = -20;\n                        this.heiyanAin.node.active = true;\n                        this.playSpine(this.heiyanAin, 'animation', false);\n                        this.disappearNode(pNode, false);\n                    }, 1)\n                }\n\n            })\n            .start()\n    }\n\n    public disappearNode(pNode: cc.Node, mtag: boolean) {\n        cc.tween(pNode)\n            .to(1, { opacity: 0 })\n            .call(() => {\n                pNode.destroy();\n                if (mtag) {// 跟读正确的动画show\n                    if (this.cur_index == 4) {\n                        this.bgSp.node.getChildByName('haitunNode').active = true;\n                    } else if (this.cur_index == 5) {\n                        let yingwu: cc.Node = this.bgSp.node.getChildByName('yingwuNode');\n                        yingwu.active = true;\n                        let bird = yingwu.getChildByName('niao-fei');\n                        cc.tween(bird)\n                            .to(3, { position: cc.v3(136, -156, 0) })\n                            .call(() => {\n                                bird.destroy()\n                                yingwu.getChildByName('niao').active = true;\n                                cc.tween(yingwu)\n                                    .delay(2)\n                                    .to(2, { opacity: 0 })\n                                    .call(() => {\n                                        yingwu.destroy();\n                                        this.nextFollowStep()// 鹦鹉跟读正确 show动画完毕\n                                    })\n                                    .start()\n                            })\n                            .start()\n                    }\n                } else {\n                    // 跟读错误的下一步\n                    this.nextFollowStep()\n                }\n            })\n            .start()\n    }\n\n    public onDragStart() {\n        this.unschedule(this.guidehandle);\n    }\n\n    public setBlock(tag: boolean) {\n        this.blockNode.active = tag;\n        if (!tag) {\n            this.guideColorBox();\n            this.schedule(this.guidehandle = () => {\n                // AudioManager.playEffect('rocketProject','audio/yel');\n                this.guideColorBox();\n            }, 5)\n        }\n    }\n\n    public playSpine(spNode: sp.Skeleton, spName: string, tg: boolean) {\n        spNode.clearTracks();\n        spNode.setToSetupPose();\n        spNode.setAnimation(0, spName, tg);\n    }\n\n    public gameOver() {\n        cc.log('通知容器 游戏结束')\n        EventSystem.off(FOLLOW_MODULE_TO_CLIENT, this.recordResult, this);\n\n        if (this.overTag) {\n            this.overTag = false;\n            EventSystem.emit(LIFE_CYCLE_COMPLETE);\n        }\n\n    }\n\n    public onBlock() {\n        cc.log('game blocked')\n        cc.audioEngine.pauseMusic();\n        cc.audioEngine.pauseAllEffects();\n        // cc.game.pause();\n    }\n\n    public unBlock() {\n        cc.log('game unblocked')\n        cc.audioEngine.resumeMusic();\n        cc.audioEngine.resumeAllEffects();\n        // cc.game.resume();\n    }\n    // update (dt) {}\n}\n","import Hand from \"../../../common/hand/Hand\";\nimport AudioManager from \"../../../kit/system/audio/AudioManager\";\nimport PaintingColor from \"../scr/paintingColor\";\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class NewClass extends cc.Component {\n\n    // @property(cc.SpriteFrame)\n    // cardSpArr:cc.SpriteFrame[]=[];\n\n    // @property(cc.Sprite)\n    // cardSp:cc.Sprite = null;\n\n    @property(cc.Prefab)\n    guideHand: cc.Prefab = null;\n\n    @property(cc.Node)\n    checkBox: cc.Node = null;\n\n    @property(cc.Node)\n    colorBoxArr: cc.Node[] = [];\n\n    @property(PaintingColor)\n    mainCom: PaintingColor = null;\n\n    // 引导起始位置\n    @property(cc.Node)\n    guidePos: cc.Node = null;\n\n    curNode: cc.Node = null;\n    isCanMove = true;\n    mround = 0;\n    PosiArr = [cc.v3(-13, -140, 0), cc.v3(-167, -140, 0), cc.v3(13, -30, 0), cc.v3(-127, -30, 0)]\n    sounds_arr = ['blue', 'red', 'yel', 'blue'];\n\n    public hand: Hand = null;\n\n    private timerKey: any;\n    private handNode: cc.Node;\n    private gameCount: number = 0;\n    private gameHandCount = 0; // 小手引导次数\n\n\n    onLoad() {\n        this.handNode = cc.instantiate(this.guideHand);\n        this.handNode.active = false;\n        this.node.parent.addChild(this.handNode);\n        this.hand = this.handNode.getComponent(Hand);\n        this.handNode.on(cc.Node.EventType.TOUCH_START, (event) => {\n            this.hideHand();\n            this.showGuide();\n        })\n        this.node.on(cc.Node.EventType.TOUCH_MOVE, this.onTouchMove, this);\n        this.node.on(cc.Node.EventType.TOUCH_START, this.touchStart, this);\n        this.node.on(cc.Node.EventType.TOUCH_END, this.touchEnd, this);\n        this.node.on(cc.Node.EventType.TOUCH_CANCEL, this.touchEnd, this);\n    }\n\n    onDestroy() {\n        this.node.off(cc.Node.EventType.TOUCH_MOVE, this.onTouchMove, this);\n        this.node.off(cc.Node.EventType.TOUCH_START, this.touchStart, this);\n        this.node.off(cc.Node.EventType.TOUCH_END, this.touchEnd, this);\n        this.node.off(cc.Node.EventType.TOUCH_CANCEL, this.touchEnd, this);\n    }\n\n    initItem(round) {\n        this.mround = round;\n        this.curNode = this.colorBoxArr[this.mround];\n        this.setCanTouch(true)\n    }\n\n    start() {\n        this.handGuide();\n        // this.cardSp.spriteFrame = this.cardSpArr[this.mid];\n        // this.node.position = this.PosiArr[this.mid];\n        // this.initItem(0)\n    }\n\n    touchStart() {\n        if (!this.isCanMove) {\n            return;\n        }\n        this.hideHand();\n        this.showGuide();\n        AudioManager.playEffect('paintingColor', 'audio/' + this.sounds_arr[this.mround]);\n        // this.curNode.zIndex = 9;\n        this.mainCom.onDragStart();\n    }\n\n    touchEnd() {\n        if (!this.isCanMove) {\n            return;\n        }\n        this.setCanTouch(false)\n        // this.curNode.zIndex = 0;\n\n        let myv2 = cc.v2(this.curNode.position.x, this.curNode.position.y);\n        let checkRect = this.checkBox.getBoundingBox();\n        //if (checkRect.contains(myv2)) {\n        cc.log('into check box === ')\n        this.curNode.active = false;\n        this.mainCom.splashColorAni();\n        this.gameCount++;\n        // }else{\n        //     cc.tween(this.curNode)\n        //     .to(0.2,{position:this.PosiArr[this.mround]})\n        //     .start()\n        //     this.scheduleOnce(()=>{\n        //         this.setCanTouch(true)\n        //     },0.5)\n        // }\n    }\n\n    // 引导至盒子\n    private guide2Target(): void {\n        this.hand.setTargetNode(this.guidePos, this.node.parent);\n        this.hand.playDown(() => {\n            cc.tween(this.hand.cursor).to(1, { x: 0, y: 0 }).call(() => {\n                this.hand.playUp(() => {\n                    this.onHandCompleted();\n                });\n            }).start();\n        });\n    }\n\n    onTouchMove(touchEvent) {\n        if (!this.isCanMove) {\n            return;\n        }\n        // cc.log('move')\n        //通过touchEvent获取当前触摸坐标点\n        let location = touchEvent.getLocation();\n        // this.curLoc = location;\n        //修改节点位置，注意要使用父节点进行对触摸点进行坐标转换\n        let bendiLoc = this.node.convertToNodeSpaceAR(location);\n        if (bendiLoc.x > -200 && bendiLoc.x < 200) {\n            this.curNode.x = bendiLoc.x;\n        }\n        if (bendiLoc.y > -200 && bendiLoc.y < 200) {\n            this.curNode.y = bendiLoc.y;\n        }\n    }\n\n    setCanTouch(tag: boolean) {\n        this.isCanMove = tag;\n        if (tag) {\n            this.showGuide();\n        }\n    }\n\n    public onHandCompleted() {\n        this.gameHandCount += 1;\n        if (this.gameHandCount >= 2) {\n            this.hideHand();\n            if (this.isCanMove) {\n                this.showGuide();\n            }\n            return;\n        }\n        this.handGuide();\n    }\n    public showGuide(): void {\n        if (this.timerKey) {\n            clearTimeout(this.timerKey);\n        }\n        this.timerKey = setTimeout(() => {\n            this.handGuide();\n        }, 5000);\n    }\n\n    private handGuide() {\n        if (!this.isCanMove) {\n            return;\n        }\n        if (this.gameCount < 4) {\n            this.hand.cursor.position = cc.v3(-297, -115);\n            this.handNode.active = true;\n            this.guide2Target();\n        }\n    }\n    private hideHand(): void {\n        this.hand.hide();\n        this.gameHandCount = 0;\n        this.hand.cursor.stopAllActions();\n        if (this.timerKey) {\n            clearTimeout(this.timerKey);\n        }\n    }\n    // update (dt) {}\n}\n"],"file":"index.js"}