{"version":3,"sources":["assets/bundles/game_lesson_5/src/gameMain.ts","assets/bundles/game_lesson_5/src/gameOverLayer.ts","assets/bundles/game_lesson_5/src/mission_1.ts","assets/bundles/game_lesson_5/src/mission_2.ts","assets/bundles/game_lesson_5/src/mission_3.ts","assets/bundles/game_lesson_5/src/player.ts","assets/bundles/game_lesson_5/src/qiqiu.ts"],"names":["events_1","require","AudioManager_1","EventSystem_1","player_1","CC_EDITOR","_a","cc","_decorator","ccclass","property","gameMain","_super","__extends","_this","apply","this","arguments","_player","BGMID","vsLayerAudio","gameOverAudio","playerNode","mask","gameLayer","gameOverLayer","backgrounds","missons","vsNodes","monsters","playerHpNodes","touchTime","missonIndex","playerHp","bgDefaultX","prototype","onLoad","getComponent","default","on","GameRestart","GameQuit","MissonComplete","playerHurt","fixScreen","bo","Widget","bottom","h","bg_h","real_h","Canvas","instance","designResolution","height","fix_h","i","length","start","initGame","Animation","gameOverBack","bind","GameOver","x","log","playMusic","tween","node","delay","call","playerRun","changeMisson","play","movePlayer","event","active","scheduleOnce","off","index","emit","LIFE_CYCLE_COMPLETE","vsn","instantiate","addChild","y","destroy","audioEngine","game","hearts","getChildByName","by","stop","name","destroyAllChildren","reStartPlayer","forEach","Sprite","fillRange","left","data","onDestroy","__decorate","type","displayName","AudioClip","Node","Prefab","Component","exports","replayBtnCall","target","nextBtnCall","LIFE_CYCLE_BACK","mission1","monster","shields","gameAudios","attackAudio","monsterTurn","playerTurn","recordTimes","touchGameAnswer","wordData","monsterSkin","isTest","FOLLOW_MODULE_TO_CLIENT","recordResult","Button","interactable","runGameMonsterTurn","playGameWord","schedule","runGamePlayerTurn","recordData","evaluatingType","evaluatingText","tryTimes","evaluationScore","recordTime","FOLLOW_CLIENT_TO_MODULE","eventName","extra","url","configs","imgUrl","startRecordData","bundleName","audioUrl","iconPath","playerWin","result","console","success","monsterWin","shieldTouch","unschedule","n","Number","to","setSkin","clearTracks","setCompleteListener","addAnimation","setAnimation","onHurt","hp","PlayerAtkWrong","gameWin","PlayerAtkRight","zIndex","sp","Skeleton","mission2","hulu","gameIndex","changPlayerHp","gameRun","checkResult","sk","opacity","scaleX","scaleY","defaultX_1","defaultY_1","onHurt_2","TimerSystem_1","handNode","BallItem","targetsPos","ballMaxNum","ballNumNow","CountBall","gameBegin","addGuidHandTimer","guildHandTimer","clearGuidHand","t","doOnce","isValid","macro","MAX_ZINDEX","clearTimer","getBallColorNum","dis","Math","random","playerSp","px_1","py_1","player","heartContainer","skins","sec","distance","timeScale","Playerfly","PlayerDie","Layout","NewClass","qiqiu","qiqiu2","onClickCall","id","setFinishCallback","spName","_sp"],"mappings":"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","sourcesContent":["import { LIFE_CYCLE_COMPLETE } from \"../../../kit/events/events\";\nimport AudioManager from \"../../../kit/system/audio/AudioManager\";\nimport EventSystem from \"../../../kit/system/event/EventSystem\";\nimport player from \"./player\";\n\nif (CC_EDITOR) {\n\n    // 重写update方法 达到在编辑模式下 自动播放动画的功能\n    sp.Skeleton.prototype['update'] = function (dt) {\n        if (CC_EDITOR) {\n            cc['engine']._animatingInEditMode = 1;\n            cc['engine'].animatingInEditMode = 1;\n        }\n        if (this.paused) return;\n\n        dt *= this.timeScale * sp['timeScale'];\n\n        if (this.isAnimationCached()) {\n\n            // Cache mode and has animation queue.\n            if (this._isAniComplete) {\n                if (this._animationQueue.length === 0 && !this._headAniInfo) {\n                    let frameCache = this._frameCache;\n                    if (frameCache && frameCache.isInvalid()) {\n                        frameCache.updateToFrame();\n                        let frames = frameCache.frames;\n                        this._curFrame = frames[frames.length - 1];\n                    }\n                    return;\n                }\n                if (!this._headAniInfo) {\n                    this._headAniInfo = this._animationQueue.shift();\n                }\n                this._accTime += dt;\n                if (this._accTime > this._headAniInfo.delay) {\n                    let aniInfo = this._headAniInfo;\n                    this._headAniInfo = null;\n                    this.setAnimation(0, aniInfo.animationName, aniInfo.loop);\n                }\n                return;\n            }\n\n            this._updateCache(dt);\n        } else {\n            this._updateRealtime(dt);\n        }\n    }\n}\n\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class gameMain extends cc.Component {\n\n\n    @property({ type: player, displayName: \"player\" })\n    _player: player = null;\n\n\n    BGMID: number = -1;\n\n    @property({ type: cc.AudioClip })\n    vsLayerAudio: cc.AudioClip = null;\n\n    @property({ type: cc.AudioClip })\n    gameOverAudio: cc.AudioClip = null;\n\n    @property(cc.Node)\n    playerNode: cc.Node = null;\n\n    @property(cc.Node)\n    mask: cc.Node = null;\n\n    @property(cc.Node)\n    gameLayer: cc.Node = null;\n\n    @property(cc.Prefab)\n    gameOverLayer: cc.Prefab = null;\n\n    @property({ type: [cc.Node] })\n    backgrounds: cc.Node[] = [];\n\n    @property({ type: [cc.Prefab] })\n    missons: cc.Prefab[] = [];\n\n    @property({ type: [cc.Prefab] })\n    vsNodes: cc.Prefab[] = [];\n\n    @property({ type: [cc.Node] })\n    monsters: cc.Node[] = [];\n\n    @property({ type: [cc.Node] })\n    playerHpNodes: cc.Node[] = [];\n\n    touchTime: number = 0;\n\n    missonIndex: number = 0;\n\n    playerHp: number = 5;\n\n    bgDefaultX: number = 0;\n\n    // LIFE-CYCLE CALLBACKS:\n\n    onLoad() {\n\n        if (this.playerNode)\n            this._player = this.playerNode.getComponent(\"player\");\n\n        // EventSystem.on(\"Day5_Game_Over\", this.GameOver, this);\n        EventSystem.on(\"Day5_Game_Restart\", this.GameRestart, this);\n        EventSystem.on(\"Day5_Game_Next\", this.GameQuit, this);\n        EventSystem.on(\"Day5_Misson_Next\", this.MissonComplete, this);//Day5_Player_Hurt\n        EventSystem.on(\"Day5_Player_Hurt\", this.playerHurt, this)\n\n    }\n\n    fixScreen() {\n        let bo = this.playerNode.getComponent(cc.Widget).bottom;\n        let h = 190;\n        let bg_h = 750;\n        let real_h = cc.Canvas.instance.designResolution.height;\n        let fix_h = h * (real_h / bg_h);\n        this.playerNode.getComponent(cc.Widget).bottom = bo + fix_h - h;\n        for (let i = 0; i < this.monsters.length; i++) {\n            this.monsters[i].getComponent(cc.Widget).bottom += (fix_h - h);\n        }\n    }\n\n    start() {\n        this.fixScreen();\n        this.initGame();\n        this.playerHpNodes[0].getComponent(cc.Animation).on(\"finished\",this.gameOverBack.bind(this),this)\n    }\n\n    gameOverBack(){\n        if (this.playerHp == 0) {\n            this.GameOver();\n        }\n    }\n\n    initGame() {\n        this.bgDefaultX = this.backgrounds[0].x;\n        cc.log(this.bgDefaultX);\n        AudioManager.playMusic(\"game_lesson_5\", \"res/audios/BGM_dachuangguan-01\");\n        cc.tween(this.node).delay(1).call(() => {\n            this._player.playerRun(3, 400, 1);\n        }).delay(4).call(() => {\n            this._player.playerRun(1, 450, 2);\n        }).delay(2).call(() => {\n            this.changeMisson(this.missonIndex);\n        }).start();\n\n    }\n\n    playerHurt() {\n        cc.log(\"player hp -1\")\n        this.playerHp -= 1;\n        this.playerHpNodes[this.playerHp].getComponent(cc.Animation).play(\"hurt\");\n    }\n\n    movePlayer(event) {\n        cc.log(\"touch\")\n        this.mask.active = true;\n        this._player.playerRun(1, 150);\n        this.scheduleOnce(() => {\n            this.mask.active = false;\n            this.touchTime += 1;\n            if (this.touchTime == 3) {\n                this.node.off(\"touchend\", this.movePlayer, this);\n                this.scheduleOnce(() => {\n                    this.changeMisson(this.missonIndex);\n                }, 1)\n            }\n        }, 1)\n\n    }\n\n    changeMisson(index: number) {\n        if (index >= 3) {\n            EventSystem.emit(LIFE_CYCLE_COMPLETE);\n            return;\n        }\n        let vsn = cc.instantiate(this.vsNodes[index]);\n        this.node.addChild(vsn);\n        vsn.y = 900;\n        vsn.getComponent(cc.Animation).on(\"finished\", () => {\n            vsn.destroy();\n\n\n        }, this)\n        vsn.getComponent(cc.Animation).play();\n        cc.audioEngine.play(this.vsLayerAudio, false, 1.0);\n        this.scheduleOnce(() => {\n            let game = cc.instantiate(this.missons[index]);\n            this.gameLayer.addChild(game);\n            this.playerNode.active = false;\n            this.monsters[index].active = false;\n            EventSystem.emit(\"Player_Hp_Init\", this.playerHp);\n        }, 1)\n    }\n\n    MissonComplete() {\n        this.missonIndex += 1;\n        this.playerNode.active = true;\n        for (let i = this.playerHp; i < 5; i++) {\n            this._player.hearts[i].getChildByName(\"heart1\").active = false;\n        }\n        this._player.playerRun(6, 0, 2);\n        for (let i = 0; i < 4; i++) {\n            cc.tween(this.backgrounds[i]).by(6, { x: -1334 }).start();\n        }\n        this.scheduleOnce(() => { this.changeMisson(this.missonIndex) }, 6)\n    }\n\n    GameOver() {\n        cc.log(\"GameOver ========>\");\n        let node = cc.instantiate(this.gameOverLayer);\n        this.node.addChild(node);\n        cc.audioEngine.stop(this.BGMID);\n        cc.audioEngine.play(this.gameOverAudio, false, 1.0);\n        node.name = \"gameOverLayer\"\n        this.gameLayer.destroyAllChildren();\n    }\n\n    GameRestart() {\n        this.gameLayer.destroyAllChildren()\n        // this.node.getChildByName(\"gameOverLayer\").destroy();\n        this.playerHp = 5;\n        this._player.reStartPlayer();\n        this.touchTime = 0;\n        this.missonIndex = 0;\n        this.playerNode.x = -867;\n        this.playerNode.active = true;\n        this.monsters.forEach((node) => {\n            node.active = true;\n        });\n        this.backgrounds.forEach((node, i) => {\n            node.active = false;\n            node.x = 1333 * i;\n        });\n        this.playerHpNodes.forEach((node) => {\n            node.getChildByName(\"heart1\").getComponent(cc.Sprite).fillRange = 1;\n        })\n        this.scheduleOnce(() => {\n            this.backgrounds.forEach((node, i) => {\n                node.active = true;\n                node.getComponent(cc.Widget).left = 1333 * i;\n            });\n        })\n\n        this.initGame();\n    }\n\n    GameQuit(event, data) {\n        //  cc.audioEngine.stop(this.BGMID);\n    }\n\n    onDestroy() {\n        // EventSystem.off(\"Day5_Game_Over\", this.GameOver, this);\n        EventSystem.off(\"Day5_Game_Restart\", this.GameRestart, this);\n        EventSystem.off(\"Day5_Game_Next\", this.GameQuit, this);\n        EventSystem.off(\"Day5_Misson_Next\", this.MissonComplete, this);\n        EventSystem.off(\"Day5_Player_Hurt\", this.playerHurt, this)\n        this.playerHpNodes[0].getComponent(cc.Animation).on(\"finished\",this.gameOverBack.bind(this),this)\n        //  cc.audioEngine.stop(this.BGMID);\n    }\n\n    // update (dt) {}\n}\n","import { LIFE_CYCLE_BACK } from \"../../../kit/events/events\";\nimport EventSystem from \"../../../kit/system/event/EventSystem\";\n\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class gameOverLayer extends cc.Component {\n\n\n\n    // LIFE-CYCLE CALLBACKS:\n\n    onLoad() {\n\n\n    }\n\n    start() {\n\n    }\n\n    replayBtnCall(event, data) {\n        event.target.active = false\n        cc.log(\"replayBtnCall1111\");\n        EventSystem.emit(\"Day5_Game_Restart\")\n        this.node.destroy()\n    }\n\n    nextBtnCall(event, data) {\n        EventSystem.emit(LIFE_CYCLE_BACK)\n    }\n\n    // update (dt) {}\n}\n\n","import { FOLLOW_CLIENT_TO_MODULE, FOLLOW_MODULE_TO_CLIENT, LIFE_CYCLE_COMPLETE } from \"../../../kit/events/events\";\nimport EventSystem from \"../../../kit/system/event/EventSystem\";\nimport player from \"./player\";\n\n\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class mission1 extends cc.Component {\n\n\n\n    @property(player)\n    _player: player = null\n\n    @property(cc.Node)\n    playerNode: cc.Node = null;\n\n    @property(sp.Skeleton)\n    monster: sp.Skeleton = null;\n\n    @property({ type: cc.Node })\n    shields: cc.Node[] = []\n\n    @property({ type: [cc.AudioClip] })\n    gameAudios: cc.AudioClip[] = []\n\n    @property({ type: cc.AudioClip })\n    attackAudio: cc.AudioClip = null;\n\n    monsterTurn: number = 0;\n\n    playerTurn: number = 0;\n\n    recordTimes: number = 0;\n\n    touchGameAnswer: number[] = [1, 0, 2];\n\n    wordData: string[] = [\n        \"红色\", \"黄色\", \"蓝色\"\n    ]\n\n    monsterSkin: string[] = [\n        \"hongse\", \"huangse\", \"lanse\"\n    ]\n\n    isTest: boolean = false\n\n\n    // LIFE-CYCLE CALLBACKS:\n\n    onLoad() {\n\n        EventSystem.on(FOLLOW_MODULE_TO_CLIENT, this.recordResult, this);\n        //  this.gameWin();\n\n    }\n\n    start() {\n        // this.node.on(\"touchend\", this.monsterWin, this);\n\n        if (this.playerNode)\n            this._player = this.playerNode.getComponent(\"player\");\n\n\n        this.shields.forEach((node, i) => {\n            node.getComponent(cc.Button).interactable = false;\n        })\n        this.scheduleOnce(() => {\n            this.runGameMonsterTurn(this.monsterTurn);\n        }, 3);\n\n\n    }\n\n    playGameWord() {\n        cc.audioEngine.play(this.gameAudios[this.monsterTurn], false, 1.0);\n    }\n\n    runGameMonsterTurn(index: number) {\n        //播放声音\n\n        cc.audioEngine.play(this.gameAudios[index], false, 1.0);\n        this.schedule(this.playGameWord, 5);\n\n        //\n\n        this.shields.forEach((node, i) => {\n            node.active = true;\n            node.y = 100 - i * 130;\n            node.getComponent(cc.Button).interactable = true;\n        })\n\n    }\n\n    runGamePlayerTurn(index: number) {\n\n        //let id = cc.audioEngine.play(this.gameAudios[index], false, 1.0);\n\n        // cc.audioEngine.setFinishCallback(id, () => {\n        //  EventSystem.emit(LIFE_CYCLE_COMPLETE);\n        let recordData = {\n            evaluatingType: 1,\n            evaluatingText: this.wordData[index],\n            tryTimes: 0,\n            evaluationScore: 30,\n            recordTime: 3,\n\n        }\n        EventSystem.emit(FOLLOW_CLIENT_TO_MODULE, { eventName: 'initComponent', extra: recordData });//初始化录音\n\n        let url = \"res/audios/\" + this.monsterSkin[index];\n        let configs = [\"img_red\", \"img_yellow\", \"img_blue\" ]\n        let imgUrl = \"res/images/\" + configs[index];\n        let startRecordData = {\n            evaluatingText: this.wordData[index],\n            bundleName: \"game_lesson_5\",\n            audioUrl: url, \n            iconPath: imgUrl\n        }\n        EventSystem.emit(FOLLOW_CLIENT_TO_MODULE, { eventName: 'startRecord', extra: startRecordData })//开始录音\n\n        if (this.isTest) {\n            this.scheduleOnce(() => {\n                this.playerWin(this.playerTurn, 2);\n            }, 3)\n        }\n\n        //   })\n\n    }\n    recordResult(result) {\n        console.log(\"recordResult\" + result.data);\n        if (result.data.eventName == 'ResultCb') {\n            if (result.data.success) {\n                this.playerWin(this.playerTurn, 2);\n            }\n            else {\n                if (this.recordTimes == 0) {\n                    this.monsterWin(this.playerTurn, 2);\n                }\n                else {\n                    this.playerWin(this.playerTurn, 2);\n                }\n\n            }\n        }\n\n    }\n\n    shieldTouch(event, data) {\n        this.unschedule(this.playGameWord);\n        let n = Number(data);\n        if (n == this.touchGameAnswer[this.monsterTurn]) {\n            for (let i = 0; i < this.shields.length; i++) {\n                if (n != i) {\n                    this.shields[i].active = false;\n                }\n                this.shields[i].getComponent(cc.Button).interactable = false;\n            }\n            cc.tween(this.shields[n]).to(1, { y: 0 }).call(() => {\n                this.playerWin(this.monsterTurn, 1);\n            }).delay(1).call(() => {\n                this.shields[n].active = false;\n            }).start();\n        }\n        else {\n            for (let i = 0; i < this.shields.length; i++) {\n                this.shields[i].active = false;\n            }\n            this.monsterWin(this.monsterTurn, 1);\n        }\n    }\n\n    monsterWin(index: number, type: number) {\n        if (type == 1) {\n            this.monster.setSkin(this.monsterSkin[index]);\n            this.monsterTurn += 1;\n            this.monster.clearTracks()\n            this.monster.setCompleteListener(() => {\n                this.monster.setSkin(\"default\");\n                this.monster.setCompleteListener(() => { });\n                this.monster.addAnimation(0, \"happy\", false);\n                this.monster.addAnimation(0, \"stay\", false);\n            })\n            this.monster.setAnimation(0, \"reng\", false);\n            this.scheduleOnce(() => {\n                this._player.onHurt()\n                cc.audioEngine.play(this.attackAudio, false, 1.0);\n\n            }, .5)\n\n            if (this._player.hp == 0) {\n                return\n            }\n            this.scheduleOnce(() => {\n                this.runGamePlayerTurn(this.playerTurn);\n            }, 2.5)\n        }\n        else {\n            // this.playerTurn += 1;\n            this.recordTimes += 1;\n            this._player.PlayerAtkWrong(index);\n            if (this._player.hp == 0) {\n                return\n            }\n            this.scheduleOnce(() => {\n                if (this.playerTurn == 3) {\n                    this.gameWin()\n                    return\n                }\n                this.runGamePlayerTurn(this.playerTurn);\n            }, 3.5)\n        }\n    }\n\n    playerWin(index: number, type: number) {\n        if (type == 1) {//点击游戏\n            this.monster.setSkin(this.monsterSkin[index]);\n            this.monsterTurn += 1;\n            this.monster.clearTracks()\n            this.monster.setCompleteListener(() => {\n                this.monster.setSkin(\"default\");\n                this.monster.setCompleteListener(() => { });\n                this.monster.addAnimation(0, \"stay\", false);\n            })\n            this.monster.setAnimation(0, \"reng2\", false);\n            this.scheduleOnce(() => {\n                cc.audioEngine.play(this.attackAudio, false, 1.0);\n            }, .5)\n            this.scheduleOnce(() => {\n                this.runGamePlayerTurn(this.playerTurn);\n            }, 2.5)\n        }\n        else {//跟读\n\n            this.playerTurn += 1;\n\n            this._player.PlayerAtkRight(index);\n            this._player.node.zIndex = 99;\n            this.scheduleOnce(() => {\n                cc.audioEngine.play(this.attackAudio, false, 1.0);\n                this.monster.clearTracks()\n                this.monster.setAnimation(0, \"yun\", false);\n                this.monster.addAnimation(0, \"stay\", true);\n            }, 1.5);\n\n            this.scheduleOnce(() => {\n                this._player.node.zIndex = 0;\n                if (this.playerTurn == 3) {\n                    this.gameWin()\n                    return\n                }\n                this.runGameMonsterTurn(this.monsterTurn);\n                this.recordTimes = 0;\n            }, 3.5)\n        }\n    }\n\n    gameWin() {\n        cc.log(this._player.hp)\n        this.monster.clearTracks()\n        this.monster.setAnimation(0, \"yun2\", false);\n        cc.tween(this.node).delay(2).to(1.5, { y: 900 }).call(() => {\n            this.node.destroy();\n            EventSystem.emit(\"Day5_Misson_Next\");\n        }).start()\n\n\n    }\n\n    onDestroy() {\n        EventSystem.off(FOLLOW_MODULE_TO_CLIENT, this.recordResult, this);\n        this.recordTimes = 0;\n    }\n\n    // update (dt) {}\n}\n","import player from \"./player\";\nimport { FOLLOW_CLIENT_TO_MODULE, FOLLOW_MODULE_TO_CLIENT } from \"../../../kit/events/events\";\nimport EventSystem from \"../../../kit/system/event/EventSystem\";\n\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class mission2 extends cc.Component {\n\n\n    @property(player)\n    _player: player = null\n\n    @property(cc.Node)\n    playerNode: cc.Node = null;\n\n    @property({ type: [cc.Node] })\n    monsters: cc.Node[] = [];\n\n    @property(cc.Node)\n    hulu: cc.Node = null;\n\n    @property({ type: [cc.AudioClip] })\n    gameAudios: cc.AudioClip[] = []\n\n    wordData: string[] = [\n        \"蓝色\", \"红色\", \"黄色\"\n    ]\n\n    monsterSkin: string[] = [\n        \"lanse\", \"hongse\", \"huangse\"\n    ]\n\n    gameIndex: number = 0;\n\n    isTest = false;\n\n    // LIFE-CYCLE CALLBACKS:\n\n    onLoad() {\n        if (this.playerNode)\n            this._player = this.playerNode.getComponent(\"player\");\n        EventSystem.on(\"Player_Hp_Init\", this.changPlayerHp, this);\n        EventSystem.on(FOLLOW_MODULE_TO_CLIENT, this.recordResult, this);\n    }\n\n    start() {\n        this.hulu.active = false;\n\n        this.scheduleOnce(() => {\n            this.gameRun(this.gameIndex);\n        }, 4);\n    }\n\n    changPlayerHp(data) {\n        this._player.hp = data.data;\n        for (let i = this._player.hp; i < 5; i++) {\n            this._player.hearts[i].getChildByName(\"heart1\").active = false;\n        }\n    }\n\n    gameRun(index: number) {\n\n        if (index >= 3) {\n            cc.tween(this.node).delay(2).to(1.5, { y: 900 }).call(() => {\n                this.node.destroy();\n                EventSystem.emit(\"Day5_Misson_Next\");\n                EventSystem.off(FOLLOW_MODULE_TO_CLIENT, this.recordResult, this);\n            }).start()\n            return\n        }\n\n        let recordData = {\n            evaluatingType: 1,\n            evaluatingText: this.wordData[index],\n            tryTimes: 0,\n            evaluationScore: 30,\n            recordTime: 3\n        }\n        EventSystem.emit(FOLLOW_CLIENT_TO_MODULE, { eventName: 'initComponent', extra: recordData });//初始化录音\n\n        let url = \"res/audios/\" + this.monsterSkin[index];\n        let configs = [\"img_blue\", \"img_red\", \"img_yellow\"]\n        let imgUrl = \"res/images/\" + configs[index];\n        let startRecordData = {\n            evaluatingText: this.wordData[index],\n            bundleName: \"game_lesson_5\",\n            audioUrl: url,\n            iconPath: imgUrl\n        }\n        EventSystem.emit(FOLLOW_CLIENT_TO_MODULE, { eventName: 'startRecord', extra: startRecordData })//开始录音\n\n        if (this.isTest) {\n            this.scheduleOnce(() => {\n                this.checkResult(1);\n            }, 3)\n        }\n    }\n\n    recordResult(result) {\n        console.log(\"recordResult\" + result.data);\n        if (result.data.eventName == 'ResultCb') {\n            if (result.data.success) {\n                this.checkResult(1);\n            }\n            else {\n                this.checkResult(2);\n            }\n        }\n    }\n\n    checkResult(type: number) {\n        if (type == 1) {//player win\n            this.hulu.active = true;\n            let sk = this.hulu.getComponent(sp.Skeleton);\n            sk.clearTracks();\n            sk.setAnimation(0, \"hulu\", false);\n            cc.tween(this.monsters[this.gameIndex]).to(2, { opacity: 0, x: -392, y: 168, scaleX: -0.1, scaleY: 0.1 }).call(() => {\n                this.hulu.active = false;\n                this.monsters[this.gameIndex].active = false;\n                this.gameIndex += 1;\n                this.gameRun(this.gameIndex);\n            }).start();\n        }\n        else {//lose\n            this.hulu.active = true;\n            let sk = this.hulu.getComponent(sp.Skeleton);\n            let defaultX = this.playerNode.x;\n            let defaultY = this.playerNode.y;\n            sk.clearTracks();\n            sk.setAnimation(0, \"hulu\", false);\n            cc.tween(this.playerNode).to(2, { opacity: 0, x: -392, y: 168, scaleX: 0.1, scaleY: 0.1 }).delay(1).call(() => {\n                this.playerNode.opacity = 255;\n                this.playerNode.x = defaultX;\n                this.playerNode.y = defaultY;\n                this.playerNode.scaleX = 0.7;\n                this.playerNode.scaleY = 0.7;\n                this._player.onHurt_2();\n\n                this.hulu.active = false;\n                this.gameIndex += 1;\n\n            }).delay(1).call(() => {\n                if (this._player.hp == 0) {\n                    return\n                }\n                this.gameRun(this.gameIndex);\n            }).start();\n        }\n    }\n\n    onDestroy() {\n        EventSystem.off(\"Player_Hp_Init\", this.changPlayerHp, this);\n        EventSystem.off(FOLLOW_MODULE_TO_CLIENT, this.recordResult, this);\n    }\n    // update (dt) {}\n}\n","import player from \"./player\";\nimport { FOLLOW_CLIENT_TO_MODULE, FOLLOW_MODULE_TO_CLIENT, LIFE_CYCLE_COMPLETE } from \"../../../kit/events/events\";\nimport EventSystem from \"../../../kit/system/event/EventSystem\";\nimport TimerSystem from \"../../../kit/system/timer/TimerSystem\";\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class mission2 extends cc.Component {\n\n\n    @property(player)\n    _player: player = null\n\n    @property(cc.Node)\n    playerNode: cc.Node = null;\n\n    @property(cc.Node)\n    handNode: cc.Node = null;\n\n    @property({ type: [cc.Node] })\n    monsters: cc.Node[] = [];\n\n    @property({ type: [cc.Prefab] })\n    BallItem: cc.Prefab[] = [];\n\n    @property({ type: [cc.AudioClip] })\n    gameAudios: cc.AudioClip[] = []\n\n    @property({type:[cc.Node]})\n    targetsPos:cc.Node[] = []\n\n    wordData: string = \"气球\"\n\n    ballMaxNum: number = 10;\n\n    ballNumNow: number = 0;\n\n    gameIndex: number = 0;\n\n    isTest = false;\n    guildHandTimer;\n    // LIFE-CYCLE CALLBACKS:\n\n    onLoad() {\n        if (this.playerNode)\n            this._player = this.playerNode.getComponent(\"player\");\n\n        EventSystem.on(\"Ball_On_Clicked\", this.CountBall, this);\n        EventSystem.on(\"Player_Hp_Init\", this.changPlayerHp, this);\n        EventSystem.on(FOLLOW_MODULE_TO_CLIENT, this.recordResult, this);\n    }\n\n    start() {\n\n        this.scheduleOnce(() => {\n            this.gameBegin();\n            this.addGuidHandTimer();\n        }, 4);\n\n    }\n\n    private addGuidHandTimer() {\n        if (this.guildHandTimer) {\n            this.clearGuidHand();\n        }\n        let t = 4;\n        this.guildHandTimer = TimerSystem.instance.doOnce(t * 1000, () => {\n            if (!cc.isValid(this.node)) return;\n            this.handNode.active = true;\n            this.handNode.zIndex = cc.macro.MAX_ZINDEX;\n        }, this);\n    }\n\n    private clearGuidHand() {\n        TimerSystem.instance.clearTimer(this.guildHandTimer);\n        this.guildHandTimer = null;\n        this.handNode.active = false;\n    }\n\n    CountBall() {\n        this.ballNumNow += 1;\n        if (this.ballMaxNum == this.ballNumNow) {\n            this.scheduleOnce(() => {\n                this.clearGuidHand();\n                this.gameRun(this.gameIndex)\n            }, 1.5);\n        }\n        this.addGuidHandTimer();\n    }\n\n    gameBegin() {\n\n        for (let i = 0; i < this.ballMaxNum; i++) {\n            let n = this.getBallColorNum();\n            let node = cc.instantiate(this.BallItem[n]);\n            this.node.addChild(node);\n            //  let x = Math.random() * 900 - 450;\n            let x = (i * 100) - 450;\n            let y = - 150;\n            node.x = x; node.y = y;\n            let dis = this.targetsPos[i].y\n            cc.tween(node).to(1, { y: dis }).start();\n\n        }\n    }\n\n    getBallColorNum() {\n        let n = Math.random() * 100;\n        if (n <= 33) {\n            return 0;\n        }\n        else if (n > 33 && n <= 66) {\n            return 1;\n        }\n        else {\n            return 2;\n        }\n    }\n\n    changPlayerHp(data) {\n        this._player.hp = data.data;\n        for (let i = this._player.hp; i < 5; i++) {\n            this._player.hearts[i].getChildByName(\"heart1\").active = false;\n        }\n    }\n\n    gameRun(index: number) {\n        cc.log(\"当前血量\");\n        if (this._player.hp <= 0) {\n            return;\n        }\n        let recordData = {\n            evaluatingType: 1,\n            evaluatingText: this.wordData[index],\n            tryTimes: 0,\n            evaluationScore: 30,\n            recordTime: 3\n        }\n        EventSystem.emit(FOLLOW_CLIENT_TO_MODULE, { eventName: 'initComponent', extra: recordData });//初始化录音\n\n        let startRecordData = {\n            evaluatingText: this.wordData[index],\n            bundleName: \"game_lesson_5\",\n            audioUrl: \"res/audios/qiqiu\",\n            iconPath: 'res/images/img_qiqiu'\n        }\n        EventSystem.emit(FOLLOW_CLIENT_TO_MODULE, { eventName: 'startRecord', extra: startRecordData })//开始录音\n\n        if (this.isTest) {\n            this.scheduleOnce(() => {\n                this.checkResult(2);\n            }, 3)\n        }\n    }\n\n    recordResult(result) {\n        console.log(\"recordResult\", result.data);\n        if (result.data.eventName == 'ResultCb') {\n            if (result.data.success) {\n                this.checkResult(1);\n            }\n            else {\n                this.checkResult(2);\n            }\n        }\n    }\n\n    checkResult(type: number) {\n        if (type == 1) {//player win\n            this.monsters[0].getComponent(sp.Skeleton).clearTracks();\n            this.monsters[0].getComponent(sp.Skeleton).setAnimation(0, \"cry\", false);\n            cc.tween(this.monsters[0]).by(2, { y: 900 }).call(() => {\n                EventSystem.emit(LIFE_CYCLE_COMPLETE);\n            }).start();\n        }\n        else {//lose\n            this._player.hp -= 1;\n            this._player.playerSp.clearTracks();\n            this._player.playerSp.setAnimation(0, \"fei\", false);\n            let px = this.playerNode.x;\n            let py = this.playerNode.y;\n            cc.tween(this.playerNode).by(2, { y: 900 }).call(() => {\n                this.playerNode.x = px;\n                this.playerNode.y = py;\n                this._player.playerSp.addAnimation(0, \"stay\", true);\n                if (this._player.hp == 0) {\n                    this._player.playerSp.clearTracks()\n                    this._player.playerSp.addAnimation(0, \"yun\", false);\n                    this.scheduleOnce(() => {\n                        EventSystem.emit(\"Day5_Player_Hurt\");\n                    }, 1.5)\n                }\n                else {\n                    EventSystem.emit(\"Day5_Player_Hurt\");\n                    this.gameRun(this.gameIndex);\n                }\n\n            }).start();\n        }\n    }\n\n    onDestroy() {\n        EventSystem.off(\"Ball_On_Clicked\", this.CountBall, this);\n        EventSystem.off(\"Player_Hp_Init\", this.changPlayerHp, this);\n        EventSystem.off(FOLLOW_MODULE_TO_CLIENT, this.recordResult, this);\n    }\n    // update (dt) {}\n}\n","import EventSystem from \"../../../kit/system/event/EventSystem\";\n\n\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class player extends cc.Component {\n\n    @property(sp.Skeleton)\n    playerSp: sp.Skeleton = null;\n\n    @property({ type: [cc.Node] })\n    hearts: cc.Node[] = [];\n\n    @property(cc.Layout)\n    heartContainer: cc.Layout = null;\n\n    skins = [\"hongqiu\", \"huangqiu\", \"lanqiu\"];\n\n    hp: number = 5\n\n    // LIFE-CYCLE CALLBACKS:\n\n    // onLoad () {}\n\n    start() {\n\n    }\n\n    reStartPlayer() {\n        this.hp = 5;\n        this.hearts.forEach((node, i) => {\n            node.active = true;\n            node.getChildByName(\"heart1\").active = true;\n            node.getComponent(cc.Sprite).fillRange = 1;\n        })\n\n\n    }\n\n    playerRun(sec: number, distance: number = 0,type:number = 1) {\n        if(type == 1){\n            this.playerSp.timeScale = 1;\n        }\n        else{\n            this.playerSp.timeScale = 2;\n        }\n        this.playerSp.clearTracks();\n        this.playerSp.setAnimation(0, \"walk\", false);\n        this.playerSp.addAnimation(0, \"walk1\", true);\n        this.scheduleOnce(() => {\n            this.playerSp.clearTracks();\n            this.playerSp.setAnimation(0, \"walk2\", false);\n            this.playerSp.addAnimation(0, \"stay\", true);\n        }, sec)\n        cc.tween(this.node).by(sec, { x: distance }).start();\n    }\n\n    onHurt() {\n        this.hp -= 1;\n        this.scheduleOnce(() => {\n            this.hearts[this.hp].getComponent(cc.Animation).play(\"hurt\");\n            if (this.hp == 0) {\n                //gameOver\n                this.hearts[this.hp].getComponent(cc.Animation).on(\"finished\", () => {\n\n                    this.playerSp.clearTracks()\n                    this.playerSp.setAnimation(0, \"yun\", false);\n                    this.scheduleOnce(() => {\n                      //  EventSystem.emit(\"Day5_Game_Over\");\n                    }, 1.5)\n                });\n\n            }\n        }, 0.5)\n        this.playerSp.clearTracks()\n        this.playerSp.setAnimation(0, \"beida\", false);\n        this.playerSp.addAnimation(0, \"stay\", true);\n\n        EventSystem.emit(\"Day5_Player_Hurt\");\n\n    }\n\n    onHurt_2() {\n        this.hp -= 1;\n        this.scheduleOnce(() => {\n            this.hearts[this.hp].getComponent(cc.Animation).play(\"hurt\");\n            if (this.hp == 0) {\n                //gameOver\n                this.hearts[this.hp].getComponent(cc.Animation).on(\"finished\", () => {\n\n                    this.playerSp.clearTracks()\n                    this.playerSp.setAnimation(0, \"yun\", false);\n                    this.scheduleOnce(() => {\n                        // EventSystem.emit(\"Day5_Game_Over\");\n                    }, 1.5)\n                });\n\n            }\n        }, 0.5)\n\n        EventSystem.emit(\"Day5_Player_Hurt\");\n    }\n\n    Playerfly() {\n        this.hp -= 1;\n        this.playerSp.clearTracks();\n        this.playerSp.setAnimation(0, \"fei\", false);\n    }\n\n    PlayerAtkRight(index) {\n        this.playerSp.setSkin(this.skins[index]);\n        this.playerSp.clearTracks()\n        this.playerSp.setCompleteListener(() => {\n            this.playerSp.setSkin(\"default\");\n            this.playerSp.clearTracks()\n            this.playerSp.setCompleteListener(() => { })\n            this.playerSp.setAnimation(0, \"stay\", false);\n        })\n        this.playerSp.setAnimation(0, \"reng\", false);\n\n    }\n\n    PlayerAtkWrong(index) {\n        this.playerSp.setSkin(this.skins[index]);\n        this.playerSp.clearTracks()\n        this.playerSp.setCompleteListener(() => {\n            this.playerSp.setSkin(\"default\");\n            this.playerSp.clearTracks()\n            this.playerSp.setCompleteListener(() => { })\n            this.playerSp.setAnimation(0, \"stay\", false);\n            this.onHurt_2();\n        })\n        this.playerSp.setAnimation(0, \"reng2\", false);\n    }\n\n    PlayerDie() {\n\n    }\n\n\n\n\n\n\n\n\n\n    // update (dt) {}\n}\n","import EventSystem from \"../../../kit/system/event/EventSystem\";\n\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class NewClass extends cc.Component {\n\n    @property({ type: cc.AudioClip })\n    qiqiu: cc.AudioClip = null;\n\n    @property({ type: cc.AudioClip })\n    qiqiu2: cc.AudioClip = null;\n\n    // LIFE-CYCLE CALLBACKS:\n\n    // onLoad () {}\n\n    start() {\n\n    }\n\n    onClickCall(event, data) {\n        let n = Number(data);\n        var id = cc.audioEngine.play(this.qiqiu, false, 1.0);\n        cc.audioEngine.setFinishCallback(id, () => {\n            cc.audioEngine.play(this.qiqiu2, false, 1.0);\n        })\n        let spName = \"\"\n        switch (n) {\n            case 0:\n                spName = \"hong-bao\";\n                break;\n            case 1:\n                spName = \"huang-bao\";\n                break;\n            case 2:\n                spName = \"lan-bao\";\n                break;\n        }\n        let _sp = this.node.getComponent(sp.Skeleton)\n        _sp.clearTracks();\n        _sp.setCompleteListener(() => {\n            this.node.destroy();\n            EventSystem.emit(\"Ball_On_Clicked\");\n        })\n        _sp.setAnimation(0, spName, false);\n        this.node.getComponent<cc.Button>(cc.Button).interactable=false;\n\n    }\n\n    // update (dt) {}\n}\n"],"file":"index.js"}