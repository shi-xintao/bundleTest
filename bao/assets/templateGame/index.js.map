{"version":3,"sources":["assets/bundles/templateGame/paokuGameCopmonent/scripts/BackgroundComponent.ts","assets/bundles/templateGame/scripts/ComponentBase.ts","assets/bundles/templateGame/paokuGameCopmonent/scripts/GameMapComponent.ts","assets/bundles/templateGame/levelIndicator/scripts/LevelIndicator.ts","assets/bundles/templateGame/paokuGameCopmonent/scripts/PaoKuPlayer.ts","assets/bundles/templateGame/paokuGameCopmonent/scripts/PaokuBuff.ts","assets/bundles/templateGame/paokuGameCopmonent/scripts/PaokuClickComponent.ts","assets/bundles/templateGame/paokuGameCopmonent/scripts/PaokuCollisionComponent.ts","assets/bundles/templateGame/paokuGameCopmonent/scripts/PaokuConfigBase.ts","assets/bundles/templateGame/paokuGameCopmonent/scripts/PaokuEntity.ts","assets/bundles/templateGame/paokuGameCopmonent/scripts/PaokuGameController.ts","assets/bundles/templateGame/paokuGameCopmonent/scripts/PaokuPropController.ts","assets/bundles/templateGame/paokuGameCopmonent/scripts/PaokuProp.ts","assets/bundles/templateGame/puzzleComponent/scripts/PuzzleComponent.ts","assets/bundles/templateGame/scripts/TemplateGameBase.ts","assets/bundles/templateGame/chooseComponent/scripts/chooseGame.ts","assets/bundles/templateGame/selectGame/scripts/selectGame.ts"],"names":["_a","cc","_decorator","ccclass","property","Mtype","BackgroundComponent","_super","__extends","_this","apply","this","arguments","lubg1","lubg2","speed","mtype","VERTICAL_P","isRunmap","cur_lubg","luOffset","prototype","onLoad","node","getChildByName","start","setbgfix","frameSize","winSize","log","designResolution","Canvas","instance","designSize","size","width","height","frameAspectRatio","screenSize","__assign","ratio","y","VERTICAL_N","HORIZONTAL_P","x","HORIZONTAL_N","runlubg","dt","s","update","__decorate","type","Integer","tooltip","min","max","step","slide","Enum","Component","exports","default","ComponentBase","gameBase","initData","data","GameMapComponent","mapStart","mapEnd","mapItem","halfFrame","mapIndex","gameEndTag","director","getPhysicsManager","enabled","getCollisionManager","enabledDebugDraw","map1","instantiate","map2","addChild","setMapSpeed","scheduleOnce","spd","addMapToLubg","lu","destroyAllChildren","map","length","Prefab","displayName","LevelIndicator","indicatorImgs","lineImgs","itemNode","lineNode","content","indicatorNodes","lineNodes","maxRound","initIndicator","index","active","parent","push","reverse","getComponent","Layout","initLine","zIndex","macro","MIN_ZINDEX","Sprite","spriteFrame","updateCurIndicator","comp","spIndex","SpriteFrame","Node","PaoKuPlayer","PaokuBuff","label","text","Label","PaokuClickComponent","ontouchStart","PaokuCollisionComponent","PaoKuPlayerConfigBase","backGroundMoveSpeed","frountNodeMoveSpeed","PaokuGameController_1","require","PaokuEntity","create","gameSystem","gameConfig","entity","initGame","PaokuGameController","Object","defineProperty","get","_instance","paokuSystem","goState","PaokuState","onGameStart","state","PaokuPropController","PaokuProp","CompEnum_1","AudioManager_1","ComponentBase_1","DRAG_CORRECT_DISTANCE","PuzzleComponent","puzzleCount","bloodCount","puzzleItemNodes","puzzleDesNodes","bloodNodes","initPuzzleDesNodes","initPuzzleItem","initDragEvent","initBloodNode","position","find","on","EventType","TOUCH_START","onBegin","TOUCH_MOVE","onMove","TOUCH_END","onEnd","TOUCH_CANCEL","onCancel","gameOver","succ","offAllDragEvent","roundStateTypeChanged","RoundStateType","RoundComplete","win","e","touchNode","target","local","getLocation","convertToNodeSpaceAR","_offsetPos","v2","sub","v3","MAX_ZINDEX","add","showHotTips","checkDragRight","len","i","dragPos","targetPos","lens","color","dragEnd","name","dragCorrect","dragWrong","error","scale","offTouchEvent","indexOf","splice","RoundProceeding","playEffect","bloodNode","pop","destroy","item","off","ChapterGameComponent_1","events_1","ResourcesManager_1","EventSystem_1","LevelIndicator_1","TemplateGameBase","roundNodeArr","curRoundIndex","MaxRoundIndex","curRoundResult","levelIndicator","curRoundStateType","None","call","initLevelIndicator","change2NextRound","onDestroy","loadRes","ResourceType","Normal","err","asset","stateType","params","RoundOpenAniStart","openAniStart","RoundOpenAniComplete","openAniComplete","RoundStart","roundStart","roundProceeding","roundComplete","RoundEndAniStart","endAniStart","RoundEndAniComplete","endAniComplete","startAudioCallFunc","updateRoundStateDisplay","gameEnd","warn","emit","LIFE_CYCLE_COMPLETE","gameRoundInit","sent","isValid","chooseGame","answerNumber","touchItems","schedule","showTips","forEach","tween","by","union","repeat","itemTouchCall","event","n","Number","to","opacity","SelectGame","heartsArr","answerItemsArr","rightTimes","wrongTiems","isGameEnd","w","onEnable"],"mappings":"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","sourcesContent":["\nconst {ccclass, property} = cc._decorator;\nenum Mtype {\n    VERTICAL_P,\n    VERTICAL_N, \n    HORIZONTAL_P,\n    HORIZONTAL_N,\n  }\n@ccclass\nexport default class BackgroundComponent extends cc.Component {\n\n    lubg1:cc.Node = null;\n    lubg2:cc.Node = null;\n\n    @property({\n        type:cc.Integer,\n        tooltip:\"循环速度\",\n        min:0,\n        max:1000,\n        step:50,\n        slide:true,\n    })\n    speed = 200;\n\n    @property({ type: cc.Enum(Mtype),tooltip:\"VERTICAL_P:垂直向下滚动  VERTICAL_N:垂直向上滚动 HORIZONTAL_P:水平向左滚动 HORIZONTAL_N:水平向右滚动\" })\n    mtype: Mtype = Mtype.VERTICAL_P;\n\n    isRunmap = false;//滚动开关\n    cur_lubg:cc.Node = null;\n    luOffset = 0;\n    onLoad () {\n        this.lubg1 = this.node.getChildByName(\"bgNode1\");\n        this.lubg2 = this.node.getChildByName(\"bgNode2\");\n\n        this.isRunmap = true;\n    }\n\n    start () {\n        this.cur_lubg = this.lubg1;\n        this.setbgfix();\n    }\n\n    setbgfix(){\n        let frameSize: cc.Size = cc.winSize;\n        cc.log(\"frameSize\",frameSize)\n        let designResolution: cc.Size = cc.Canvas.instance.designResolution\n        let designSize: cc.Size = cc.size(designResolution.width, designResolution.height)\n        let frameAspectRatio: number = frameSize.width / frameSize.height\n        let screenSize: cc.Size = { ...frameSize } as cc.Size\n\n        let ratio: number = this.node.width / this.node.height\n        if (ratio > frameAspectRatio) {\n            let width = this.node.width * screenSize.height / this.node.height\n            this.lubg1.width = width\n            this.lubg1.height = screenSize.height\n            this.lubg2.width = width\n            this.lubg2.height = screenSize.height\n            switch (this.mtype) {\n                case Mtype.VERTICAL_P:\n                    this.lubg2.y = screenSize.height;\n                    this.luOffset = screenSize.height;\n                    break;\n                case Mtype.VERTICAL_N:\n                    this.lubg2.y = -screenSize.height;\n                    this.luOffset = screenSize.height;\n                    break;\n                case Mtype.HORIZONTAL_P:\n                    this.lubg2.x = width;\n                    this.luOffset = width;\n                    break;\n                case Mtype.HORIZONTAL_N:\n                    this.lubg2.x = -width;\n                    this.luOffset = width;\n                    break;\n                default:\n                    break;\n            }\n        } else {\n            let height = this.node.height * screenSize.width / this.node.width\n            this.lubg1.width = screenSize.width\n            this.lubg1.height = height\n            this.lubg2.width = screenSize.width\n            this.lubg2.height = height\n            switch (this.mtype) {\n                case Mtype.VERTICAL_P:\n                    this.lubg2.y = height;\n                    this.luOffset = height;\n                    break;\n                case Mtype.VERTICAL_N:\n                    this.lubg2.y = -height;\n                    this.luOffset = height;\n                    break;\n                case Mtype.HORIZONTAL_P:\n                    this.lubg2.x = screenSize.width;\n                    this.luOffset = screenSize.width;\n                    break;\n                case Mtype.HORIZONTAL_N:\n                    this.lubg2.x = -screenSize.width;\n                    this.luOffset = screenSize.width;\n                    break;\n                default:\n                    break;\n            }\n        }\n    }\n\n    runlubg(dt){\n        var s = dt * this.speed;\n        \n        switch (this.mtype) {\n            case Mtype.VERTICAL_P:\n                this.lubg1.y -= s;\n                this.lubg2.y -= s;\n                if (this.cur_lubg.y <= -this.luOffset) {\n                    if(this.cur_lubg == this.lubg2) {\n                        this.lubg2.y = this.lubg1.y + this.luOffset;\n                        this.cur_lubg = this.lubg1;\n                    }\n                    else {\n                        this.lubg1.y = this.lubg2.y + this.luOffset;\n                        this.cur_lubg = this.lubg2;\n                    }\n                }\n                break;\n            case Mtype.VERTICAL_N:\n                this.lubg1.y += s;\n                this.lubg2.y += s;\n                if (this.cur_lubg.y >= this.luOffset) {\n                    if(this.cur_lubg == this.lubg2) {\n                        this.lubg2.y = this.lubg1.y - this.luOffset;\n                        this.cur_lubg = this.lubg1;\n                    }\n                    else {\n                        this.lubg1.y = this.lubg2.y - this.luOffset;\n                        this.cur_lubg = this.lubg2;\n                    }\n                }\n                break;\n            case Mtype.HORIZONTAL_P:\n                this.lubg1.x -= s;\n                this.lubg2.x -= s;\n                if (this.cur_lubg.x <= -this.luOffset) {\n                    if(this.cur_lubg == this.lubg2) {\n                        this.lubg2.x = this.lubg1.x + this.luOffset;\n                        this.cur_lubg = this.lubg1;\n                    }\n                    else {\n                        this.lubg1.x = this.lubg2.x + this.luOffset;\n                        this.cur_lubg = this.lubg2;\n                    }\n                }\n                break;\n            case Mtype.HORIZONTAL_N:\n                this.lubg1.x += s;\n                this.lubg2.x += s;\n                if (this.cur_lubg.x >= this.luOffset) {\n                    if(this.cur_lubg == this.lubg2) {\n                        this.lubg2.x = this.lubg1.x - this.luOffset;\n                        this.cur_lubg = this.lubg1;\n                    }\n                    else {\n                        this.lubg1.x = this.lubg2.x - this.luOffset;\n                        this.cur_lubg = this.lubg2;\n                    }\n                }\n                break;\n            default:\n                break;\n        }\n        \n    }\n    \n    update (dt) {\n        if (this.isRunmap) {\n            this.runlubg(dt);\n        }\n    }\n}\n","import TemplateGameBase from \"./TemplateGameBase\";\n\n\nconst {ccclass, property} = cc._decorator;\n\n@ccclass\nexport default class ComponentBase extends cc.Component {\n\n    gameBase:TemplateGameBase = null;\n    // onLoad () {}\n\n    start () {\n        \n    }\n\n    initData(data){\n        //给gameBase赋值\n        this.gameBase = data;\n    }\n\n    // update (dt) {}\n}\n","\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class GameMapComponent extends cc.Component {\n    @property({ type: cc.Prefab, displayName: \"第一块地图\" })\n    mapStart: cc.Prefab = null;\n\n    @property({ type: cc.Prefab, displayName: \"最后一块地图\" })\n    mapEnd: cc.Prefab = null;\n\n    @property(cc.Prefab)\n    mapItem: cc.Prefab[] = []\n\n    lubg1: cc.Node = null;\n    lubg2: cc.Node = null;\n\n    isRunmap: boolean = false;\n    cur_lubg: cc.Node = null;\n    speed: number = 0;\n    luOffset: number = 2668;//一张地图的长度\n    // rollIndex:number = 0;\n    halfFrame: number = 0;\n    mapIndex: number = 0;\n    gameEndTag: boolean = false;\n\n    onLoad() {\n        cc.director.getPhysicsManager().enabled = true \n       cc.director.getCollisionManager().enabledDebugDraw = true;\n        let map1 = cc.instantiate(this.mapStart);\n        let map2 = cc.instantiate(this.mapItem[0]);\n        this.lubg1 = this.node.getChildByName(\"pathNode1\");\n        this.lubg2 = this.node.getChildByName(\"pathNode2\");\n        this.lubg1.addChild(map1);\n        this.lubg2.addChild(map2);\n\n        this.setMapSpeed(400);\n    }\n\n    start() {//地图适配\n        let frameSize: cc.Size = cc.winSize;\n        this.halfFrame = frameSize.width / 2;\n        this.cur_lubg = this.lubg1;\n        this.scheduleOnce(() => {\n            this.lubg2.x = this.lubg1.x + this.luOffset;\n        }, 0.2)\n    }\n\n    setMapSpeed(spd: number) {\n        if (spd && spd > 0) {\n            this.speed = spd;\n            this.isRunmap = true;\n        } else {\n            this.isRunmap = false;\n        }\n    }\n\n    runlubg(dt) {\n        var s = dt * this.speed;\n        this.lubg1.x -= s;\n        this.lubg2.x -= s;\n        if (this.cur_lubg.x <= -this.luOffset - this.halfFrame) {\n            if (this.cur_lubg == this.lubg2) {\n                this.addMapToLubg(this.lubg2)\n                this.lubg2.x = this.lubg1.x + this.luOffset;\n                this.cur_lubg = this.lubg1;\n            }\n            else {\n                this.addMapToLubg(this.lubg1)\n                this.lubg1.x = this.lubg2.x + this.luOffset;\n                this.cur_lubg = this.lubg2;\n                // cc.log(\"this.lubg1.x\",this.lubg1.x)\n            }\n        }\n    }\n\n    addMapToLubg(lu: cc.Node) {\n        lu.destroyAllChildren();\n        let map = null;\n        if (this.gameEndTag) {\n            map = cc.instantiate(this.mapEnd);\n        } else {\n            map = cc.instantiate(this.mapItem[this.mapIndex]);\n        }\n        lu.addChild(map);\n        this.mapIndex = this.mapIndex + 1 >= this.mapItem.length ? 0 : this.mapIndex + 1;\n    }\n\n    update(dt) {\n        if (this.isRunmap) {\n            this.runlubg(dt);\n        }\n    }\n}\n","\nconst {ccclass, property} = cc._decorator;\n\n@ccclass\nexport default class LevelIndicator extends cc.Component {\n\n    @property([cc.SpriteFrame])\n    indicatorImgs: cc.SpriteFrame[] = [];\n\n\n    @property([cc.SpriteFrame])\n    lineImgs: cc.SpriteFrame[] = [];\n\n    @property(cc.Node)\n    itemNode:cc.Node = null;\n\n    @property(cc.Node)\n    lineNode: cc.Node = null;\n\n    @property(cc.Node)\n    content: cc.Node = null;\n\n\n    indicatorNodes: cc.Node[] = [];\n    lineNodes: cc.Node[] = [];\n\n    maxRound:number = -1;\n\n    initData(maxRound){\n        this.maxRound = maxRound;\n\n        this.initIndicator();\n    }\n    \n    initIndicator(){\n        for (let index = 0; index < this.maxRound; index++) {\n            let node = cc.instantiate(this.itemNode);\n            node.active = true;\n            node.parent = this.content;\n            this.indicatorNodes.push(node);\n        }\n        this.indicatorNodes.reverse();\n\n        this.scheduleOnce(()=>{\n            this.content.getComponent(cc.Layout).enabled = false;\n            this.initLine();\n        })\n    }\n\n    initLine(){\n        for (let index = 1; index < this.maxRound; index++) {\n            let node = cc.instantiate(this.lineNode);\n            node.active = true;\n            node.parent = this.content;\n            this.lineNodes.push(node);\n            node.zIndex = cc.macro.MIN_ZINDEX;\n            node.x = this.indicatorNodes[index].x - this.indicatorNodes[index].width/2-9;\n            node.getComponent(cc.Sprite).spriteFrame = this.lineImgs[1];\n        }\n    }\n\n    updateCurIndicator(index:number, comp:boolean){\n        let spIndex = comp ? 1 : 2;\n        this.indicatorNodes[index].getComponent(cc.Sprite).spriteFrame = this.indicatorImgs[spIndex];\n\n        if (index>0) {\n            this.lineNodes[index-1].getComponent(cc.Sprite).spriteFrame = this.lineImgs[0];\n        }\n    }\n\n}\n","\nconst {ccclass, property} = cc._decorator;\n\n@ccclass\nexport default class PaoKuPlayer extends cc.Component {\n\n   \n}\n","// Learn TypeScript:\n//  - https://docs.cocos.com/creator/manual/en/scripting/typescript.html\n// Learn Attribute:\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\n\nconst {ccclass, property} = cc._decorator;\n\n@ccclass\nexport default class PaokuBuff extends cc.Component {\n\n    @property(cc.Label)\n    label: cc.Label = null;\n\n    @property\n    text: string = 'hello';\n\n    // LIFE-CYCLE CALLBACKS:\n\n    // onLoad () {}\n\n    start () {\n\n    }\n\n    // update (dt) {}\n}\n","\nconst {ccclass, property} = cc._decorator;\n\n@ccclass\nexport default class PaokuClickComponent extends cc.Component {\n    \n    start () {\n\n    }\n\n    public ontouchStart () {\n        \n    }\n}\n","\nconst {ccclass, property} = cc._decorator;\n\n@ccclass\nexport default class PaokuCollisionComponent extends cc.Component {\n\n   \n}\n","\nexport default class PaoKuPlayerConfigBase {\n    // 背景移动速度\n    public static readonly backGroundMoveSpeed = 200;\n    // 前景移动速度\n    public static readonly frountNodeMoveSpeed = 400;\n\n    /////// player\n    // idle 动画\n    // move 动画\n    // jump 动画\n}\n\n\n","import PaoKuPlayerConfigBase from \"./PaokuConfigBase\";\nimport PaokuGameController from \"./PaokuGameController\";\nimport PaokuGameSystem from \"./PaokuGameSystem\";\n\nconst {ccclass, property} = cc._decorator;\n\n@ccclass\nexport default class PaokuEntity extends cc.Component {\n\n    public create (gameSystem: PaokuGameSystem, gameConfig: PaoKuPlayerConfigBase) {\n        gameSystem.entity = this;\n        PaokuGameController.instance.initGame(gameSystem, gameConfig);\n    }\n\n\n    \n}\n","import PaoKuPlayerConfigBase from \"./PaokuConfigBase\";\nimport PaokuGameSystem from \"./PaokuGameSystem\";\n\nconst {ccclass, property} = cc._decorator;\n\n@ccclass\nexport default class PaokuGameController extends cc.Component {\n    private static _instance: PaokuGameController = null;\n    public static get instance (): PaokuGameController {\n        if (PaokuGameController._instance) {\n            PaokuGameController._instance = new PaokuGameController();\n        }\n        return  PaokuGameController._instance;\n    }\n\n    /** 跑酷状态 */\n    private paokuSystem: PaokuGameSystem;\n\n    private gameConfig: PaoKuPlayerConfigBase;\n\n    public initGame (paokuSystem: PaokuGameSystem, gameConfig: PaoKuPlayerConfigBase) {\n        this.paokuSystem = paokuSystem;\n        this.gameConfig = gameConfig;\n        this.goState(PaokuState.onGameStart);\n    }\n\n    public goState (state: PaokuState) {\n        this.paokuSystem[state] &&  this.paokuSystem[state]();\n    }\n}\n\nexport enum PaokuState {\n    // 游戏开始\n    onGameStart = \"onGameStart\",\n    // 开场动画结束\n    onStartAni = \"onStartAni\",\n    // 引导环节\n    onGuideStep = 'onGuideStep',\n    /** 回答正确 */\n    onAnswerCorrect = 'onAnswerCorrect',\n    /** 回答错误 */\n    onAnswerWrong = 'onAnswerWrong',\n    /** 激励后 */\n    onInspirinAfter = 'onInspirinAfter',\n    // 跟读环节\n    onFollowRead = 'onFollowRead',\n    // 碰到障碍\n    onEnterObstacle = 'onEnterObstacle',\n    // 吃到道具\n    onEnterProp = 'onEnterProp',\n    // 吃到学习点\n    onEnterEnergy = 'onEnterEnergy',\n    // 切换下一关\n    onNextLevel = 'onNextLevel',\n    // 游戏结束\n    onGameOver = 'onGameOver'\n}\n","\nconst {ccclass, property} = cc._decorator;\n\n@ccclass\nexport default class PaokuPropController extends cc.Component {\n\n}\n","const {ccclass, property} = cc._decorator;\n\n@ccclass\nexport default class PaokuProp extends cc.Component {\n\n    @property(cc.Label)\n    label: cc.Label = null;\n\n    @property\n    text: string = 'hello';\n\n}\n","import { RoundStateType } from \"../../../../common/structure/CompEnum\";\nimport AudioManager from \"../../../../kit/system/audio/AudioManager\";\nimport ComponentBase from \"../../scripts/ComponentBase\";\n\nconst { ccclass, property } = cc._decorator;\n\nconst DRAG_CORRECT_DISTANCE = 50;\n@ccclass\nexport default class PuzzleComponent extends ComponentBase {\n\n    @property({ displayName: \"拖拽元素数量\" })\n    puzzleCount: number = -1;\n\n    @property({ displayName: \"心的数量\" })\n    bloodCount: number = 3;\n    //拖拽碎片\n    puzzleItemNodes: cc.Node[] = [];\n    //拖拽目的地\n    puzzleDesNodes: cc.Node[] = [];\n    //爱心node\n    bloodNodes: cc.Node[] = [];\n\n    _offsetPos: cc.Vec2;\n\n    onLoad() {\n        this.initPuzzleDesNodes();\n        this.initPuzzleItem();\n        this.initDragEvent();\n        this.initBloodNode();\n    }\n    initPuzzleDesNodes() {\n        let length = this.puzzleCount;\n        for (let index = 1; index <= length; index++) {\n            let node = this.node.getChildByName(`ptbg${index}`);\n            this.puzzleDesNodes.push(node);\n        }\n    }\n\n    initPuzzleItem() {\n        for (let index = 1; index <= this.puzzleCount; index++) {\n            let node = this.node.getChildByName(`dragItem${index}`);\n            this.puzzleItemNodes.push(node);\n            node['originpos'] = node.position;\n        }\n    }\n\n    initBloodNode() {\n        for (let index = 1; index <= this.bloodCount; index++) {\n            let node = cc.find(`heartContr/heartsp${index}`, this.node);\n            this.bloodNodes.push(node);\n        }\n\n        this.node.getChildByName(\"heartContr\").getComponent(cc.Layout).enabled = false;\n    }\n\n    initDragEvent() {\n        for (let index = 0; index < this.puzzleItemNodes.length; index++) {\n            let node = this.puzzleItemNodes[index];\n            node.on(cc.Node.EventType.TOUCH_START, this.onBegin, this);\n            node.on(cc.Node.EventType.TOUCH_MOVE, this.onMove, this);\n            node.on(cc.Node.EventType.TOUCH_END, this.onEnd, this);\n            node.on(cc.Node.EventType.TOUCH_CANCEL, this.onCancel, this);\n        }\n    }\n\n    gameOver(succ: boolean) {\n        cc.log(` game over succ: ${succ}`)\n        this.offAllDragEvent();\n\n        //选择正确\n        this.gameBase.roundStateTypeChanged(RoundStateType.RoundComplete, { win: succ ? 1 : 0 })\n    }\n\n    onBegin(e: cc.Event.EventTouch): void {\n        let touchNode: cc.Node = e.target;\n        let local = e.getLocation();\n        local = touchNode.parent.convertToNodeSpaceAR(local);\n        this._offsetPos = cc.v2(touchNode.position.sub(cc.v3(local)));\n        touchNode.zIndex = cc.macro.MAX_ZINDEX;\n    }\n\n    onMove(e: cc.Event.EventTouch): void {\n        let touchNode: cc.Node = e.target;\n        let local = e.getLocation();\n        local = touchNode.parent.convertToNodeSpaceAR(local);\n        touchNode.position = cc.v3(local.add(this._offsetPos));\n        this.showHotTips(touchNode)\n        this.checkDragRight(touchNode);\n\n    }\n\n    /* 热区提示颜色引导  */\n    showHotTips(node: cc.Node) {\n        let len = this.puzzleDesNodes.length\n        for (let i = 0; i < len; i++) {\n            let dragPos = node.position;\n            let targetPos = this.puzzleDesNodes[i].position;\n            let lens = dragPos.sub(targetPos).len();\n            if (lens <= DRAG_CORRECT_DISTANCE) {\n                this.puzzleDesNodes[i].color = cc.color(80, 80, 80)\n            } else {\n                this.puzzleDesNodes[i].color = cc.color(255, 255, 255)\n            }\n        }\n    }\n\n    checkDragRight(node: cc.Node, dragEnd: boolean = false) {\n        let index = +node.name[node.name.length - 1] - 1;\n        if (index >= 0 && index < this.puzzleCount) {\n            let dragPos = node.position;\n            let targetPos = this.puzzleDesNodes[index].position;\n            let len = dragPos.sub(targetPos).len();\n            if (len <= DRAG_CORRECT_DISTANCE) {\n                if (dragEnd) {\n                    this.dragCorrect(node, targetPos);\n                } else {\n                    //TODO: \n                }\n            } else {\n                if (dragEnd) {\n                    this.dragWrong(node);\n                }\n            }\n        } else {\n            cc.error(`drag error! name: ${node.name}`);\n        }\n    }\n\n    dragCorrect(node: cc.Node, targetPos: cc.Vec3) {\n        // cc.log(\"dragCorrect\")\n        node.position = targetPos;\n        node.scale = 1.85;\n        this.offTouchEvent(node);\n\n\n        let index = this.puzzleItemNodes.indexOf(node);\n        this.puzzleItemNodes.splice(index, 1);\n        //选择正确\n        this.gameBase.roundStateTypeChanged(RoundStateType.RoundProceeding)\n        if (this.puzzleItemNodes.length <= 0) {\n            this.gameOver(true);\n        }\n    }\n\n    dragWrong(node:cc.Node){\n        // cc.log(\"dragWrong\")\n        node.position = node['originpos'];\n        AudioManager.playEffect(\"templateGame\", \"puzzleComponent/audio/game_error\")\n        let bloodNode = this.bloodNodes.pop();\n        bloodNode.destroy();\n\n        if (this.bloodNodes.length <= 0) {\n            this.gameOver(false);\n        }\n    }\n\n\n    onEnd(e: cc.Event.EventTouch): void {\n        let touchNode: cc.Node = e.target;\n        this.checkDragRight(touchNode, true);\n        touchNode.zIndex = 1;\n        this.puzzleDesNodes.map(item => item.color = cc.color(255, 255, 255))\n    }\n\n    onCancel(e: cc.Event.EventTouch): void {\n        let touchNode: cc.Node = e.target;\n        touchNode.zIndex = 1;\n\n    }\n\n    offAllDragEvent() {\n        for (let index = 0; index < this.puzzleItemNodes.length; index++) {\n            let node = this.puzzleItemNodes[index];\n            this.offTouchEvent(node);\n        }\n    }\n\n    offTouchEvent(node:cc.Node){\n        node.off(cc.Node.EventType.TOUCH_START);\n        node.off(cc.Node.EventType.TOUCH_MOVE);\n        node.off(cc.Node.EventType.TOUCH_END);\n        node.off(cc.Node.EventType.TOUCH_CANCEL);\n    }\n    \n}\n","import ChapterGameComponent from \"../../../common/scripts/ChapterGameComponent\";\nimport { RoundStateType } from \"../../../common/structure/CompEnum\";\nimport { Comp2TemplateParams } from \"../../../common/structure/CompInterface\";\nimport { LIFE_CYCLE_COMPLETE } from \"../../../kit/events/events\";\nimport ResourcesManager, { ResourceType } from \"../../../kit/manager/ResourcesManager\";\nimport AudioManager from \"../../../kit/system/audio/AudioManager\";\nimport EventSystem from \"../../../kit/system/event/EventSystem\";\nimport LevelIndicator from \"../levelIndicator/scripts/LevelIndicator\";\nimport ComponentBase from \"./ComponentBase\";\n\n\nconst {ccclass, property} = cc._decorator;\n\n@ccclass\nexport default class TemplateGameBase extends ChapterGameComponent {\n\n    @property({ type: [cc.Node], displayName: \"环节互动组件\" })\n    roundNodeArr:cc.Node[] = [];\n\n    //当前游戏环节\n    curRoundIndex:number = 0;\n    //游戏总环节（可以在initData重新赋值）\n    MaxRoundIndex:number = 4;\n\n\n    //当前环节游戏结果\n    curRoundResult: Comp2TemplateParams = null;\n\n    //环节指示器\n    levelIndicator:LevelIndicator = null;\n\n    curRoundStateType:RoundStateType = RoundStateType.None;\n\n    onLoad () {\n        super.onLoad();\n        this.initLevelIndicator();\n        this.change2NextRound();\n    }\n\n    onDestroy() {\n        super.onDestroy();\n    }\n\n    initLevelIndicator(){\n        ResourcesManager.instance.loadRes(\"templateGame\", \"levelIndicator/prefab/levelIndicator\", ResourceType.Normal,cc.Prefab, (err:Error, asset:cc.Prefab)=>{\n            let node = cc.instantiate(asset);\n            let size = cc.winSize;\n            this.levelIndicator = node.getComponent(LevelIndicator);\n            this.levelIndicator.initData(this.MaxRoundIndex);\n            this.node.addChild(node);\n            node.x = size.width / 2 - 30;\n            node.y = size.height / 2 - 70;\n        });\n    }\n\n    roundStateTypeChanged(stateType: RoundStateType, params?: Comp2TemplateParams){\n        this.curRoundStateType = stateType;\n        cc.log(\"===>stateType: \", stateType)\n        switch (stateType) {\n            case RoundStateType.RoundOpenAniStart:\n                this.openAniStart();\n                break;\n            case RoundStateType.RoundOpenAniComplete:\n                this.openAniComplete();\n                break;\n            case RoundStateType.RoundStart:\n                this.roundStart();\n                break;\n            case RoundStateType.RoundProceeding:\n                this.roundProceeding(params);\n                break;\n            case RoundStateType.RoundComplete:\n                this.roundComplete(params);\n                break;\n            case RoundStateType.RoundEndAniStart:\n                this.endAniStart();\n                break;\n            case RoundStateType.RoundEndAniComplete:\n                this.endAniComplete();\n                break;\n        }\n    }\n\n    // 开场动画开始\n    openAniStart(){ }\n    // 开场动画播完\n    openAniComplete() { \n        this.roundStateTypeChanged(RoundStateType.RoundStart);\n    }\n    // 环节开始\n    roundStart(){\n        // 最后一个round是语音题，默认写死\n        if (this.curRoundIndex == this.MaxRoundIndex - 1) {\n            this.startAudioCallFunc();\n        }else{\n            for (let index = 0; index < this.roundNodeArr.length; index++) {\n                const node = this.roundNodeArr[index];\n                node.active = (this.curRoundIndex === index);\n            }\n        }\n    }\n    // 环节进行中 状态同步\n    roundProceeding(params: Comp2TemplateParams){ }\n    // 环节完成\n    roundComplete(params: Comp2TemplateParams){\n        this.curRoundResult = params;\n        this.updateRoundStateDisplay();\n        this.roundStateTypeChanged(RoundStateType.RoundEndAniStart, params);\n        \n    }\n    // 完成动画开始播放\n    endAniStart() { }\n    // 完成动画播放结束\n    endAniComplete() {\n        cc.log(`===>>> curRoundIndex: ${this.curRoundIndex}    MaxRoundIndex:${this.MaxRoundIndex}`)\n        this.curRoundIndex++;\n        if (this.curRoundIndex>=this.MaxRoundIndex) {\n            this.gameEnd();\n        }else{\n            this.change2NextRound();\n        }\n    }\n\n    //开始语音测评\n    startAudioCallFunc(){\n        cc.warn(\" 开始语音测评，重写startAudioCallFunc\");\n    }\n\n    gameEnd(){\n        cc.log(\"game end!\");\n        //游戏结束\n        EventSystem.emit(LIFE_CYCLE_COMPLETE);\n    }\n\n    async change2NextRound(){\n        await this.gameRoundInit();\n        this.roundStateTypeChanged(RoundStateType.RoundOpenAniStart);\n    }\n\n    gameRoundInit(){\n        for (let index = 0; index < this.roundNodeArr.length; index++) {\n            const node = this.roundNodeArr[index];\n            node.active = false;\n        }\n\n        if (this.roundNodeArr[this.curRoundIndex]) {\n            this.roundNodeArr[this.curRoundIndex].getComponent(ComponentBase).initData(this);\n        }else{\n            cc.log(`this.roundNodeArr[this.curRoundIndex] nil!  curRoundIndex: ${this.curRoundIndex} `)\n        }\n    }\n\n    /**\n     * 关卡指示器\n     */\n    updateRoundStateDisplay(){\n        if (!cc.isValid(this.node)) {\n            return\n        }\n        this.levelIndicator.updateCurIndicator(this.curRoundIndex, !!this.curRoundResult.win);\n    }\n\n}\n\n\n\n","import { Comp2TemplateParams } from './../../../../common/structure/CompInterface';\nimport { RoundStateType } from \"../../../../common/structure/CompEnum\";\nimport ComponentBase from \"../../scripts/ComponentBase\";\nimport AudioManager from '../../../../kit/system/audio/AudioManager';\n\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class chooseGame extends ComponentBase {\n\n    @property({ type: cc.Integer, displayName: \"正确选项\" })\n    answerNumber: number = 0\n\n    @property({ type: [cc.Node], displayName: \"选项Node\" })\n    touchItems: cc.Node[] = [];\n\n\n    // LIFE-CYCLE CALLBACKS:\n\n    // onLoad () {}\n\n    start() {\n        //   this.gameBase = this.node.parent.getComponent(\"QuziGamePanda\");\n        this.schedule(this.showTips,5);\n        this.showTips()\n    }\n\n    showTips() {\n        this.touchItems.forEach((node) => {\n            cc.tween(node).by(0.2, { scale: 0.1 })\n                .by(0.2, { scale: -0.1 })\n                .union()\n                .repeat(2)\n                .start()\n        })\n    }\n\n    itemTouchCall(event, data) {\n        let n = Number(data);\n        if (this.answerNumber == n) {\n            //选择正确\n            AudioManager.playEffect(\"quziGamePanda\", \"res/audios/game_right\")\n        }\n        else {\n            //选择错误\n            AudioManager.playEffect(\"quziGamePanda\", \"res/audios/game_error\")\n        }\n        cc.tween(this.node).to(.5, { opacity: 0 }).call(() => {\n            // this.node.destroy()\n            if (this.answerNumber == n) {\n                //选择正确\n                this.gameBase.roundStateTypeChanged(RoundStateType.RoundComplete, { win: 1 })\n            }\n            else {\n                //选择错误\n                this.gameBase.roundStateTypeChanged(RoundStateType.RoundComplete, { win: 0 })\n            }\n        }).call(() => {\n            this.node.destroy();\n        }).start();\n    }\n\n\n    // update (dt) {}\n}\n","import { RoundStateType } from \"../../../../common/structure/CompEnum\";\nimport AudioManager from \"../../../../kit/system/audio/AudioManager\";\nimport ComponentBase from \"../../scripts/ComponentBase\";\n\n\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class SelectGame extends ComponentBase {\n\n\n\n    @property({ type: [cc.Node], displayName: \"步数指示器\" })\n    heartsArr: cc.Node[] = [];\n\n    @property({ type: [cc.Node], displayName: \"任务指示器\" })\n    answerItemsArr: cc.Node[] = [];\n\n    rightTimes: number = 0;\n\n    wrongTiems: number = 0;\n\n    @property({ type: [cc.Node], displayName: \"选项Node\" })\n    touchItems: cc.Node[] = [];\n\n\n    isGameEnd:boolean = false;\n\n    // onLoad () {}\n\n    start() {\n\n        cc.tween(this.node).to(1, { y: 0 }).call(() => {\n            this.schedule(this.showTips, 5);\n            this.showTips()\n        }).start();\n    }\n\n    showTips() {\n        this.touchItems.forEach((node) => {\n            cc.tween(node).by(0.2, { scale: 0.1 })\n                .by(0.2, { scale: -0.1 })\n                .union()\n                .repeat(2)\n                .start()\n        })\n    }\n\n    itemTouchCall(event, data) {\n        if (this.isGameEnd) {\n            cc.warn('game end')\n            return\n        }\n        let n = Number(data);\n        let node = event.target;\n        node.active = false;\n        if (n == 0) {\n            //正确\n            this.answerItemsArr[this.rightTimes].active = true;\n            AudioManager.playEffect(\"templateGame\", \"selectGame/audios/game_right\")\n            if (this.rightTimes >= 1) {\n                this.gameEnd(1);\n                return;\n            }\n            this.rightTimes += 1;\n        }\n        else {\n            //错误\n            AudioManager.playEffect(\"templateGame\", \"selectGame/audios/game_error\")\n            this.heartsArr[this.wrongTiems].active = false;\n            this.wrongTiems += 1;\n\n            if (this.wrongTiems >= 3) {\n                this.gameEnd(0)\n            }\n\n        }\n    }\n\n    gameEnd(w: number) {\n        this.isGameEnd = true;\n        cc.tween(this.node).to(2, { y: 900 }).call(() => {\n            this.gameBase.roundStateTypeChanged(RoundStateType.RoundComplete, { win: w })\n        }).call(() => {\n            this.node.destroy();\n        }).start()\n    }\n\n    onEnable() {\n        cc.tween(this.node).to(1, { y: 0 });\n    }\n\n\n\n    // update (dt) {}\n}\n"],"file":"index.js"}