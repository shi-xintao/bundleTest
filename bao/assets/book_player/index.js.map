{"version":3,"sources":["assets/bundles/book_player/src/PBBottomArea.ts","assets/bundles/book_player/src/PBPageContainer.ts","assets/bundles/book_player/src/PBPage.ts","assets/bundles/book_player/src/PBText.ts","assets/bundles/book_player/src/PBTrumpet.ts","assets/bundles/book_player/src/PictureBookPlayer.ts","assets/bundles/book_player/verlet/page-effect-assembler-base2.ts","assets/bundles/book_player/verlet/verlet-assembler2.ts","assets/bundles/book_player/verlet/verlet-render2.ts"],"names":["PBText_1","require","PBTrumpet_1","PictureBookPlayer_1","_a","cc","_decorator","ccclass","property","PBBottomArea","_super","__extends","_this","apply","this","arguments","trumpet","text","page_num","prototype","onTrumpetClicked","console","log","page","default","instance","currPage","voice","playVoice","onLoad","string","start","__decorate","type","displayName","RichText","Component","exports","AudioManager_1","verlet_render2_1","PBPage_1","PBPageContainer","pages","Map","uniqMap","prefabs","currPageIndex","leftHalf","rightHalf","leftHalf2","rightHalf2","verlet","page_material","turningLock","PBPageContainer_1","node","group","find","getComponent","onEnable","leftNode","Sprite","is3DNode","anchorX","width","height","x","y","rightNode","leftNode2","rightNode2","addVerlet","page1","page2","initAngle","isNext","Promise","resolve","active","zIndex","addComponent","setMaterial","_resetAssembler","updateAngle","setTextures","rightSpf","getTexture","leftSpf","removeVerlet","removeComponent","addPrefab","prefab","index","isValid","set","instantiate","eduPage","page_count","pageNum","turn_mode","PageModeEnum","_turn_mode","addPage","error","has","addChild","Object","defineProperty","get","onCaptured","toNextPage","__awaiter","nextPage","capture","sent","stopAllSounds","Camera","main","ortho","spriteFrame","eulerAngles","Vec3","ZERO","tween","delay","call","to","_angle","v3","TURN_DURATION","easing","toPrevPage","prevPage","unloadPrev","name","getPrefabName","destroy","assetManager","releaseAsset","delete","book_bundle","release","Prefab","unloadNext","forward","playEffect","loadNext","updatePageNum","backward","loadPrev","warn","loadPage","Enum","2d","3d","Material","PBPage","image","renderTexture","music","sound","soundLoop","head_icons","soundMap","voices","sleep","seconds","scheduleOnce","findImage","root","img","i","children","length","element","fixBg","then","onPageLoaded","audioEngine","playMusic","frameSize","view","getFrameSize","designResolution","Canvas","designSize","size","frameAspectRatio","screenSize","__assign","ratio","scale","setLeftRight","left","right","visibleRect","Node","parent","camera","backgroundColor","Color","TRANSPARENT","clearFlags","ClearFlags","DEPTH","STENCIL","COLOR","cullingMask","rect","RenderTexture","gl","game","fmt","STENCIL_INDEX8","initWithSize","targetTexture","render","arr","Uint8Array","readPixels","texture","Texture2D","setFlipY","initWithData","sp","SpriteFrame","arr2","texture2","sp2","getSound","getVoice","clip","single","loop","duration","nativeUrl","id_1","stopEffect","id","bottomArea","play","stop","playSound","onDestroy","stopMusic","PBText","PBTrumpet","anim","Animation","bundleUtils_1","PBBottomArea_1","BaseChapterComponent_1","kit_1","PictureBookPlayer","left_slot","right_slot","bottom_slot","page_slot","left_arrow","right_arrow","book_bundle_name","playMode","PLAY_MODE_AUTO","mode_btn","autoturnpage","autoturnpage_after_voice","needAutoTurnPage","restTime","setText","txt","loadBook","bundleName","bookBundleName","loadBundle","bundle","loadFirstPage","kit","manager","Event","emit","consts","LIFE_CYCLE_READY","on","LIFE_CYCLE_PARAMS","onParams","Button","off","data","params","pageTimer","update","dt","onRightArrowClicked","onPageUnLoaded","reject","prefabName","str","load","onLeftArrowClicked","b","onModeChanged","label","Label","PLAY_MODE_MANAUL","PageEffectAssemblerBase","verticesCount","indicesCount","floatsPerVert","colorOffset","renderData","getBuffer","renderer","_handle","getVfmt","updateColor","comp","color","uintVerts","uintVDatas","_val","l","updateIsFront","dataOffset","verts","vDatas","n","isFirstVert","firstVertX","secondVertX","isFront","initData","RenderData","init","createFlexData","indices","iDatas","count","idx","vertextID","fillBuffers","vData","iData","buffer","offsetInfo","request","vertexOffset","byteOffset","vbuf","_vData","subarray","ibuf","_iData","indiceOffset","vertexId","Assembler","page_effect_assembler_base2_1","gfx","vfmtPosUvColorFront","VertexFormat","ATTR_POSITION","ATTR_TYPE_FLOAT32","num","ATTR_UV0","ATTR_COLOR","ATTR_TYPE_UINT8","normalize","VerletAssembler","segmentCount","pointsCount","updateRenderData","pointList","getPointList","pointNum","posX","posY","anchorY","gapU","lastU","nextU","dstOffset","lastPoint","nextPoint","verlet_assembler2_1","PagePoint","oldPos","newPos","v2","VerletRender2","constraintTimes","damping","gravity","_initedMaterial","_pointList","pointListShadow","initPointList","assembler","texture1","material","getMaterial","define","setProperty","angle","forEach","pp","push","simulate","applyConstraint","draw","point","velocity","sub","mul","Math","max","add","_updateEndPos","endPos","tailPoint","Vec2","_getEndPos","rad","PI","per","endPosX","pow","endPosY","normalDistance","t","firstPoint","secondPoint","delatPos","distance","mag","fixDirection","fixDirection2","negate","fixLen","abs","fixVector","addSelf","fixHalfVector1","fixHalfVector2","RenderComponent"],"mappings":"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","sourcesContent":["// Learn TypeScript:\n//  - https://docs.cocos.com/creator/manual/en/scripting/typescript.html\n// Learn Attribute:\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\n\nimport PBText from \"./PBText\";\nimport PBTrumpet from \"./PBTrumpet\";\nimport PictureBookPlayer from \"./PictureBookPlayer\";\n\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class PBBottomArea extends cc.Component {\n\n    @property({ type: PBTrumpet, displayName: '小喇叭' })\n    trumpet: PBTrumpet = null\n\n    @property({ type: PBText, displayName: '文本' })\n    text: PBText = null\n\n    @property({ type: cc.RichText, displayName: '页码' })\n    page_num: cc.RichText = null\n\n    onTrumpetClicked() {\n        console.log('on pbbottomarea >>>>>>>>>>>>')\n        let page = PictureBookPlayer.instance.page.currPage\n        if (page && page.voice) {\n            page.playVoice(0)\n        }\n    }\n\n    onLoad() {\n        this.text.text.string = ''\n    }\n    start() {\n\n    }\n\n    // update (dt) {}\n}\n","// Learn TypeScript:\n//  - https://docs.cocos.com/creator/manual/en/scripting/typescript.html\n// Learn Attribute:\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\n\nimport AudioManager from \"../../../kit/system/audio/AudioManager\";\nimport VerletRender2 from \"../verlet/verlet-render2\";\nimport PBPage from \"./PBPage\";\nimport PictureBookPlayer from \"./PictureBookPlayer\";\n\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class PBPageContainer extends cc.Component {\n\n    pages = new Map<number, PBPage>()\n    uniqMap = new Map<number, boolean>()\n    prefabs = new Map<number, cc.Prefab>()\n\n    currPageIndex = 0\n\n    leftHalf: cc.Sprite = null\n    rightHalf: cc.Sprite = null\n\n    leftHalf2: cc.Sprite = null\n    rightHalf2: cc.Sprite = null\n\n    static instance: PBPageContainer = null\n    verlet: VerletRender2 = null\n\n    @property({ type: cc.Material, displayName: '翻页' })\n    page_material: cc.Material = null\n\n    // @property({ type: cc.Material, displayName: '翻页' })\n    // page_material:cc.Material = null\n\n    onLoad() {\n        PBPageContainer.instance = this\n        this.node.group = 'bookplayer'\n        this.verlet = cc.find('verlet', this.node).getComponent(VerletRender2)\n    }\n\n    onEnable() {\n        let leftNode = cc.find('left1', this.node)\n        this.leftHalf = leftNode.getComponent(cc.Sprite)\n        leftNode.is3DNode = false\n        leftNode.anchorX = 1\n        leftNode.width = this.node.width / 2\n        leftNode.height = this.node.height\n        leftNode.x = 0\n        leftNode.y = 0\n\n        let rightNode = cc.find('right1', this.node)\n        this.rightHalf = rightNode.getComponent(cc.Sprite)\n        rightNode.is3DNode = true\n        rightNode.anchorX = 0\n        rightNode.width = this.node.width / 2\n        rightNode.height = this.node.height\n        rightNode.x = 0\n        rightNode.y = 0\n\n        let leftNode2 = cc.find('left2', this.node)\n        this.leftHalf2 = leftNode2.getComponent(cc.Sprite)\n        leftNode2.is3DNode = true\n        leftNode2.anchorX = 1\n        leftNode2.width = this.node.width / 2\n        leftNode2.height = this.node.height\n        leftNode2.x = 0\n        leftNode2.y = 0\n\n        let rightNode2 = cc.find('right2', this.node)\n        this.rightHalf2 = rightNode2.getComponent(cc.Sprite)\n        rightNode2.is3DNode = true\n        rightNode2.anchorX = 0\n        rightNode2.width = this.node.width / 2\n        rightNode2.height = this.node.height\n        rightNode2.x = 0\n        rightNode2.y = 0\n    }\n    /**\n     * 添加verlet翻页效果节点\n     * @param page1 \n     * @param page2 \n     */\n    async addVerlet(page1: PBPage, page2: PBPage, initAngle: number, isNext: boolean) {\n        return new Promise<void>(resolve => {\n            let node = this.verlet.node\n            node.active = true\n            node.zIndex = 10000\n            node.width = this.node.width / 2\n            node.height = this.node.height\n            node.anchorX = 0\n            node.x = 0\n            node.y = 0\n            this.verlet = node.addComponent(VerletRender2)\n            this.verlet.setMaterial(0, this.page_material)\n            this.verlet._resetAssembler()\n            this.verlet.updateAngle(initAngle)\n            this.verlet.setTextures(page1.rightSpf.getTexture(), page2.leftSpf.getTexture())\n            resolve()\n        })\n    }\n\n    removeVerlet() {\n        this.verlet.node.active = false\n        this.verlet.node.removeComponent(VerletRender2)\n        // this.verlet.node.destroy()\n    }\n\n    start() {\n\n\n    }\n\n    static PageModeEnum = cc.Enum({ 'verlet': 0, '2d': 1, '3d': 2 })\n\n    async addPrefab(prefab: cc.Prefab, index: number) {\n        if (cc.isValid(prefab)) {\n            this.prefabs.set(index, prefab)\n            // if (this.prefabs.length == 1) {\n            let page = cc.instantiate(prefab).addComponent(PBPage)\n            page.index = index\n            if (index == 0) {//首页\n                //读取页数\n                let eduPage = page.node.getComponent('EduPage') as EduPage\n                PictureBookPlayer.page_count = eduPage.pageNum\n                PictureBookPlayer.turn_mode = PBPageContainer.PageModeEnum[eduPage._turn_mode] //eduPage.turnModeName\n            }\n            this.addPage(page)\n            // if (index == 0) {\n            //     this.loadNext()\n            // }\n        } else {\n            console.error('prefab is invalid!')\n        }\n\n        // }\n    }\n\n    addPage(page: PBPage) {\n        if (this.uniqMap.has(page.index)) {\n            return\n        }\n        this.uniqMap.set(page.index, true)\n        page.node.zIndex = -page.index * 10\n        this.node.addChild(page.node)\n        this.pages.set(page.index, page)\n    }\n\n    get currPage() {\n        return this.pages.get(this.currPageIndex)\n    }\n\n    get nextPage() {\n        if (this.currPageIndex + 1 < PictureBookPlayer.page_count) {\n            return this.pages.get(this.currPageIndex + 1)\n        }\n        return null\n    }\n\n    get prevPage() {\n        if (this.currPageIndex - 1 >= 0) {\n            return this.pages.get(this.currPageIndex - 1)\n        }\n        return null\n    }\n\n    onCaptured(page: PBPage) {\n        // if (page.index == this.currPageIndex) {\n        //     this.leftHalf.spriteFrame = page.leftSpf\n        //     this.rightHalf.spriteFrame = page.rightSpf\n        //     //test\n        //     this.leftHalf.node.active = true\n        //     this.rightHalf.node.active = false\n        // } else {\n        //     this.leftHalf2.spriteFrame = page.leftSpf\n        //     this.rightHalf2.spriteFrame = page.rightSpf\n        //     this.leftHalf2.node.active = false\n        //     this.rightHalf2.node.active = true\n        // }\n    }\n\n    private turningLock = false\n    static TURN_DURATION = 0.8\n\n    //下一页\n    async toNextPage() {\n        return new Promise<void>(async resolve => {\n            let nextPage = this.nextPage\n            if (nextPage == null) {\n                console.log('nextPage is null2>>>')\n                resolve()\n                return\n            }\n\n            let currPage = this.currPage\n\n            await currPage.capture()\n\n            // PictureBookPlayer.instance.config.turn_mode = '3d'\n            currPage.stopAllSounds()\n            if (PictureBookPlayer.turn_mode == '3d') {\n                cc.Camera.main.ortho = false\n            } else if (PictureBookPlayer.turn_mode == 'verlet') {\n                this.leftHalf.node.active = true\n                this.leftHalf.spriteFrame = currPage.leftSpf\n                this.rightHalf.node.active = false\n                this.rightHalf.spriteFrame = nextPage.rightSpf\n                this.leftHalf2.node.active = false\n                this.rightHalf2.node.active = false\n                this.leftHalf.node.eulerAngles = cc.Vec3.ZERO\n                this.rightHalf.node.eulerAngles = cc.Vec3.ZERO\n                currPage.node.zIndex = 101\n                nextPage.node.zIndex = 100\n                this.leftHalf.node.zIndex = 101\n                this.rightHalf.node.zIndex = 102\n                await this.addVerlet(currPage, nextPage, 0, true)\n                cc.tween(this.verlet).delay(0.05).call(() => {\n                    currPage.node.zIndex = 0\n                    nextPage.node.zIndex = 100\n                    this.rightHalf.node.active = true\n                }).to(0.7, { _angle: 180 }).delay(0.5).call(() => {\n                    this.leftHalf.node.active = false\n                    this.rightHalf.node.active = false\n                    this.currPageIndex = nextPage.index\n                    this.removeVerlet()\n                    resolve()\n                }).start()\n            }\n\n            if (PictureBookPlayer.turn_mode != 'verlet') {\n                //设置图片内容\n                this.leftHalf.spriteFrame = currPage.leftSpf\n                this.rightHalf.spriteFrame = currPage.rightSpf\n                this.leftHalf2.spriteFrame = nextPage.leftSpf\n                this.rightHalf2.spriteFrame = nextPage.rightSpf\n\n                //设置姿态\n                this.leftHalf.node.eulerAngles = cc.Vec3.ZERO\n                this.rightHalf.node.eulerAngles = cc.Vec3.ZERO\n                this.leftHalf2.node.eulerAngles = cc.v3(0, 90, 0)\n                this.rightHalf2.node.eulerAngles = cc.Vec3.ZERO\n\n                //显隐\n                this.leftHalf.node.active = true\n                this.rightHalf.node.active = true\n                this.leftHalf2.node.active = false\n                this.rightHalf2.node.active = true\n\n                //设置遮挡\n                currPage.node.zIndex = 0\n                nextPage.node.zIndex = 100\n\n                this.leftHalf.node.zIndex = nextPage.node.zIndex + 1\n                this.rightHalf2.node.zIndex = nextPage.node.zIndex\n                this.rightHalf.node.zIndex = this.rightHalf2.node.zIndex + 1\n                this.leftHalf2.node.zIndex = this.leftHalf.node.zIndex + 1\n\n                //currPage\n                cc.tween(this.rightHalf.node)\n                    .to(PBPageContainer.TURN_DURATION / 2, { eulerAngles: cc.v3(0, -90, 0) }, { easing: 'sineIn' })\n                    .call(() => {\n                        this.rightHalf.node.active = false\n                    }).start()\n                //nextPage\n                cc.tween(this.leftHalf2.node)\n                    .delay(PBPageContainer.TURN_DURATION / 2)\n                    .call(() => {\n                        this.leftHalf2.node.active = true\n                    })\n                    .to(PBPageContainer.TURN_DURATION / 2, { eulerAngles: cc.v3(0, 0, 0) }, { easing: 'sineOut' })\n                    .call(() => {\n                        this.leftHalf2.node.active = false\n                        this.leftHalf.node.active = false\n                        this.rightHalf.node.active = false\n                        this.currPageIndex = nextPage.index\n                        if (PictureBookPlayer.turn_mode == '3d') {\n                            cc.Camera.main.ortho = true\n                        }\n                        resolve()\n                    }).start()\n            }\n\n            // PictureBookPlayer.instance.config.turn_mode = 'verlet'\n\n        })\n    }\n\n    //上一页\n    async toPrevPage() {\n        return new Promise<void>(async resolve => {\n            let prevPage = this.prevPage\n            if (prevPage == null) {\n                resolve()\n                return\n            }\n\n            let currPage = this.currPage\n\n            await currPage.capture()\n            currPage.stopAllSounds()\n            if (PictureBookPlayer.turn_mode == '3d') {\n                cc.Camera.main.ortho = false\n            } else if (PictureBookPlayer.turn_mode == 'verlet') {\n                this.leftHalf.node.active = false\n                this.leftHalf.spriteFrame = prevPage.leftSpf\n                this.rightHalf.node.active = true\n                this.rightHalf.spriteFrame = currPage.rightSpf\n                this.leftHalf2.node.active = false\n                this.rightHalf2.node.active = false\n                this.leftHalf.node.eulerAngles = cc.Vec3.ZERO\n                this.rightHalf.node.eulerAngles = cc.Vec3.ZERO\n                currPage.node.zIndex = 101\n                prevPage.node.zIndex = 100\n                this.leftHalf.node.zIndex = 101\n                this.rightHalf.node.zIndex = 100\n                await this.addVerlet(prevPage, currPage, 180, false)\n                cc.tween(this.verlet).delay(0.05).call(() => {\n                    currPage.node.zIndex = 0\n                    prevPage.node.zIndex = 100\n                    this.leftHalf.node.active = true\n                }).to(0.7, { _angle: 0 }).delay(0.5).call(() => {\n                    this.leftHalf2.node.active = false\n                    this.rightHalf.node.active = false\n                    this.rightHalf2.node.active = false\n                    this.leftHalf.node.active = false\n                    this.currPageIndex = prevPage.index\n                    this.removeVerlet()\n                    resolve()\n                }).start()\n            }\n\n            if (PictureBookPlayer.turn_mode != 'verlet') {\n                //设置图片内容\n                this.leftHalf.spriteFrame = currPage.leftSpf\n                this.rightHalf.spriteFrame = currPage.rightSpf\n                this.leftHalf2.spriteFrame = prevPage.leftSpf\n                this.rightHalf2.spriteFrame = prevPage.rightSpf\n\n                //设置姿态\n                this.leftHalf.node.eulerAngles = cc.Vec3.ZERO\n                this.rightHalf.node.eulerAngles = cc.Vec3.ZERO\n                this.leftHalf2.node.eulerAngles = cc.Vec3.ZERO\n                this.rightHalf2.node.eulerAngles = cc.v3(0, -90, 0)\n\n                //显隐\n                this.leftHalf.node.active = true\n                this.rightHalf.node.active = true\n                this.leftHalf2.node.active = true\n                this.rightHalf2.node.active = false\n\n                //设置遮挡\n                currPage.node.zIndex = 0\n                prevPage.node.zIndex = 100\n\n                this.leftHalf2.node.zIndex = prevPage.node.zIndex + 1\n                this.rightHalf.node.zIndex = this.leftHalf2.node.zIndex\n                this.rightHalf2.node.zIndex = this.rightHalf.node.zIndex + 1\n                this.leftHalf.node.zIndex = this.leftHalf2.node.zIndex + 1\n\n                //currPage\n                cc.tween(this.leftHalf.node)\n                    .to(PBPageContainer.TURN_DURATION / 2, { eulerAngles: cc.v3(0, 90, 0) }, { easing: 'sineIn' })\n                    .call(() => {\n                        this.leftHalf.node.active = false\n                    }).start()\n                //nextPage\n                cc.tween(this.rightHalf2.node)\n                    .delay(PBPageContainer.TURN_DURATION / 2)\n                    .call(() => {\n                        this.rightHalf2.node.active = true\n                    })\n                    .to(PBPageContainer.TURN_DURATION / 2, { eulerAngles: cc.v3(0, 0, 0) }, { easing: 'sineOut' })\n                    .call(() => {\n                        this.rightHalf2.node.active = false\n                        this.leftHalf2.node.active = false\n                        this.rightHalf.node.active = false\n                        this.currPageIndex = prevPage.index\n                        if (PictureBookPlayer.turn_mode == '3d') {\n                            cc.Camera.main.ortho = true\n                        }\n                        resolve()\n                    }).start()\n            }\n        })\n    }\n\n    unloadPrev() {\n        const index = this.currPageIndex - 2\n        if (index >= 0) {\n            let page = this.pages.get(index)\n            let name = PictureBookPlayer.instance.getPrefabName(index)\n            if (page) {\n                // console.log('destroy page node:' + page.index)\n                page.node.destroy()\n            }\n            let prefab = this.prefabs.get(index)\n            if (prefab) {\n                // console.log('destroy prefab:' + (index))\n                cc.assetManager.releaseAsset(prefab)\n                prefab.destroy()\n            }\n            this.uniqMap.delete(index)\n            this.pages.delete(index)\n            PictureBookPlayer.instance.book_bundle.release(name, cc.Prefab)\n        }\n    }\n\n    unloadNext() {\n        const index = this.currPageIndex + 2\n        if (index < PictureBookPlayer.page_count) {\n            let page = this.pages.get(index)\n            let name = PictureBookPlayer.instance.getPrefabName(index)\n            if (page) {\n                // console.log('destroy page node:' + page.index)\n                page.node.destroy()\n            }\n            let prefab = this.prefabs.get(index)\n            if (prefab) {\n                // console.log('destroy prefab:' + (index))\n                cc.assetManager.releaseAsset(prefab)\n                prefab.destroy()\n            }\n            this.uniqMap.delete(index)\n            this.pages.delete(index)\n            PictureBookPlayer.instance.book_bundle.release(name, cc.Prefab)\n        }\n    }\n\n    async forward() {\n        if (this.turningLock) {\n            return false\n        }\n\n        let nextPage = this.nextPage\n        if (nextPage == null) {\n            return false\n        }\n\n        this.turningLock = true\n        AudioManager.playEffect('book_player', 'sound/changepage')\n        await this.toNextPage()\n        if (this.currPageIndex < PictureBookPlayer.page_count - 1) {\n            await this.loadNext()\n        }\n        PictureBookPlayer.instance.updatePageNum()\n        this.unloadPrev()\n        this.turningLock = false\n        return true\n    }\n\n    async backward() {\n        if (this.turningLock) {\n            return\n        }\n        this.turningLock = true\n        AudioManager.playEffect('book_player', 'sound/changepage')\n        await this.toPrevPage()\n        if (this.currPageIndex > 0) {\n            await this.loadPrev()\n        }\n        PictureBookPlayer.instance.updatePageNum()\n        this.unloadNext()\n        this.turningLock = false\n    }\n\n    async loadNext() {\n        return new Promise<void>(async resolve => {\n            console.warn('load next:' + (this.currPageIndex + 1))\n            let prefab = await PictureBookPlayer.instance.loadPage(this.currPageIndex + 1)\n            if (prefab) {\n                this.addPrefab(prefab, this.currPageIndex + 1)\n            }\n            resolve()\n        })\n    }\n\n    async loadPrev() {\n        return new Promise<void>(async resolve => {\n            let prefab = await PictureBookPlayer.instance.loadPage(this.currPageIndex - 1)\n            if (prefab) {\n                this.addPrefab(prefab, this.currPageIndex - 1)\n            }\n            resolve()\n        })\n    }\n}\n","// Learn TypeScript:\n//  - https://docs.cocos.com/creator/manual/en/scripting/typescript.html\n// Learn Attribute:\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\n\nimport PBPageContainer from \"./PBPageContainer\";\nimport PictureBookPlayer from \"./PictureBookPlayer\";\n\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class PBPage extends cc.Component {\n\n    image: cc.Sprite = null //背景\n\n    renderTexture: cc.RenderTexture = null\n\n    index = 0\n\n    // leftHalf: cc.Sprite = null\n    // rightHalf: cc.Sprite = null\n\n    leftSpf: cc.SpriteFrame = null\n    rightSpf: cc.SpriteFrame = null\n\n    // config: PageConfig = null\n\n    music: cc.AudioClip = null\n    voice: cc.AudioClip[] = []\n    sound: cc.AudioClip = null\n    soundLoop = true\n    text: string[] = []\n    head_icons: cc.SpriteFrame[] = []\n\n    onLoad() {\n        //加载资源\n        let eduPage = this.node.getComponent('EduPage') as EduPage\n        this.music = eduPage.music\n        this.voice = eduPage.voices\n        this.sound = eduPage.sound\n        this.soundLoop = eduPage.soundLoop\n        this.text = eduPage.text\n        this.head_icons = eduPage.head_icons\n    }\n\n    async sleep(seconds: number) {\n        return new Promise<void>(resolve => {\n            this.scheduleOnce(() => {\n                resolve()\n            }, seconds)\n        });\n    }\n\n    /**\n     * 查找bg\n     */\n    static findImage(root: cc.Node) {\n        let img = root.getComponent(cc.Sprite)\n        if (img && (root.width >= 1334 && root.height >= 750)) {\n            return img\n        }\n        for (let i = 0; i < root.children.length; i++) {\n            const element = root.children[i];\n            img = this.findImage(element)\n            if (img) {\n                return img\n            }\n        }\n        return null\n    }\n\n    async start() {\n        this.image = cc.find('bg', this.node).getComponent(cc.Sprite)\n        // this.config = PictureBookPlayer.instance.getConfig(this.index)\n        let eduPage = this.node.getComponent('EduPage')\n        let music = eduPage.music\n        this.fixBg()\n        this.capture().then(() => {\n            this.node.active = false\n        })\n        PictureBookPlayer.instance.onPageLoaded(this)\n        if (this.music) {\n            // AudioManager.playMusic(PictureBookPlayer.instance.config.bundle, 'music/' + this.config.music)\n            cc.audioEngine.playMusic(this.music, true)\n        }\n    }\n\n    fixBg() {\n        let frameSize: cc.Size = cc.view.getFrameSize() // 屏幕尺寸\n        let designResolution: cc.Size = cc.Canvas.instance.designResolution\n        let designSize: cc.Size = cc.size(designResolution.width, designResolution.height)  // cc.Canvas.instance.designResolution\n        let frameAspectRatio: number = frameSize.width / frameSize.height\n        let screenSize: cc.Size = { ...designSize } as cc.Size\n\n        let ratio: number = this.image.node.width / this.image.node.height\n        if (ratio > frameAspectRatio) {\n            let width = this.image.node.width * screenSize.height / this.image.node.height\n            // this.image.node.width = width\n            // this.image.node.height = screenSize.height\n            let scale = width / this.image.node.width\n            this.node.scale = scale\n        } else {\n            let height = this.image.node.height * screenSize.width / this.image.node.width\n            // this.image.node.width = screenSize.width\n            // this.image.node.height = height\n            let scale = height / this.image.node.height\n            this.node.scale = scale\n        }\n        this.image.node.x = 0\n        this.image.node.y = 0\n    }\n\n    setLeftRight(left: cc.Sprite, right: cc.Sprite) {\n        // this.leftHalf = left\n        // this.rightHalf = right\n    }\n\n    async capture() {\n        return new Promise<void>(resolve => {\n            let width = cc.visibleRect.width\n            let height = cc.visibleRect.height\n            let node = new cc.Node('capture node')\n            node.parent = this.node\n            let camera = node.addComponent(cc.Camera)\n            camera.backgroundColor = cc.Color.TRANSPARENT\n            camera.clearFlags = cc.Camera.ClearFlags.DEPTH | cc.Camera.ClearFlags.STENCIL | cc.Camera.ClearFlags.COLOR\n            camera.cullingMask = 4\n\n            camera.rect = cc.rect(0, 0, 1, 1)\n            // camera.alignWithScreen = false\n            // camera.orthoSize = width / 2\n            let renderTexture = new cc.RenderTexture()\n            let gl = cc.game['_renderContext']\n            let fmt = gl.STENCIL_INDEX8//cc['gfx'].RB_FMT_S8 //gl.STENCIL_INDEX8\n            // renderTexture.initWithSize(width, height, gl.STENCIL_INDEX8);\n            renderTexture.initWithSize(width, height, fmt);\n            camera.targetTexture = renderTexture\n            camera.render()\n            //left half\n            let arr = new Uint8Array(width * height * 4)\n            renderTexture.readPixels(arr, 0, 0, width / 2, height)\n            let texture = new cc.Texture2D()\n            texture.setFlipY(true)\n            texture.initWithData(arr, fmt, width / 2, height)\n            let sp = new cc.SpriteFrame(texture)\n            this.leftSpf = sp\n\n            //right half\n            let arr2 = new Uint8Array(width * height * 4)\n            renderTexture.readPixels(arr2, width / 2, 0, width / 2, height)\n            let texture2 = new cc.Texture2D()\n            texture2.setFlipY(true)\n            texture2.initWithData(arr2, fmt, width / 2, height)\n            let sp2 = new cc.SpriteFrame(texture2)\n            this.rightSpf = sp2\n\n            renderTexture = null\n            arr = null\n            arr2 = null\n            node.destroy()\n            resolve()\n            PBPageContainer.instance.onCaptured(this)\n\n            // cc.find('snapshot1',PBPageContainer.instance.node.parent).getComponent(cc.Sprite).spriteFrame = sp\n            // cc.find('snapshot2',PBPageContainer.instance.node.parent).getComponent(cc.Sprite).spriteFrame = sp2\n\n        })\n    }\n\n    getSound(index) {\n        // if (!this.sound) {\n        //     return null\n        // }\n        // if (this.sound.length == 0) {\n        //     return null\n        // }\n        // if (index < 0 || index > this.config.sound.length - 1) {\n        //     return null\n        // }\n        // let sound = this.config.sound[index]\n        // let sound = this.sound\n        // let type = typeof sound\n        // if (type == 'object') {\n        //     return { name: 'sound/' + sound.name, loop: true }\n        // } else if (type == 'string') {\n        // return { name: 'sound/' + sound, loop: false }\n        // }\n\n        return this.sound\n    }\n\n    getVoice(index) {\n        // if (!this.config.voice) {\n        //     return null\n        // }\n        if (!this.voice) {\n            return null\n        }\n        if (this.voice.length == 0) {\n            return null\n        }\n        if (index < 0 || index > this.voice.length - 1) {\n            return null\n        }\n        // let sound = this.config.voice[index]\n        // let type = typeof sound\n        // if (type == 'object') {\n        //     return { name: 'voice/' + sound.name, loop: true }\n        // } else if (type == 'string') {\n        //     return { name: 'voice/' + sound, loop: false }\n        // }\n        return this.voice[index]\n    }\n\n    soundMap: Map<string, number> = new Map<string, number>()\n\n    async playEffect(clip: cc.AudioClip, single: boolean, loop: boolean) {\n        return new Promise<void>(resolve => {\n            let duration = clip.duration\n            if (single) {\n                if (this.soundMap.has(clip.nativeUrl)) {\n                    let id = this.soundMap.get(clip.nativeUrl)\n                    cc.audioEngine.stopEffect(id)\n                }\n            }\n            let id = cc.audioEngine.playEffect(clip, loop)\n            this.soundMap.set(clip.nativeUrl, id)\n            this.scheduleOnce(() => {\n                if (this.soundMap.has(clip.nativeUrl)) {\n                    this.soundMap.delete(clip.nativeUrl)\n                }\n                console.log('sound play over' + clip.nativeUrl)\n                resolve()\n            }, duration)\n        })\n    }\n\n    async playVoice(index: number) {\n        // AudioManager.stopEffect()\n        let sound = this.getVoice(index)\n        if (sound) {\n            PictureBookPlayer.instance.bottomArea.trumpet.play()\n            // await AudioManager.playEffectByName(PictureBookPlayer.instance.config.bundle, sound.name, true, sound.loop)\n            await this.playEffect(sound, true, false)\n            PictureBookPlayer.instance.bottomArea.trumpet.stop()\n        }\n    }\n\n    async playSound(index: number) {\n        // AudioManager.stopEffect()\n        let sound = this.getSound(index)\n        if (sound) {\n            // await AudioManager.playEffectByName(PictureBookPlayer.instance.config.bundle, sound.name, true, sound.loop)\n            await this.playEffect(sound, true, this.soundLoop)\n        }\n    }\n    // update (dt) {}\n\n    onDestroy() {\n        console.log('destroy page: ' + this.index)\n        if (this.leftSpf) {\n            this.leftSpf.destroy()\n            this.leftSpf = null\n        }\n\n        if (this.rightSpf) {\n            this.rightSpf.destroy()\n            this.rightSpf = null\n        }\n\n        // if (this.config.voice) {\n        //     this.config.voice.forEach((sound) => {\n        //         let type = typeof sound\n        //         let name = ''\n        //         if (type == 'object') {\n        //             name = sound.name\n        //         } else if (type == 'string') {\n        //             name = sound\n        //         }\n        //         AudioManager.destroyAudio(PictureBookPlayer.instance.config.bundle, 'voice/' + name)\n        //     })\n        // }\n\n        // if (this.config.sound) {\n        //     this.config.sound.forEach((sound) => {\n        //         let type = typeof sound\n        //         let name = ''\n        //         if (type == 'object') {\n        //             name = sound.name\n        //         } else if (type == 'string') {\n        //             name = sound\n        //         }\n        //         AudioManager.destroyAudio(PictureBookPlayer.instance.config.bundle, 'sound/' + name)\n        //     })\n        // }\n\n        // if (this.config.music) {\n        //     AudioManager.destroyAudio(PictureBookPlayer.instance.config.bundle, 'music/' + this.config.music)\n        // }\n\n    }\n\n\n    stopAllSounds() {\n        // if (this.config.voice) {\n        //     this.config.voice.forEach((sound) => {\n        //         let type = typeof sound\n        //         let name = ''\n        //         let isloop = false\n        //         if (type == 'object') {\n        //             name = 'voice/' + sound.name\n        //             isloop = sound.loop\n        //         } else if (type == 'string') {\n        //             name = 'voice/' + sound\n        //         }\n        //         if (!isloop) {\n        //             AudioManager.stopEffectByName(name)\n        //         } else {\n        //             AudioManager.stopLoopEffect(PictureBookPlayer.instance.config.bundle, name)\n        //         }\n        //     })\n        // }\n\n        // if (this.config.sound) {\n        //     this.config.sound.forEach((sound) => {\n        //         let type = typeof sound\n        //         let name = ''\n        //         let isloop = false\n        //         if (type == 'object') {\n        //             name = 'sound/' + sound.name\n        //             isloop = sound.loop\n        //         } else if (type == 'string') {\n        //             name = 'sound/' + sound\n        //         }\n        //         if (!isloop) {\n        //             AudioManager.stopEffectByName(name)\n        //         } else {\n        //             AudioManager.stopLoopEffect(PictureBookPlayer.instance.config.bundle, name)\n        //         }\n        //     })\n        // }\n\n        // if (this.config.music) {\n        //     AudioManager.stopMusic()\n        // }\n\n        if (this.sound) {\n            let clip = this.sound\n            if (this.soundMap.has(clip.nativeUrl)) {\n                let id = this.soundMap.get(clip.nativeUrl)\n                cc.audioEngine.stopEffect(id)\n            }\n        }\n\n        if (this.voice && this.voice.length > 0) {\n            for (let i = 0; i < this.voice.length; i++) {\n                const clip = this.voice[i];\n                if (this.soundMap.has(clip.nativeUrl)) {\n                    let id = this.soundMap.get(clip.nativeUrl)\n                    cc.audioEngine.stopEffect(id)\n                }\n            }\n        }\n\n        if (this.music) {\n            cc.audioEngine.stopMusic()\n        }\n    }\n}\n","// Learn TypeScript:\n//  - https://docs.cocos.com/creator/manual/en/scripting/typescript.html\n// Learn Attribute:\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\n\nconst {ccclass, property} = cc._decorator;\n\n@ccclass\nexport default class PBText extends cc.Component {\n\n    \n    @property({ type: cc.RichText, displayName: '文本' })\n    text: cc.RichText = null\n\n    // LIFE-CYCLE CALLBACKS:\n\n    // onLoad () {}\n\n    start () {\n\n    }\n\n    // update (dt) {}\n}\n","// Learn TypeScript:\n//  - https://docs.cocos.com/creator/manual/en/scripting/typescript.html\n// Learn Attribute:\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\n\nconst { ccclass, property } = cc._decorator;\n/**\n * 绘本小喇叭\n */\n@ccclass\nexport default class PBTrumpet extends cc.Component {\n\n    anim: cc.Animation = null\n    onLoad() {\n        this.anim = cc.find('icon', this.node).getComponent(cc.Animation)\n    }\n\n    play() {\n        this.anim.play('playing')\n    }\n\n    stop() {\n        this.anim.play('pausing')\n    }\n\n    start() {\n\n    }\n\n    // update (dt) {}\n}\n","// Learn TypeScript:\n//  - https://docs.cocos.com/creator/manual/en/scripting/typescript.html\n// Learn Attribute:\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\n\nimport AudioManager from \"../../../kit/system/audio/AudioManager\";\nimport { loadBundle } from \"../../../kit/utils/bundleUtils\";\nimport PBBottomArea from \"./PBBottomArea\";\nimport PBPage from \"./PBPage\";\nimport PBPageContainer from \"./PBPageContainer\";\nimport BaseChapterComponent from \"../../../common/scripts/BaseChapterComponent\";\nimport { kit } from \"../../../kit/kit\";\n\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class PictureBookPlayer extends BaseChapterComponent {\n    left_slot: cc.Node = null\n    right_slot: cc.Node = null\n    bottom_slot: cc.Node = null\n    page_slot: cc.Node = null\n    book_bundle: cc.AssetManager.Bundle = null\n\n    bottomArea: PBBottomArea = null\n\n    left_arrow: cc.Node = null\n    right_arrow: cc.Node = null\n    // bottom: PBBottomArea = null\n\n    private book_bundle_name = ''\n\n    page: PBPageContainer = null\n\n    static instance: PictureBookPlayer = null\n    static turn_mode = 'verlet'\n    // config: BookConfig = null\n\n    static PLAY_MODE_AUTO = 0\n    static PLAY_MODE_MANAUL = 1\n    playMode = PictureBookPlayer.PLAY_MODE_AUTO //0自动 1手动\n\n    mode_btn: cc.Button = null\n\n    // getConfig(index: number) {\n    //     return this.config.pages[`${index + 1}`] as PageConfig\n    // }\n\n    // get currConfig() {\n    //     return this.getConfig(this.page.currPageIndex)\n    // }\n\n    setText(txt: string) {\n        this.bottomArea.text.text.string = txt\n    }\n\n    set bookBundleName(name) {\n        this.book_bundle_name = name\n    }\n\n    async loadBook(bundleName: string) {\n        this.bookBundleName = bundleName\n        return new Promise<void>(resolve => {\n            loadBundle(this.book_bundle_name).then(async (bundle: cc.AssetManager.Bundle) => {\n                this.book_bundle = bundle\n                // //加载UI\n                // this.book_bundle.load('custom/left_arrow', cc.Prefab, (error: Error, prefab: cc.Prefab) => {\n                //     if (error) {\n                        // this.left_arrow.active = true\n                //         return\n                //     }\n                //     let left_arrow = cc.instantiate(prefab)\n                //     this.left_slot.addChild(left_arrow)\n                // })\n                // this.book_bundle.load('custom/right_arrow', cc.Prefab, (error: Error, prefab: cc.Prefab) => {\n                //     if (error) {\n                        // this.right_arrow.active = true\n                //         return\n                //     }\n                //     let right_arrow = cc.instantiate(prefab)\n                //     this.right_slot.addChild(right_arrow)\n                // })\n\n                // this.book_bundle.load('custom/bottom_area', cc.Prefab, (error: Error, prefab: cc.Prefab) => {\n                //     if (error) {\n                        // this.bottomArea.node.active = true\n                //         return\n                //     }\n                //     let bottom_area = cc.instantiate(prefab).getComponent(PBBottomArea)\n                //     this.bottomArea = bottom_area\n                //     this.node.addChild(bottom_area.node)\n                // })\n\n                // this.book_bundle.load('setting', cc.JsonAsset, async (error: Error, txt: cc.JsonAsset) => {\n                //     if (error) {\n                //         console.log(error)\n                //         return\n                //     }\n                //     this.config = txt.json\n                //     await this.loadAllPages()\n                //     this.updatePageNum()\n                //     kit.manager.Event.emit(kit.consts.Event.LIFE_CYCLE_READY)\n                //     resolve()\n                // })\n                await this.loadFirstPage()\n                this.updatePageNum()\n                kit.manager.Event.emit(kit.consts.Event.LIFE_CYCLE_READY)\n            })\n        })\n    }\n\n    onLoad() {\n        PictureBookPlayer.instance = this\n        this.left_slot = cc.find('left_slot', this.node)\n        this.right_slot = cc.find('right_slot', this.node)\n        this.bottom_slot = cc.find('bottom_slot', this.node)\n        this.left_arrow = cc.find('left_arrow', this.left_slot)\n        this.left_arrow.active = true\n        this.right_arrow = cc.find('right_arrow', this.right_slot)\n        this.right_arrow.active = true\n        this.bottomArea = cc.find('bottom_area', this.bottom_slot).getComponent(PBBottomArea)\n        this.bottomArea.node.active = true\n        this.page_slot = cc.find('page_slot', this.node)\n        this.page = cc.find('page', this.page_slot).getComponent(PBPageContainer)\n        // let mc = cc.Camera.main\n        // mc.ortho = false\n        // mc.zoomRatio = 1\n        // mc.alignWithScreen = false\n        // mc.farClip = 4096*2\n        // // this.node.z = -1000\n        // this.node.is3DNode = true\n        kit.manager.Event.on(kit.consts.Event.LIFE_CYCLE_PARAMS, this.onParams, this)\n        this.mode_btn = cc.find('mode_btn', this.node).getComponent(cc.Button)\n    }\n\n    onDestroy() {\n        kit.manager.Event.off(kit.consts.Event.LIFE_CYCLE_PARAMS, this.onParams, this)\n    }\n\n    onParams(data) {\n        this.params = data.data\n        this.loadBook(this.params.bundle)\n    }\n\n    async onPageLoaded(page: PBPage) {\n        if (page.index == this.page.currPageIndex) {\n            if (page.text && page.text.length > 0) {\n                PictureBookPlayer.instance.setText(page.text[0])\n            }\n            if (page.sound) {\n                page.playSound(0)\n            }\n            this.pageTimer(page)\n        }\n    }\n\n    autoturnpage = 10\n    autoturnpage_after_voice = 5\n\n    pageTimer(page: PBPage) {\n        this.needAutoTurnPage = false\n        // if (page.config.voice && page.config.voice.length > 0) {\n        if (page.voice) {\n            if (this.autoturnpage > 0) {\n                page.playVoice(0).then(() => {\n                    // console.log('voice ended:' + page.config.voice[0])\n                    if (this.playMode == PictureBookPlayer.PLAY_MODE_AUTO) {\n                        this.needAutoTurnPage = true\n                        this.restTime = this.autoturnpage_after_voice\n                    }\n                })\n            } else {\n                page.playVoice(0)\n            }\n        } else {\n            this.needAutoTurnPage = true\n            this.restTime = this.autoturnpage\n        }\n    }\n\n    // autoTurningMode = false\n    needAutoTurnPage = false\n    restTime = 0\n    update(dt: number) {\n        if (this.playMode == PictureBookPlayer.PLAY_MODE_AUTO && this.needAutoTurnPage) {\n            if (this.restTime > 0) {\n                this.restTime -= dt\n                if (this.restTime <= 0) {\n                    console.log('auto turn page >>>>>')\n                    this.onRightArrowClicked()\n                }\n            }\n        }\n    }\n\n    async sleep(seconds: number) {\n        return new Promise<void>(resolve => {\n            this.scheduleOnce(() => {\n                resolve()\n            }, seconds)\n        });\n    }\n\n    onPageUnLoaded(page: PBPage) {\n        if (page.index == this.page.currPageIndex) {\n            PictureBookPlayer.instance.setText('')\n            AudioManager.stopEffect()\n        }\n    }\n\n    static page_count = 0\n\n    updatePageNum() {\n        this.bottomArea.page_num.string = `${this.page.currPageIndex + 1}/${PictureBookPlayer.page_count}`\n    }\n\n    async loadFirstPage() {\n        // let index = 0\n        return new Promise<void>(async (resolve, reject) => {\n            let prefab: cc.Prefab = null\n            // while (true) {\n            try {\n                prefab = await this.loadPage(0)\n                if (prefab == null) {\n                    // break\n                }\n                // index++\n                await this.page.addPrefab(prefab, 0)\n                this.page.loadNext()\n            } catch (error) {\n                // break\n            }\n            // }\n            resolve()\n        })\n    }\n\n    getPrefabName(index) {\n        let prefabName = 'EduPage'\n        if (index == 0) {\n            return prefabName\n        }\n\n        if (index > 0) {\n            let str = `${index}`\n            if (str.length == 1) {\n                prefabName += ' - 00' + str\n            } else if (str.length == 2) {\n                prefabName += ' - 0' + str\n            } else {\n                prefabName += ' - ' + str\n            }\n        }\n        return prefabName\n    }\n\n    async loadPage(index: number) {\n        return new Promise<cc.Prefab>(resolve => {\n            let prefabName = this.getPrefabName(index)\n            this.book_bundle.load(prefabName, cc.Prefab, (error: Error, prefab: cc.Prefab) => {\n                if (error) {\n                    resolve(null)\n                }\n                resolve(prefab)\n            })\n        })\n    }\n\n    start() {\n    }\n\n    // update (dt) {}\n\n    async onLeftArrowClicked() {\n        if (this.page.currPageIndex == 0) {\n            return\n        }\n        this.needAutoTurnPage = false\n        this.restTime = 0\n        this.onPageUnLoaded(this.page.currPage)\n        await this.page.backward()\n        this.onPageLoaded(this.page.currPage)\n    }\n\n    async onRightArrowClicked() {\n        if (this.page.currPageIndex == PictureBookPlayer.page_count) {\n            return\n        }\n        this.needAutoTurnPage = false\n        this.restTime = 0\n        this.onPageUnLoaded(this.page.currPage)\n        let b = await this.page.forward()\n        if (b) {\n            this.onPageLoaded(this.page.currPage)\n        }\n    }\n\n    onModeChanged() {\n        let label = cc.find('Label', cc.find('Background', this.mode_btn.node)).getComponent(cc.Label)\n        if (this.playMode == PictureBookPlayer.PLAY_MODE_AUTO) {\n            this.playMode = PictureBookPlayer.PLAY_MODE_MANAUL\n            label.string = '手动'\n        } else {\n            this.playMode = PictureBookPlayer.PLAY_MODE_AUTO\n            label.string = '自动'\n            let page = this.page.currPage\n            this.pageTimer(page)\n        }\n    }\n}\n","\nexport default class PageEffectAssemblerBase extends cc.Assembler {\n    // 普通四边形的属性，根据实际的顶点格式、数量调整\n    protected verticesCount = 4;\n    protected indicesCount = 6;\n    protected floatsPerVert = 5;\n\n    protected colorOffset = 4;    \n    protected renderData: cc.RenderData = null;\n\n    get verticesFloats() {\n        return this.verticesCount * this.floatsPerVert;\n    }\n\n    getBuffer() {\n        //@ts-ignore\n        return cc.renderer._handle.getBuffer(\"mesh\", this.getVfmt());\n    }\n\n    getVfmt() {\n        // to be overwrite\n        return null;\n    }\n\n    updateColor(comp, color) {\n        let uintVerts = this.renderData.uintVDatas[0];\n        if (!uintVerts) return;\n        color = color != null ? color : comp.node.color._val;\n        let floatsPerVert = this.floatsPerVert;\n        let colorOffset = this.colorOffset;\n        for (let i = colorOffset, l = uintVerts.length; i < l; i += floatsPerVert) {\n            uintVerts[i] = color;\n        }\n    }\n\n    updateIsFront(comp, dataOffset) {\n        let verts = this.renderData.vDatas[0];\n        let index = 0;\n        let floatsPerVert = this.floatsPerVert;\n        for (let i = 0, n = this.verticesCount; i < n; ++i) {\n            index = i * floatsPerVert;\n            let isFirstVert = i % 2 === 0;\n            let firstVertX = isFirstVert ? verts[index] : verts[index - floatsPerVert];\n            let secondVertX = isFirstVert ? verts[index + floatsPerVert] : verts[index];\n            let isFront = firstVertX < secondVertX ? 1.0 : 0.0;\n            verts[index + dataOffset] = isFront;\n        }\n    }\n    \n    initData() {\n        //@ts-ignore\n        this.renderData = new cc.RenderData();\n        this.renderData.init(this);\n\n        let data = this.renderData;\n        // createFlexData支持创建指定格式的renderData\n        data.createFlexData(0, this.verticesCount, this.indicesCount, this.getVfmt());\n\n        // 顶点数固定的情况下索引不变化\n        let indices = data.iDatas[0];\n        let count = indices.length / 6;\n        for (let i = 0, idx = 0; i < count; i++) {\n            let vertextID = i * 4;\n            indices[idx++] = vertextID;\n            indices[idx++] = vertextID+1;\n            indices[idx++] = vertextID+2;\n            indices[idx++] = vertextID+1;\n            indices[idx++] = vertextID+3;\n            indices[idx++] = vertextID+2;\n        }\n    }\n\n    fillBuffers(comp, renderer) {\n        let renderData = this.renderData;\n        let vData = renderData.vDatas[0] as any;\n        let iData = renderData.iDatas[0];\n\n        let buffer = this.getBuffer();\n        let offsetInfo = buffer.request(this.verticesCount, this.indicesCount);\n\n        let vertexOffset = offsetInfo.byteOffset >> 2,\n            vbuf = buffer._vData;\n\n        if (vData.length + vertexOffset > vbuf.length) {\n            //@ts-egnore\n            vbuf.set(vData.subarray(0, vbuf.length - vertexOffset), vertexOffset);\n        } else {\n            vbuf.set(vData, vertexOffset);\n        }\n\n        let ibuf = buffer._iData,\n            indiceOffset = offsetInfo.indiceOffset,\n            vertexId = offsetInfo.vertexOffset;\n        for (let i = 0, l = iData.length; i < l; i++) {\n            ibuf[indiceOffset++] = vertexId + iData[i];\n        }\n    }\n}\n","import PageEffectAssemblerBase from \"./page-effect-assembler-base2\";\r\n\r\nconst gfx = cc.gfx\r\n\r\nlet vfmtPosUvColorFront = new gfx.VertexFormat([\r\n    { name: gfx.ATTR_POSITION, type: gfx.ATTR_TYPE_FLOAT32, num: 2 },\r\n    { name: gfx.ATTR_UV0, type: gfx.ATTR_TYPE_FLOAT32, num: 2 },\r\n    { name: gfx.ATTR_COLOR, type: gfx.ATTR_TYPE_UINT8, num: 4, normalize: true },\r\n    { name: \"a_isFront\", type: gfx.ATTR_TYPE_FLOAT32, num: 1},\r\n]);\r\n\r\nexport default class VerletAssembler extends PageEffectAssemblerBase {\r\n\r\n    init(comp: cc.RenderComponent) {\r\n        super['init'](comp);\r\n\r\n        //@ts-ignore\r\n        let segmentCount = comp.pointsCount - 1;\r\n        this.verticesCount = 4 * segmentCount;\r\n        this.indicesCount = 6 * segmentCount;\r\n        this.floatsPerVert = 6;\r\n        \r\n        this.initData();\r\n    }\r\n\r\n    getVfmt() {\r\n        return vfmtPosUvColorFront;\r\n    }\r\n    \r\n    public updateRenderData (comp: any) {\r\n        if (comp) {\r\n            let pointList: cc.Vec2[] = comp.getPointList()\r\n            let pointNum: number = pointList.length\r\n            if (pointNum < 2) {\r\n                return\r\n            }\r\n\r\n            let node = comp.node\r\n            let height = node.height\r\n            let width = node.width\r\n            let posX = - width * node.anchorX\r\n            let posY = - height * node.anchorY\r\n\r\n            let gapU = 1 / (pointNum - 1)\r\n            let lastU = 0\r\n            let nextU = 0\r\n\r\n            let floatsPerVert = this.floatsPerVert;\r\n            let verts = this.renderData.vDatas[0];\r\n            // 写verts时的下标\r\n            let dstOffset = 0;\r\n            for (let i = 1; i < pointNum; i++) {\r\n                let lastPoint = pointList[i - 1]\r\n                let nextPoint = pointList[i]\r\n                nextU = lastU + gapU\r\n\r\n                // 顶点和质点一一对应\r\n                // 顶点数据写入verts\r\n                dstOffset = floatsPerVert * (i-1) * 4;\r\n                verts[dstOffset]     = posX + lastPoint.x;\r\n                verts[dstOffset + 1] = posY + lastPoint.y;\r\n                verts[dstOffset + 2] = lastU;\r\n                verts[dstOffset + 3] = 1;\r\n                dstOffset += floatsPerVert;\r\n\r\n                verts[dstOffset]     = posX + nextPoint.x;\r\n                verts[dstOffset + 1] = posY + nextPoint.y;\r\n                verts[dstOffset + 2] = nextU;\r\n                verts[dstOffset + 3] = 1;\r\n                dstOffset += floatsPerVert;\r\n\r\n                verts[dstOffset]     = posX + lastPoint.x;\r\n                verts[dstOffset + 1] = posY + height + lastPoint.y;\r\n                verts[dstOffset + 2] = lastU;\r\n                verts[dstOffset + 3] = 0;\r\n                dstOffset += floatsPerVert;\r\n\r\n                verts[dstOffset]     = posX + nextPoint.x;\r\n                verts[dstOffset + 1] = posY + height + nextPoint.y;\r\n                verts[dstOffset + 2] = nextU;\r\n                verts[dstOffset + 3] = 0;\r\n\r\n                lastU = nextU\r\n            }\r\n\r\n            this.updateColor(comp, null);\r\n            this.updateIsFront(comp, 5);\r\n        }\r\n    }\r\n}","import VerletAssembler from \"./verlet-assembler2\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\nclass PagePoint {\r\n    public oldPos: cc.Vec2\r\n    public newPos: cc.Vec2\r\n\r\n    constructor(x: number, y: number) {\r\n        this.oldPos = this.newPos = cc.v2(x, y)\r\n    }\r\n}\r\n\r\n@ccclass\r\nexport default class VerletRender2 extends cc.RenderComponent {\r\n    // @property({type: [cc.Texture2D], displayName:\"纹理\"})\r\n    // public textureList: cc.Texture2D[] = []\r\n\r\n    // @property({displayName:\"每条边上的顶点数量\"})\r\n    public pointsCount: number = 10\r\n\r\n    // @property({displayName:\"纠正次数\"})\r\n    public constraintTimes: number = 50\r\n\r\n    // @property({displayName:\"速度衰减系数\"})\r\n    public damping: number = 0.7\r\n\r\n    // @property({displayName:\"重力\"})\r\n    public gravity: number = -0.2\r\n\r\n    protected _initedMaterial: boolean = false\r\n    private _pointList: PagePoint[] = []\r\n    _angle: number = 0\r\n    // onEnable() {\r\n    //     super.onEnable();\r\n    //     this.initPointList();\r\n    //     // this.draw();\r\n    // }\r\n\r\n    start() {\r\n        this.initPointList();\r\n        this.update();\r\n    }\r\n\r\n    public _resetAssembler() {\r\n        let assembler = this['_assembler'] = new VerletAssembler()\r\n        assembler.init(this)\r\n    }\r\n\r\n    setTextures(texture1: cc.Texture2D, texture2: cc.Texture2D) {\r\n        let material = this.getMaterial(0)\r\n        if (material) {\r\n            material.define('CC_USE_MODEL', 1);\r\n            material.setProperty('texture0', texture1);\r\n            material.setProperty('texture1', texture2);\r\n        }\r\n    }\r\n\r\n    public updateAngle(angle: number) {\r\n        this._angle = angle\r\n    }\r\n\r\n    private pointListShadow: cc.Vec2[] = []\r\n    public getPointList() {\r\n        let pointList = this.pointListShadow\r\n        // if (pointList.length == 0) {\r\n        //     for (let point of this._pointList) {\r\n        //         pointList.push(new cc.Vec2(point.newPos.x, point.newPos.y))\r\n        //     }\r\n        // } else {\r\n        this._pointList.forEach((pp, i) => {\r\n            pointList[i].x = pp.newPos.x\r\n            pointList[i].y = pp.newPos.y\r\n        })\r\n        // }\r\n        return pointList\r\n    }\r\n\r\n    // 初始化质点\r\n    public initPointList() {\r\n        for (let i = 0; i < this.pointsCount; ++i) {\r\n            let posX = i / (this.pointsCount - 1) * this.node.width\r\n            this._pointList.push(new PagePoint(posX, 0))\r\n            this.pointListShadow.push(cc.v2(this._pointList[i].newPos.x, this._pointList[i].newPos.y))\r\n        }\r\n    }\r\n\r\n    public update() {\r\n        this.simulate()\r\n        this.applyConstraint()\r\n        this.draw()\r\n    }\r\n\r\n    // 使用verlet积分更新位置\r\n    public simulate() {\r\n        let gravity = cc.v2(0, this.gravity)\r\n        for (let i = this.pointsCount - 1; i >= 1; i--) {\r\n            let point = this._pointList[i]\r\n            // 速度等于当前位置与上一个位置的差乘上衰减系数\r\n            let velocity: cc.Vec2 = point.newPos.sub(point.oldPos).mul(this.damping)\r\n            // 模拟一个水平放置的绳子，当y小于等于0时，将不再受重力影响\r\n            if (point.newPos.y <= 0) {\r\n                gravity.y = Math.max(0, gravity.y)\r\n            }\r\n            point.oldPos = point.newPos\r\n            point.newPos = point.newPos.add(velocity)\r\n            point.newPos = point.newPos.add(gravity)\r\n        }\r\n    }\r\n\r\n    private _updateEndPos(endPos: cc.Vec2) {\r\n        let tailPoint = this._pointList[this.pointsCount - 1]\r\n        tailPoint.newPos = new cc.Vec2(endPos.x, endPos.y)\r\n    }\r\n\r\n    private _getEndPos(): cc.Vec2 {\r\n        let endPos = new cc.Vec2(0, 0)\r\n        let width = this.node.width\r\n        let rad = this._angle * Math.PI / 180\r\n\r\n        // 与贝塞尔曲线使用相同的运动轨迹\r\n        let per = rad * 2 / Math.PI\r\n        if (this._angle <= 90) {\r\n            let endPosX = width * (1 - Math.pow(per, 3))\r\n            let endPosY = width * 1 / 4 * (1 - Math.pow(1 - per, 4))\r\n            endPos = new cc.Vec2(endPosX, endPosY)\r\n        } else {\r\n            per = per - 1\r\n            let endPosX = - width * (1 - Math.pow(1 - per, 3))\r\n            let endPosY = width * 1 / 4 * (1 - Math.pow(per, 4))\r\n            endPos = new cc.Vec2(endPosX, endPosY)\r\n        }\r\n\r\n\r\n        return endPos\r\n    }\r\n    // 约束纠正\r\n    public applyConstraint() {\r\n        // 两个质点之间的固定距离\r\n        let normalDistance = this.node.width / (this.pointsCount - 1)\r\n        let endPos = this._getEndPos()\r\n        for (let t = 0; t < this.constraintTimes; t++) {\r\n            this._updateEndPos(endPos)\r\n            //由最后一个质点开始依次纠正\r\n            for (let i = this.pointsCount - 1; i >= 1; i--) {\r\n                let firstPoint = this._pointList[i - 1]\r\n                let secondPoint = this._pointList[i]\r\n                let delatPos = secondPoint.newPos.sub(firstPoint.newPos)  //d\r\n                let distance = delatPos.mag()\r\n                let fixDirection: cc.Vec2 = null\r\n                let fixDirection2: cc.Vec2 = null\r\n                if (distance < normalDistance) {\r\n                    fixDirection = delatPos.normalize().negate()\r\n                    fixDirection2 = delatPos.normalize()\r\n                } else if (distance > normalDistance) {\r\n                    fixDirection = delatPos.normalize()\r\n                    fixDirection2 = delatPos.normalize().negate()\r\n                } else {\r\n                    continue\r\n                }\r\n\r\n                let fixLen = Math.abs(distance - normalDistance)\r\n                if (i == 1) {\r\n                    // 由于第一个质点是固定的，所以只对第二个质点做纠正\r\n                    let fixVector = fixDirection2.mul(fixLen)\r\n                    secondPoint.newPos.addSelf(fixVector)\r\n                } else {\r\n                    // 将两个质点之间的距离纠正为固定长度\r\n                    let fixHalfVector1 = fixDirection.mul(fixLen * 0.5)\r\n                    firstPoint.newPos.addSelf(fixHalfVector1)\r\n                    let fixHalfVector2 = fixDirection2.mul(fixLen * 0.5)\r\n                    secondPoint.newPos.addSelf(fixHalfVector2)\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    public draw() {\r\n        this['setVertsDirty']()\r\n    }\r\n}"],"file":"index.js"}