{"version":3,"sources":["assets/bundles/book_player_en/src/PBAudio.ts","assets/bundles/book_player_en/src/PBBottomAreaEn.ts","assets/bundles/book_player_en/src/PBPageContainerEn.ts","assets/bundles/book_player_en/src/PBPageEn.ts","assets/bundles/book_player_en/src/PBTextEn.ts","assets/bundles/book_player_en/src/PBTrumpetEn.ts","assets/bundles/book_player_en/src/PictureBookPlayerEn.ts","assets/bundles/book_player_en/verlet/page-effect-assembler-base-en.ts","assets/bundles/book_player_en/verlet/verlet-assembler-en.ts","assets/bundles/book_player_en/verlet/verlet-render-en.ts"],"names":["PBAudio","clip","this","audioID","loop","duration","progress","onPlayEnded","isMusic","playing","prototype","playAsEffect","single","stop","cc","audioEngine","playEffect","playAsMusic","playMusic","Object","defineProperty","get","nativeUrl","stopMusic","stopEffect","update","dt","cb","toArray","arr","ret","i","length","element","push","PBTextEn_1","require","PBTrumpetEn_1","PictureBookPlayerEn_1","_a","_decorator","ccclass","property","PBBottomArea","_super","__extends","_this","apply","arguments","trumpet","text","page_num","head_icon","bottom_bar_spriteframes","initUI","find","node","getComponent","default","RichText","head_mask","Sprite","string","onTrumpetClicked","console","log","page","instance","pageContainer","currPage","voice","playVoices","setBg","isTurn","sprite","spriteFrame","onLoad","start","__decorate","type","SpriteFrame","displayName","Component","exports","AudioManager_1","verlet_render_en_1","PBPageEn_1","PBPageContainer","pages","Map","uniqMap","prefabs","currPageIndex","leftHalf","rightHalf","leftHalf2","rightHalf2","verlet","page_material","turningLock","PBPageContainer_1","group","onEnable","leftNode","is3DNode","anchorX","width","height","x","y","rightNode","leftNode2","rightNode2","addVerlet","page1","page2","initAngle","isNext","Promise","resolve","active","zIndex","addComponent","setMaterial","_resetAssembler","updateAngle","setTextures","rightSpf","getTexture","leftSpf","removeVerlet","removeComponent","addPrefab","prefab","index","isValid","set","instantiate","eduPage","page_count","pageNum","turn_mode","PageModeEnum","_turn_mode","addPage","error","has","addChild","onCaptured","updateBottom","bottomArea","setText","toNextPage","__awaiter","nextPage","capture","sent","stopAllSounds","Camera","main","ortho","eulerAngles","Vec3","ZERO","tween","delay","call","to","_angle","v3","TURN_DURATION","easing","toPrevPage","prevPage","unloadPrev","name","getPrefabName","destroy","assetManager","releaseAsset","delete","book_bundle","release","Prefab","unloadNext","forward","warn","updatePageNum","backward","loadNext","loadPage","loadPrev","Enum","2d","3d","Material","PBPageContainerEn_1","PBAudio_1","PBPage","image","renderTexture","music","sound","soundLoop","head_icons","turningText","soundMap","currVoice","currVoiceIndex","currPlayVoicesResolve","voices","forEach","audio","onVoiceEnded","bind","sleep","seconds","scheduleOnce","findImage","root","img","children","fixBg","onPageLoaded","frameSize","view","getFrameSize","designResolution","Canvas","designSize","size","frameAspectRatio","screenSize","__assign","imageSize","ratio","scale","turnNextText","stopVoice","cp_1","parent","by","playVoice","turnPrevText","cp_2","hasNextText","hasPrevText","setLeftRight","left","right","visibleRect","Node","camera","backgroundColor","Color","TRANSPARENT","clearFlags","ClearFlags","DEPTH","STENCIL","COLOR","cullingMask","rect","RenderTexture","gl","game","fmt","STENCIL_INDEX8","initWithSize","targetTexture","render","Uint8Array","readPixels","texture","Texture2D","setFlipY","initWithData","sp","arr2","texture2","sp2","getVoice","onClickedAt","worldPos","nodePos","convertToNodeSpaceAR","box","getBoundingBox","contains","eduSpineAnim","onClicked","play","_","playSound","pause","resume","onDestroy","PBText","PBTrumpet","anim","BaseChapterComponent_1","kit_1","bundleUtils_1","PBBottomAreaEn_1","PictureBookPlayer","left_slot","right_slot","bottom_slot","page_slot","mode_frames","play_frames","left_arrow","right_arrow","book_bundle_name","playMode","PictureBookPlayer_1","PLAY_MODE_AUTO","mode_btn","modeImage","playImage","touchMask","autoturnpage","autoturnpage_after_voice","_needAutoTurnPage","restTime","initPos","Vec2","currPos","texts","txt","setBottomBg","loadBook","bundleName","bookBundleName","loadBundle","then","bundle","loadFirstPage","kit","manager","Event","emit","consts","LIFE_CYCLE_READY","on","LIFE_CYCLE_PARAMS","onParams","Button","EventType","TOUCH_START","onTouchBegan","TOUCH_MOVE","onTouchMove","TOUCH_END","onTouchEnd","TOUCH_CANCEL","off","data","params","pageTimer","needAutoTurnPage","value","onRightArrowClicked","onPageUnLoaded","reject","prefabName","str","load","onLeftArrowClicked","b","onModeChanged","PLAY_MODE_MANAUL","playOrPauseBook","onPlayChanged","onExit","event","currX","getLocationX","currY","getLocationY","deltaX","getDeltaX","deltaY","getDeltaY","convertToWorldSpaceAR","position","dis","Math","abs","v2","PageEffectAssemblerBase","verticesCount","indicesCount","floatsPerVert","colorOffset","renderData","getBuffer","renderer","_handle","getVfmt","updateColor","comp","color","uintVerts","uintVDatas","_val","l","updateIsFront","dataOffset","verts","vDatas","n","isFirstVert","firstVertX","secondVertX","isFront","initData","RenderData","init","createFlexData","indices","iDatas","count","idx","vertextID","fillBuffers","vData","iData","buffer","offsetInfo","request","vertexOffset","byteOffset","vbuf","_vData","subarray","ibuf","_iData","indiceOffset","vertexId","Assembler","page_effect_assembler_base_en_1","gfx","vfmtPosUvColorFront","VertexFormat","ATTR_POSITION","ATTR_TYPE_FLOAT32","num","ATTR_UV0","ATTR_COLOR","ATTR_TYPE_UINT8","normalize","VerletAssembler","segmentCount","pointsCount","updateRenderData","pointList","getPointList","pointNum","posX","posY","anchorY","gapU","lastU","nextU","dstOffset","lastPoint","nextPoint","verlet_assembler_en_1","PagePoint","oldPos","newPos","VerletRender2","constraintTimes","damping","gravity","_initedMaterial","_pointList","pointListShadow","initPointList","assembler","texture1","material","getMaterial","define","setProperty","angle","pp","simulate","applyConstraint","draw","point","velocity","sub","mul","max","add","_updateEndPos","endPos","tailPoint","_getEndPos","rad","PI","per","endPosX","pow","endPosY","normalDistance","t","firstPoint","secondPoint","delatPos","distance","mag","fixDirection","fixDirection2","negate","fixLen","fixVector","addSelf","fixHalfVector1","fixHalfVector2","RenderComponent"],"mappings":"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","sourcesContent":["export default class PBAudio {\n    private clip: cc.AudioClip = null\n    constructor(clip: cc.AudioClip) {\n        this.clip = clip\n        this.duration = clip.duration\n    }\n\n    audioID = 0\n    private loop = false\n    private duration = 0\n    private progress = 0\n    onPlayEnded: (audio: PBAudio) => {} = null\n\n    private isMusic = false\n\n    playing = false\n    playAsEffect(single: boolean = true, loop: boolean = false) {\n        this.loop = loop\n        if (single) {\n            this.stop()\n        }\n        this.isMusic = false\n        this.audioID = cc.audioEngine.playEffect(this.clip, this.loop)\n        this.progress = 0\n        this.playing = true\n        return this.audioID\n    }\n\n    playAsMusic(loop: boolean = true) {\n        this.loop = loop\n        this.audioID = cc.audioEngine.playMusic(this.clip, this.loop)\n        this.progress = 0\n        this.playing = true\n        this.isMusic = true\n        return this.audioID\n    }\n\n    get key() {\n        return this.clip.nativeUrl\n    }\n\n    stop() {\n        if (this.isMusic) {\n            cc.audioEngine.stopMusic()\n            this.audioID = 0\n            this.playing = false\n            this.progress = 0\n            return\n        }\n\n        if (this.audioID != 0) {\n            this.playing = false\n            cc.audioEngine.stopEffect(this.audioID)\n            this.audioID = 0\n            this.progress = 0\n        }\n    }\n\n    update(dt: number) {\n        if (this.playing && !this.loop) {\n            this.progress += dt\n            if (this.progress >= this.duration) {\n                this.playing = false\n                this.audioID = 0\n                if (this.onPlayEnded) {\n                    let cb = this.onPlayEnded\n                    cb(this)\n                }\n            }\n        }\n    }\n\n    static toArray(arr: cc.AudioClip[]) {\n        let ret = []\n        for (let i = 0; i < arr.length; i++) {\n            const element = arr[i];\n            ret.push(new PBAudio(element))\n        }\n        return ret\n    }\n}","// Learn TypeScript:\n//  - https://docs.cocos.com/creator/manual/en/scripting/typescript.html\n// Learn Attribute:\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\n\nimport PBText from \"./PBTextEn\";\nimport PBTrumpet from \"./PBTrumpetEn\";\nimport PictureBookPlayer from \"./PictureBookPlayerEn\";\n\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class PBBottomArea extends cc.Component {\n    trumpet: PBTrumpet = null //小喇叭\n    text: PBText = null //文本\n    page_num: cc.RichText = null\n    head_icon: cc.Sprite = null\n\n    @property({ type: [cc.SpriteFrame], displayName: '底板' })\n    bottom_bar_spriteframes: cc.SpriteFrame[] = []\n\n    initUI() {\n        this.trumpet = cc.find('trumpet', this.node).getComponent(PBTrumpet)\n        this.text = cc.find('text', this.node).getComponent(PBText)\n        this.page_num = cc.find('page_num', this.node).getComponent(cc.RichText)\n        let head_mask = cc.find('head_mask', this.node)\n        this.head_icon = cc.find('head_icon', head_mask).getComponent(cc.Sprite)\n        this.text.text.string = ''\n    }\n\n    onTrumpetClicked() {\n        console.log('on pbbottomarea >>>>>>>>>>>>')\n        let page = PictureBookPlayer.instance.pageContainer.currPage\n        if (page && page.voice) {\n            page.playVoices()\n        }\n    }\n\n    setBg(isTurn: boolean) {\n        let sprite = this.node.getComponent(cc.Sprite)\n        if (isTurn) {\n            sprite.spriteFrame = this.bottom_bar_spriteframes[1]\n        } else {\n            sprite.spriteFrame = this.bottom_bar_spriteframes[0]\n        }\n    }\n\n    onLoad() {\n\n    }\n\n\n\n    start() {\n\n    }\n\n    // update (dt) {}\n}\n","// Learn TypeScript:\n//  - https://docs.cocos.com/creator/manual/en/scripting/typescript.html\n// Learn Attribute:\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\n\nimport AudioManager from \"../../../kit/system/audio/AudioManager\";\nimport VerletRender2 from \"../verlet/verlet-render-en\";\nimport PBPage from \"./PBPageEn\";\nimport PictureBookPlayer from \"./PictureBookPlayerEn\";\n\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class PBPageContainer extends cc.Component {\n\n    pages = new Map<number, PBPage>()\n    uniqMap = new Map<number, boolean>()\n    prefabs = new Map<number, cc.Prefab>()\n\n    currPageIndex = 0\n\n    leftHalf: cc.Sprite = null\n    rightHalf: cc.Sprite = null\n\n    leftHalf2: cc.Sprite = null\n    rightHalf2: cc.Sprite = null\n\n    static instance: PBPageContainer = null\n    verlet: VerletRender2 = null\n\n    @property({ type: cc.Material, displayName: '翻页' })\n    page_material: cc.Material = null\n\n    // @property({ type: cc.Material, displayName: '翻页' })\n    // page_material:cc.Material = null\n\n    onLoad() {\n        PBPageContainer.instance = this\n        this.node.group = 'bookplayer'\n        this.verlet = cc.find('verlet', this.node).getComponent(VerletRender2)\n    }\n\n    onEnable() {\n        let leftNode = cc.find('left1', this.node)\n        this.leftHalf = leftNode.getComponent(cc.Sprite)\n        leftNode.is3DNode = false\n        leftNode.anchorX = 1\n        leftNode.width = this.node.width / 2\n        leftNode.height = this.node.height\n        leftNode.x = 0\n        leftNode.y = 0\n\n        let rightNode = cc.find('right1', this.node)\n        this.rightHalf = rightNode.getComponent(cc.Sprite)\n        rightNode.is3DNode = true\n        rightNode.anchorX = 0\n        rightNode.width = this.node.width / 2\n        rightNode.height = this.node.height\n        rightNode.x = 0\n        rightNode.y = 0\n\n        let leftNode2 = cc.find('left2', this.node)\n        this.leftHalf2 = leftNode2.getComponent(cc.Sprite)\n        leftNode2.is3DNode = true\n        leftNode2.anchorX = 1\n        leftNode2.width = this.node.width / 2\n        leftNode2.height = this.node.height\n        leftNode2.x = 0\n        leftNode2.y = 0\n\n        let rightNode2 = cc.find('right2', this.node)\n        this.rightHalf2 = rightNode2.getComponent(cc.Sprite)\n        rightNode2.is3DNode = true\n        rightNode2.anchorX = 0\n        rightNode2.width = this.node.width / 2\n        rightNode2.height = this.node.height\n        rightNode2.x = 0\n        rightNode2.y = 0\n    }\n    /**\n     * 添加verlet翻页效果节点\n     * @param page1 \n     * @param page2 \n     */\n    async addVerlet(page1: PBPage, page2: PBPage, initAngle: number, isNext: boolean) {\n        return new Promise<void>(resolve => {\n            let node = this.verlet.node\n            node.active = true\n            node.zIndex = 10000\n            node.width = this.node.width / 2\n            node.height = this.node.height\n            node.anchorX = 0\n            node.x = 0\n            node.y = 0\n            this.verlet = node.addComponent(VerletRender2)\n            this.verlet.setMaterial(0, this.page_material)\n            this.verlet._resetAssembler()\n            this.verlet.updateAngle(initAngle)\n            this.verlet.setTextures(page1.rightSpf.getTexture(), page2.leftSpf.getTexture())\n            resolve()\n        })\n    }\n\n    removeVerlet() {\n        this.verlet.node.active = false\n        this.verlet.node.removeComponent(VerletRender2)\n        // this.verlet.node.destroy()\n    }\n\n    start() {\n\n\n    }\n\n    static PageModeEnum = cc.Enum({ 'verlet': 0, '2d': 1, '3d': 2 })\n\n    async addPrefab(prefab: cc.Prefab, index: number) {\n        if (cc.isValid(prefab)) {\n            this.prefabs.set(index, prefab)\n            // if (this.prefabs.length == 1) {\n            let page = cc.instantiate(prefab).addComponent(PBPage)\n            page.index = index\n            if (index == 0) {//首页\n                //读取页数\n                let eduPage = page.node.getComponent('EduPage') as EduPage\n                PictureBookPlayer.page_count = eduPage.pageNum\n                PictureBookPlayer.turn_mode = PBPageContainer.PageModeEnum[eduPage._turn_mode] //eduPage.turnModeName\n            }\n            this.addPage(page)\n            // if (index == 0) {\n            //     this.loadNext()\n            // }\n        } else {\n            console.error('prefab is invalid!')\n        }\n\n        // }\n    }\n\n    addPage(page: PBPage) {\n        if (this.uniqMap.has(page.index)) {\n            return\n        }\n        this.uniqMap.set(page.index, true)\n        page.node.zIndex = -page.index * 10\n        this.node.addChild(page.node)\n        this.pages.set(page.index, page)\n    }\n\n    get currPage() {\n        return this.pages.get(this.currPageIndex)\n    }\n\n    get nextPage() {\n        if (this.currPageIndex + 1 < PictureBookPlayer.page_count) {\n            return this.pages.get(this.currPageIndex + 1)\n        }\n        return null\n    }\n\n    get prevPage() {\n        if (this.currPageIndex - 1 >= 0) {\n            return this.pages.get(this.currPageIndex - 1)\n        }\n        return null\n    }\n\n    onCaptured(page: PBPage) {\n        // if (page.index == this.currPageIndex) {\n        //     this.leftHalf.spriteFrame = page.leftSpf\n        //     this.rightHalf.spriteFrame = page.rightSpf\n        //     //test\n        //     this.leftHalf.node.active = true\n        //     this.rightHalf.node.active = false\n        // } else {\n        //     this.leftHalf2.spriteFrame = page.leftSpf\n        //     this.rightHalf2.spriteFrame = page.rightSpf\n        //     this.leftHalf2.node.active = false\n        //     this.rightHalf2.node.active = true\n        // }\n    }\n\n    turningLock = false\n    static TURN_DURATION = 0.8\n\n    updateBottom(page: PBPage) {\n        if (page.text.length == 0) {\n            PictureBookPlayer.instance.bottomArea.node.active = false\n        } else {\n            PictureBookPlayer.instance.bottomArea.node.active = true\n            PictureBookPlayer.instance.setText(0)\n        }\n    }\n\n    //下一页\n    async toNextPage() {\n        return new Promise<void>(async resolve => {\n            let nextPage = this.nextPage\n            if (nextPage == null) {\n                console.log('nextPage is null2>>>')\n                resolve()\n                return\n            }\n\n            let currPage = this.currPage\n\n            await currPage.capture()\n\n            // PictureBookPlayer.instance.config.turn_mode = '3d'\n            currPage.stopAllSounds()\n            if (PictureBookPlayer.turn_mode == '3d') {\n                cc.Camera.main.ortho = false\n            } else if (PictureBookPlayer.turn_mode == 'verlet') {\n                this.leftHalf.node.active = true\n                this.leftHalf.spriteFrame = currPage.leftSpf\n                this.rightHalf.node.active = false\n                this.rightHalf.spriteFrame = nextPage.rightSpf\n                this.leftHalf2.node.active = false\n                this.rightHalf2.node.active = false\n                this.leftHalf.node.eulerAngles = cc.Vec3.ZERO\n                this.rightHalf.node.eulerAngles = cc.Vec3.ZERO\n                currPage.node.zIndex = 101\n                nextPage.node.zIndex = 100\n                this.leftHalf.node.zIndex = 101\n                this.rightHalf.node.zIndex = 102\n                await this.addVerlet(currPage, nextPage, 0, true)\n                cc.tween(this.verlet).delay(0.05).call(() => {\n                    currPage.node.zIndex = 0\n                    nextPage.node.zIndex = 100\n                    this.rightHalf.node.active = true\n                }).to(0.7, { _angle: 180 }).delay(0.5).call(() => {\n                    this.leftHalf.node.active = false\n                    this.rightHalf.node.active = false\n                    this.currPageIndex = nextPage.index\n                    this.removeVerlet()\n                    this.updateBottom(nextPage)\n                    resolve()\n                }).start()\n            }\n\n            if (PictureBookPlayer.turn_mode != 'verlet') {\n                //设置图片内容\n                this.leftHalf.spriteFrame = currPage.leftSpf\n                this.rightHalf.spriteFrame = currPage.rightSpf\n                this.leftHalf2.spriteFrame = nextPage.leftSpf\n                this.rightHalf2.spriteFrame = nextPage.rightSpf\n\n                //设置姿态\n                this.leftHalf.node.eulerAngles = cc.Vec3.ZERO\n                this.rightHalf.node.eulerAngles = cc.Vec3.ZERO\n                this.leftHalf2.node.eulerAngles = cc.v3(0, 90, 0)\n                this.rightHalf2.node.eulerAngles = cc.Vec3.ZERO\n\n                //显隐\n                this.leftHalf.node.active = true\n                this.rightHalf.node.active = true\n                this.leftHalf2.node.active = false\n                this.rightHalf2.node.active = true\n\n                //设置遮挡\n                currPage.node.zIndex = 0\n                nextPage.node.zIndex = 100\n\n                this.leftHalf.node.zIndex = nextPage.node.zIndex + 1\n                this.rightHalf2.node.zIndex = nextPage.node.zIndex\n                this.rightHalf.node.zIndex = this.rightHalf2.node.zIndex + 1\n                this.leftHalf2.node.zIndex = this.leftHalf.node.zIndex + 1\n\n                //currPage\n                cc.tween(this.rightHalf.node)\n                    .to(PBPageContainer.TURN_DURATION / 2, { eulerAngles: cc.v3(0, -90, 0) }, { easing: 'sineIn' })\n                    .call(() => {\n                        this.rightHalf.node.active = false\n                    }).start()\n                //nextPage\n                cc.tween(this.leftHalf2.node)\n                    .delay(PBPageContainer.TURN_DURATION / 2)\n                    .call(() => {\n                        this.leftHalf2.node.active = true\n                    })\n                    .to(PBPageContainer.TURN_DURATION / 2, { eulerAngles: cc.v3(0, 0, 0) }, { easing: 'sineOut' })\n                    .call(() => {\n                        this.leftHalf2.node.active = false\n                        this.leftHalf.node.active = false\n                        this.rightHalf.node.active = false\n                        this.currPageIndex = nextPage.index\n                        nextPage.node.active = true\n                        if (PictureBookPlayer.turn_mode == '3d') {\n                            cc.Camera.main.ortho = true\n                        }\n                        resolve()\n                    }).start()\n            }\n\n            // PictureBookPlayer.instance.config.turn_mode = 'verlet'\n\n        })\n    }\n\n    //上一页\n    async toPrevPage() {\n        return new Promise<void>(async resolve => {\n            let prevPage = this.prevPage\n            if (prevPage == null) {\n                resolve()\n                return\n            }\n\n            let currPage = this.currPage\n\n            await currPage.capture()\n            currPage.stopAllSounds()\n            if (PictureBookPlayer.turn_mode == '3d') {\n                cc.Camera.main.ortho = false\n            } else if (PictureBookPlayer.turn_mode == 'verlet') {\n                this.leftHalf.node.active = false\n                this.leftHalf.spriteFrame = prevPage.leftSpf\n                this.rightHalf.node.active = true\n                this.rightHalf.spriteFrame = currPage.rightSpf\n                this.leftHalf2.node.active = false\n                this.rightHalf2.node.active = false\n                this.leftHalf.node.eulerAngles = cc.Vec3.ZERO\n                this.rightHalf.node.eulerAngles = cc.Vec3.ZERO\n                currPage.node.zIndex = 101\n                prevPage.node.zIndex = 100\n                this.leftHalf.node.zIndex = 101\n                this.rightHalf.node.zIndex = 100\n                await this.addVerlet(prevPage, currPage, 180, false)\n                cc.tween(this.verlet).delay(0.05).call(() => {\n                    currPage.node.zIndex = 0\n                    prevPage.node.zIndex = 100\n                    this.leftHalf.node.active = true\n                }).to(0.7, { _angle: 0 }).delay(0.5).call(() => {\n                    this.leftHalf2.node.active = false\n                    this.rightHalf.node.active = false\n                    this.rightHalf2.node.active = false\n                    this.leftHalf.node.active = false\n                    this.currPageIndex = prevPage.index\n                    this.removeVerlet()\n                    this.updateBottom(prevPage)\n                    resolve()\n                }).start()\n            }\n\n            if (PictureBookPlayer.turn_mode != 'verlet') {\n                //设置图片内容\n                this.leftHalf.spriteFrame = currPage.leftSpf\n                this.rightHalf.spriteFrame = currPage.rightSpf\n                this.leftHalf2.spriteFrame = prevPage.leftSpf\n                this.rightHalf2.spriteFrame = prevPage.rightSpf\n\n                //设置姿态\n                this.leftHalf.node.eulerAngles = cc.Vec3.ZERO\n                this.rightHalf.node.eulerAngles = cc.Vec3.ZERO\n                this.leftHalf2.node.eulerAngles = cc.Vec3.ZERO\n                this.rightHalf2.node.eulerAngles = cc.v3(0, -90, 0)\n\n                //显隐\n                this.leftHalf.node.active = true\n                this.rightHalf.node.active = true\n                this.leftHalf2.node.active = true\n                this.rightHalf2.node.active = false\n\n                //设置遮挡\n                currPage.node.zIndex = 0\n                prevPage.node.zIndex = 100\n\n                this.leftHalf2.node.zIndex = prevPage.node.zIndex + 1\n                this.rightHalf.node.zIndex = this.leftHalf2.node.zIndex\n                this.rightHalf2.node.zIndex = this.rightHalf.node.zIndex + 1\n                this.leftHalf.node.zIndex = this.leftHalf2.node.zIndex + 1\n\n                //currPage\n                cc.tween(this.leftHalf.node)\n                    .to(PBPageContainer.TURN_DURATION / 2, { eulerAngles: cc.v3(0, 90, 0) }, { easing: 'sineIn' })\n                    .call(() => {\n                        this.leftHalf.node.active = false\n                    }).start()\n                //nextPage\n                cc.tween(this.rightHalf2.node)\n                    .delay(PBPageContainer.TURN_DURATION / 2)\n                    .call(() => {\n                        this.rightHalf2.node.active = true\n                    })\n                    .to(PBPageContainer.TURN_DURATION / 2, { eulerAngles: cc.v3(0, 0, 0) }, { easing: 'sineOut' })\n                    .call(() => {\n                        this.rightHalf2.node.active = false\n                        this.leftHalf2.node.active = false\n                        this.rightHalf.node.active = false\n                        this.currPageIndex = prevPage.index\n                        prevPage.node.active = true\n                        if (PictureBookPlayer.turn_mode == '3d') {\n                            cc.Camera.main.ortho = true\n                        }\n                        resolve()\n                    }).start()\n            }\n        })\n    }\n\n    unloadPrev() {\n        const index = this.currPageIndex - 2\n        if (index >= 0) {\n            let page = this.pages.get(index)\n            let name = PictureBookPlayer.instance.getPrefabName(index)\n            if (page) {\n                // console.log('destroy page node:' + page.index)\n                page.node.destroy()\n            }\n            let prefab = this.prefabs.get(index)\n            if (prefab) {\n                // console.log('destroy prefab:' + (index))\n                cc.assetManager.releaseAsset(prefab)\n                prefab.destroy()\n            }\n            this.uniqMap.delete(index)\n            this.pages.delete(index)\n            PictureBookPlayer.instance.book_bundle.release(name, cc.Prefab)\n        }\n    }\n\n    unloadNext() {\n        const index = this.currPageIndex + 2\n        if (index < PictureBookPlayer.page_count) {\n            let page = this.pages.get(index)\n            let name = PictureBookPlayer.instance.getPrefabName(index)\n            if (page) {\n                // console.log('destroy page node:' + page.index)\n                page.node.destroy()\n            }\n            let prefab = this.prefabs.get(index)\n            if (prefab) {\n                // console.log('destroy prefab:' + (index))\n                cc.assetManager.releaseAsset(prefab)\n                prefab.destroy()\n            }\n            this.uniqMap.delete(index)\n            this.pages.delete(index)\n            PictureBookPlayer.instance.book_bundle.release(name, cc.Prefab)\n        }\n    }\n\n    async forward() {\n        if (this.turningLock) {\n            console.warn('this.turningLock')\n            return false\n        }\n\n        let nextPage = this.nextPage\n        if (nextPage == null) {\n            console.warn('nextPage == null')\n            return false\n        }\n\n        this.turningLock = true\n        PictureBookPlayer.instance.bottomArea.node.active = false\n        AudioManager.playEffect('book_player_en', 'sound/changepage')\n        await this.toNextPage()\n        PictureBookPlayer.instance.updatePageNum()\n        this.unloadPrev()\n        this.turningLock = false\n        return true\n    }\n\n    async backward() {\n        if (this.turningLock) {\n            return\n        }\n\n        let prevPage = this.prevPage\n        if (prevPage == null) {\n            console.warn('prevPage == null')\n            return false\n        }\n\n        this.turningLock = true\n        PictureBookPlayer.instance.bottomArea.node.active = false\n        AudioManager.playEffect('book_player_en', 'sound/changepage')\n        await this.toPrevPage()\n        PictureBookPlayer.instance.updatePageNum()\n        this.unloadNext()\n        this.turningLock = false\n    }\n\n    async loadNext() {\n        return new Promise<void>(async resolve => {\n            console.warn('load next:' + (this.currPageIndex + 1))\n            let prefab = await PictureBookPlayer.instance.loadPage(this.currPageIndex + 1)\n            if (prefab) {\n                this.addPrefab(prefab, this.currPageIndex + 1)\n            }\n            resolve()\n        })\n    }\n\n    async loadPrev() {\n        return new Promise<void>(async resolve => {\n            let prefab = await PictureBookPlayer.instance.loadPage(this.currPageIndex - 1)\n            if (prefab) {\n                this.addPrefab(prefab, this.currPageIndex - 1)\n            }\n            resolve()\n        })\n    }\n}\n","// Learn TypeScript:\n//  - https://docs.cocos.com/creator/manual/en/scripting/typescript.html\n// Learn Attribute:\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\n\nimport AudioManager from \"../../../kit/system/audio/AudioManager\";\nimport PBPageContainer from \"./PBPageContainerEn\";\nimport PBAudio from \"./PBAudio\";\nimport PictureBookPlayer from \"./PictureBookPlayerEn\";\n\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class PBPage extends cc.Component {\n    image: cc.Sprite = null //背景\n\n    renderTexture: cc.RenderTexture = null\n\n    index = 0\n\n    leftSpf: cc.SpriteFrame = null\n    rightSpf: cc.SpriteFrame = null\n\n    music: PBAudio = null\n    voice: PBAudio[] = []\n    sound: PBAudio = null\n    soundLoop = true\n    text: string[] = []\n    head_icons: cc.SpriteFrame[] = []\n\n    onLoad() {\n        //加载资源\n        let eduPage = this.node.getComponent('EduPage') as EduPage\n        if (eduPage.music) {\n            this.music = new PBAudio(eduPage.music)\n        }\n        if (eduPage.voices && eduPage.voices.length > 0) {\n            this.voice = PBAudio.toArray(eduPage.voices)\n            this.voice.forEach((audio) => {\n                audio.onPlayEnded = this.onVoiceEnded.bind(this)\n            })\n        }\n        if (eduPage.sound) {\n            this.sound = new PBAudio(eduPage.sound)\n        }\n        this.soundLoop = eduPage.soundLoop\n        this.text = eduPage.text\n        this.head_icons = eduPage.head_icons\n    }\n\n    async sleep(seconds: number) {\n        return new Promise<void>(resolve => {\n            this.scheduleOnce(() => {\n                resolve()\n            }, seconds)\n        });\n    }\n\n    /**\n     * 查找bg\n     */\n    static findImage(root: cc.Node) {\n        let img = root.getComponent(cc.Sprite)\n        if (img && (root.width >= 1334 && root.height >= 750)) {\n            return img\n        }\n        for (let i = 0; i < root.children.length; i++) {\n            const element = root.children[i];\n            img = this.findImage(element)\n            if (img) {\n                return img\n            }\n        }\n        return null\n    }\n\n    async start() {\n        this.image = cc.find('bg', this.node).getComponent(cc.Sprite)\n        // this.config = PictureBookPlayer.instance.getConfig(this.index)\n        let eduPage = this.node.getComponent('EduPage')\n\n        this.fixBg()\n        await this.capture()\n        PictureBookPlayer.instance.onPageLoaded(this)\n        if (this.music) {\n            // AudioManager.playMusic(PictureBookPlayer.instance.config.bundle, 'music/' + this.config.music)\n            this.music.playAsMusic()\n        }\n    }\n\n    fixBg() {\n        let frameSize: cc.Size = cc.view.getFrameSize() // 屏幕尺寸\n        let designResolution: cc.Size = cc.Canvas.instance.designResolution\n        let designSize: cc.Size = cc.size(designResolution.width, designResolution.height)  // cc.Canvas.instance.designResolution\n        let frameAspectRatio: number = frameSize.width / frameSize.height\n        let screenSize: cc.Size = { ...designSize } as cc.Size\n        let imageSize = cc.size(1334, 750)\n\n        let ratio: number = imageSize.width / imageSize.height\n        if (ratio > frameAspectRatio) {\n            let width = imageSize.width * screenSize.height / imageSize.height\n            let scale = width / imageSize.width\n            this.node.scale = scale\n        } else {\n            let height = imageSize.height * screenSize.width / imageSize.width\n            let scale = height / imageSize.height\n            this.node.scale = scale\n        }\n    }\n\n    private turningText = false\n    /**\n     * 翻下一页文字\n     */\n    async turnNextText() {\n        if (this.turningText) {\n            return\n        }\n        this.turningText = true\n        return new Promise<void>(resolve => {\n            if (this.currVoiceIndex + 1 < this.text.length) {\n                this.stopVoice(this.currVoiceIndex)\n                let cp = cc.instantiate(PictureBookPlayer.instance.bottomArea.node)\n                cp.parent = PictureBookPlayer.instance.bottomArea.node.parent\n                PictureBookPlayer.instance.setText(this.currVoiceIndex + 1)\n\n                cc.tween(cp).call(() => {\n                    AudioManager.playEffect('book_player_en', 'sound/changepage')\n                }).by(0.5, { x: -cp.width }).delay(1).call(() => {\n                    cp.destroy()\n                    this.playVoice(this.currVoiceIndex + 1)\n                    this.turningText = false\n                    resolve()\n                }).start()\n            }\n        })\n    }\n\n    /**\n     * 翻前一页文字\n     * @returns \n     */\n    async turnPrevText() {\n        if (this.turningText) {\n            return\n        }\n        this.turningText = true\n        return new Promise<void>(resolve => {\n            if (this.currVoiceIndex - 1 >= 0) {\n                this.stopVoice(this.currVoiceIndex)\n                let cp = cc.instantiate(PictureBookPlayer.instance.bottomArea.node)\n                cp.parent = PictureBookPlayer.instance.bottomArea.node.parent\n                PictureBookPlayer.instance.setText(this.currVoiceIndex - 1)\n\n                cc.tween(cp).call(() => {\n                    AudioManager.playEffect('book_player_en', 'sound/changepage')\n                }).by(0.5, { x: cp.width }).delay(1).call(() => {\n                    cp.destroy()\n                    this.playVoice(this.currVoiceIndex - 1)\n                    this.turningText = false\n                    resolve()\n                }).start()\n            }\n        })\n    }\n\n    /**\n     * \n     * @returns \n     */\n    hasNextText() {\n        if (this.currVoiceIndex < this.text.length - 1) {\n            return true\n        }\n        return false\n    }\n\n    hasPrevText() {\n        if (this.currVoiceIndex > 0) {\n            return true\n        }\n        return false\n    }\n\n    setLeftRight(left: cc.Sprite, right: cc.Sprite) {\n        // this.leftHalf = left\n        // this.rightHalf = right\n    }\n\n    async capture() {\n        return new Promise<void>(resolve => {\n            let width = cc.visibleRect.width\n            let height = cc.visibleRect.height\n            let node = new cc.Node('capture node')\n            node.parent = this.node\n            let camera = node.addComponent(cc.Camera)\n            camera.backgroundColor = cc.Color.TRANSPARENT\n            camera.clearFlags = cc.Camera.ClearFlags.DEPTH | cc.Camera.ClearFlags.STENCIL | cc.Camera.ClearFlags.COLOR\n            camera.cullingMask = 4\n\n            camera.rect = cc.rect(0, 0, 1, 1)\n            // camera.alignWithScreen = false\n            // camera.orthoSize = width / 2\n            let renderTexture = new cc.RenderTexture()\n            let gl = cc.game['_renderContext']\n            let fmt = gl.STENCIL_INDEX8//cc['gfx'].RB_FMT_S8 //gl.STENCIL_INDEX8\n            // renderTexture.initWithSize(width, height, gl.STENCIL_INDEX8);\n            renderTexture.initWithSize(width, height, fmt);\n            camera.targetTexture = renderTexture\n            camera.render()\n            //left half\n            let arr = new Uint8Array(width * height * 4)\n            renderTexture.readPixels(arr, 0, 0, width / 2, height)\n            let texture = new cc.Texture2D()\n            texture.setFlipY(true)\n            texture.initWithData(arr, fmt, width / 2, height)\n            let sp = new cc.SpriteFrame(texture)\n            this.leftSpf = sp\n\n            //right half\n            let arr2 = new Uint8Array(width * height * 4)\n            renderTexture.readPixels(arr2, width / 2, 0, width / 2, height)\n            let texture2 = new cc.Texture2D()\n            texture2.setFlipY(true)\n            texture2.initWithData(arr2, fmt, width / 2, height)\n            let sp2 = new cc.SpriteFrame(texture2)\n            this.rightSpf = sp2\n\n            renderTexture = null\n            arr = null\n            arr2 = null\n            node.destroy()\n            resolve()\n            PBPageContainer.instance.onCaptured(this)\n\n            // cc.find('snapshot1',PBPageContainer.instance.node.parent).getComponent(cc.Sprite).spriteFrame = sp\n            // cc.find('snapshot2',PBPageContainer.instance.node.parent).getComponent(cc.Sprite).spriteFrame = sp2\n\n        })\n    }\n\n    getVoice(index) {\n        if (!this.voice) {\n            return null\n        }\n        if (this.voice.length == 0) {\n            return null\n        }\n        if (index < 0 || index > this.voice.length - 1) {\n            return null\n        }\n        return this.voice[index]\n    }\n\n    onClickedAt(worldPos: cc.Vec2) {\n        let nodePos = this.node.convertToNodeSpaceAR(worldPos)\n        for (let i = 0; i < this.node.children.length; i++) {\n            const element = this.node.children[i];\n            const box = element.getBoundingBox()\n            if (box.contains(nodePos)) {\n                let eduSpineAnim = element.getComponent('EduSpineAnim')\n                if (eduSpineAnim) {\n                    eduSpineAnim.onClicked()\n                }\n            }\n        }\n    }\n\n    soundMap: Map<string, number> = new Map<string, number>()\n\n    private currVoice: PBAudio = null\n    playVoice(index: number) {\n        this.currVoiceIndex = index\n        let sound = this.getVoice(index)\n        if (sound) {\n            PictureBookPlayer.instance.bottomArea.trumpet.play()\n            if (this.currVoice) {\n                this.currVoice.stop()\n            }\n            this.currVoice = sound\n            sound.playAsEffect()\n        }\n    }\n\n    update(dt: number) {\n        if (this.music) {\n            this.music.update(dt)\n        }\n        if (this.sound) {\n            this.sound.update(dt)\n        }\n        if (this.voice.length > 0) {\n            for (let i = 0; i < this.voice.length; i++) {\n                const element = this.voice[i];\n                element.update(dt)\n            }\n        }\n    }\n\n    currVoiceIndex = 0\n\n    onVoiceEnded(_: PBAudio) {\n        if (this.currVoiceIndex + 1 < this.voice.length) {\n            this.turnNextText()\n        } else {\n            if (this.currPlayVoicesResolve) {\n                let cb = this.currPlayVoicesResolve\n                cb()\n            }\n        }\n    }\n\n    private currPlayVoicesResolve = null\n    playVoices(cb = () => { }) {\n        this.currPlayVoicesResolve = cb\n        this.playVoice(0)\n    }\n\n    playSound(index: number) {\n        let sound = this.sound\n        if (sound) {\n            sound.playAsEffect(true, this.soundLoop)\n        }\n    }\n\n    pause() {\n\n    }\n\n    resume() {\n\n    }\n\n    onDestroy() {\n        console.log('destroy page: ' + this.index)\n        if (this.leftSpf) {\n            this.leftSpf.destroy()\n            this.leftSpf = null\n        }\n\n        if (this.rightSpf) {\n            this.rightSpf.destroy()\n            this.rightSpf = null\n        }\n    }\n\n    /**\n     * 停止语音第 index 句\n     * @param index \n     */\n    stopVoice(index: number) {\n        if (index >= 0 && index < this.voice.length) {\n            let clip = this.voice[index]\n            clip.stop()\n        }\n    }\n\n    stopAllSounds() {\n        if (this.sound) {\n            let clip = this.sound\n            clip.stop()\n        }\n\n        if (this.voice && this.voice.length > 0) {\n            for (let i = 0; i < this.voice.length; i++) {\n                this.stopVoice(i)\n            }\n        }\n\n        if (this.music) {\n            this.music.stop()\n        }\n    }\n}\n","// Learn TypeScript:\n//  - https://docs.cocos.com/creator/manual/en/scripting/typescript.html\n// Learn Attribute:\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\n\nconst {ccclass, property} = cc._decorator;\n\n@ccclass\nexport default class PBText extends cc.Component {\n\n    \n    @property({ type: cc.RichText, displayName: '文本' })\n    text: cc.RichText = null\n\n    // LIFE-CYCLE CALLBACKS:\n\n    // onLoad () {}\n\n    start () {\n\n    }\n\n    // update (dt) {}\n}\n","// Learn TypeScript:\n//  - https://docs.cocos.com/creator/manual/en/scripting/typescript.html\n// Learn Attribute:\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\n\nconst { ccclass, property } = cc._decorator;\n/**\n * 绘本小喇叭\n */\n@ccclass\nexport default class PBTrumpet extends cc.Component {\n\n    anim: cc.Animation = null\n    onLoad() {\n        // this.anim = cc.find('icon', this.node).getComponent(cc.Animation)\n    }\n\n    play() {\n        // this.anim.play('playing')\n    }\n\n    stop() {\n        // this.anim.play('pausing')\n    }\n\n    start() {\n\n    }\n\n    // update (dt) {}\n}\n","// Learn TypeScript:\n//  - https://docs.cocos.com/creator/manual/en/scripting/typescript.html\n// Learn Attribute:\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\n\nimport BaseChapterComponent from \"../../../common/scripts/BaseChapterComponent\";\nimport { kit } from \"../../../kit/kit\";\nimport AudioManager from \"../../../kit/system/audio/AudioManager\";\nimport { loadBundle } from \"../../../kit/utils/bundleUtils\";\nimport PBBottomArea from \"./PBBottomAreaEn\";\nimport PBPageContainer from \"./PBPageContainerEn\";\nimport PBPage from \"./PBPageEn\";\n\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class PictureBookPlayer extends BaseChapterComponent {\n    left_slot: cc.Node = null\n    right_slot: cc.Node = null\n    bottom_slot: cc.Node = null\n    page_slot: cc.Node = null\n    book_bundle: cc.AssetManager.Bundle = null\n\n    @property({ type: [cc.SpriteFrame], displayName: \"书\" })\n    mode_frames: cc.SpriteFrame[] = []\n\n    @property({ type: [cc.SpriteFrame], displayName: \"播放\" })\n    play_frames: cc.SpriteFrame[] = []\n\n    bottomArea: PBBottomArea = null\n\n    left_arrow: cc.Node = null\n    right_arrow: cc.Node = null\n    // bottom: PBBottomArea = null\n\n    private book_bundle_name = ''\n\n    pageContainer: PBPageContainer = null\n\n    static instance: PictureBookPlayer = null\n    static turn_mode = 'verlet'\n    // config: BookConfig = null\n\n    static PLAY_MODE_AUTO = 0\n    static PLAY_MODE_MANAUL = 1\n    playMode = PictureBookPlayer.PLAY_MODE_AUTO //0自动 1手动\n\n    mode_btn: cc.Button = null\n\n    playing = true //播放状态\n\n    // getConfig(index: number) {\n    //     return this.config.pages[`${index + 1}`] as PageConfig\n    // }\n\n    // get currConfig() {\n    //     return this.getConfig(this.page.currPageIndex)\n    // }\n\n    modeImage: cc.Sprite = null\n    playImage: cc.Sprite = null\n\n    touchMask: cc.Node = null\n\n    setText(index: number) {\n        let texts = this.pageContainer.currPage.text\n        let txt = ''\n        if (index >= 0 && index < texts.length) {\n            txt = texts[index]\n        }\n        if (index < texts.length - 1) {\n            this.bottomArea.setBg(true)\n        } else {\n            this.bottomArea.setBg(false)\n        }\n        this.bottomArea.text.text.string = txt\n    }\n\n    setBottomBg(isTurn: boolean) {\n        this.bottomArea.setBg(isTurn)\n    }\n\n    set bookBundleName(name) {\n        this.book_bundle_name = name\n    }\n\n    async loadBook(bundleName: string) {\n        this.bookBundleName = bundleName\n        return new Promise<void>(resolve => {\n            loadBundle(this.book_bundle_name).then(async (bundle: cc.AssetManager.Bundle) => {\n                this.book_bundle = bundle\n                // //加载UI\n                // this.book_bundle.load('custom/left_arrow', cc.Prefab, (error: Error, prefab: cc.Prefab) => {\n                //     if (error) {\n                // this.left_arrow.active = true\n                //         return\n                //     }\n                //     let left_arrow = cc.instantiate(prefab)\n                //     this.left_slot.addChild(left_arrow)\n                // })\n                // this.book_bundle.load('custom/right_arrow', cc.Prefab, (error: Error, prefab: cc.Prefab) => {\n                //     if (error) {\n                // this.right_arrow.active = true\n                //         return\n                //     }\n                //     let right_arrow = cc.instantiate(prefab)\n                //     this.right_slot.addChild(right_arrow)\n                // })\n\n                // this.book_bundle.load('custom/bottom_area', cc.Prefab, (error: Error, prefab: cc.Prefab) => {\n                //     if (error) {\n                // this.bottomArea.node.active = true\n                //         return\n                //     }\n                //     let bottom_area = cc.instantiate(prefab).getComponent(PBBottomArea)\n                //     this.bottomArea = bottom_area\n                //     this.node.addChild(bottom_area.node)\n                // })\n\n                // this.book_bundle.load('setting', cc.JsonAsset, async (error: Error, txt: cc.JsonAsset) => {\n                //     if (error) {\n                //         console.log(error)\n                //         return\n                //     }\n                //     this.config = txt.json\n                //     await this.loadAllPages()\n                //     this.updatePageNum()\n                //     kit.manager.Event.emit(kit.consts.Event.LIFE_CYCLE_READY)\n                //     resolve()\n                // })\n                await this.loadFirstPage()\n                this.updatePageNum()\n                kit.manager.Event.emit(kit.consts.Event.LIFE_CYCLE_READY)\n            })\n        })\n    }\n\n    onLoad() {\n        PictureBookPlayer.instance = this\n        this.left_slot = cc.find('left_slot', this.node)\n        this.right_slot = cc.find('right_slot', this.node)\n        this.bottom_slot = cc.find('bottom_slot', this.node)\n        this.left_arrow = cc.find('left_arrow', this.left_slot)\n        this.left_arrow.active = true\n        this.right_arrow = cc.find('right_arrow', this.right_slot)\n        this.right_arrow.active = true\n        this.bottomArea = cc.find('bottom_area', this.bottom_slot).getComponent(PBBottomArea)\n        this.bottomArea.initUI()\n        this.bottomArea.node.active = false\n        this.page_slot = cc.find('page_slot', this.node)\n        this.pageContainer = cc.find('page', this.page_slot).getComponent(PBPageContainer)\n        this.modeImage = cc.find('mode_btn', this.node).getComponent(cc.Sprite)\n        this.playImage = cc.find('play_btn', this.node).getComponent(cc.Sprite)\n        // let mc = cc.Camera.main\n        // mc.ortho = false\n        // mc.zoomRatio = 1\n        // mc.alignWithScreen = false\n        // mc.farClip = 4096*2\n        // // this.node.z = -1000\n        // this.node.is3DNode = true\n        kit.manager.Event.on(kit.consts.Event.LIFE_CYCLE_PARAMS, this.onParams, this)\n        this.mode_btn = cc.find('mode_btn', this.node).getComponent(cc.Button)\n        this.touchMask = cc.find('touchMask', this.node)\n\n        this.touchMask.on(cc.Node.EventType.TOUCH_START, this.onTouchBegan, this)\n        this.touchMask.on(cc.Node.EventType.TOUCH_MOVE, this.onTouchMove, this)\n        this.touchMask.on(cc.Node.EventType.TOUCH_END, this.onTouchEnd, this)\n        this.touchMask.on(cc.Node.EventType.TOUCH_CANCEL, this.onTouchEnd, this)\n    }\n\n    onDestroy() {\n        kit.manager.Event.off(kit.consts.Event.LIFE_CYCLE_PARAMS, this.onParams, this)\n    }\n\n    onParams(data) {\n        this.params = data.data\n        this.loadBook(this.params.bundle)\n    }\n\n    async onPageLoaded(page: PBPage) {\n        if (page.index == this.pageContainer.currPageIndex) {\n            // if (page.text && page.text.length > 0) {\n            //     PictureBookPlayer.instance.setText(page.text[0])\n            // }\n            if (page.sound) {\n                page.playSound(0)\n            }\n            this.pageTimer(page)\n        }\n    }\n\n    autoturnpage = 10\n    autoturnpage_after_voice = 5\n\n    pageTimer(page: PBPage) {\n        this.needAutoTurnPage = false\n        // if (page.config.voice && page.config.voice.length > 0) {\n        if (page.voice.length > 0) {\n            if (this.autoturnpage > 0) {\n                page.playVoices(() => {\n                    // console.log('voice ended:' + page.config.voice[0])\n                    if (this.playMode == PictureBookPlayer.PLAY_MODE_AUTO) {\n                        this.needAutoTurnPage = true\n                        this.restTime = this.autoturnpage_after_voice\n                    }\n                })\n            } else {\n                page.playVoices()\n            }\n        } else {\n            this.needAutoTurnPage = true\n            this.restTime = this.autoturnpage\n        }\n    }\n\n    // autoTurningMode = false\n    private _needAutoTurnPage = false\n\n    set needAutoTurnPage(value) {\n        this._needAutoTurnPage = value\n    }\n\n    get needAutoTurnPage() {\n        return this._needAutoTurnPage\n    }\n    restTime = 0\n    update(dt: number) {\n        if (this.playMode == PictureBookPlayer.PLAY_MODE_AUTO && this.needAutoTurnPage) {\n            if (this.restTime > 0) {\n                this.restTime -= dt\n                if (this.restTime <= 0) {\n                    console.log('auto turn page >>>>>')\n                    this.onRightArrowClicked()\n                }\n            }\n        }\n    }\n\n    async sleep(seconds: number) {\n        return new Promise<void>(resolve => {\n            this.scheduleOnce(() => {\n                resolve()\n            }, seconds)\n        });\n    }\n\n    onPageUnLoaded(page: PBPage) {\n        if (page.index == this.pageContainer.currPageIndex) {\n            AudioManager.stopEffect()\n        }\n    }\n\n    static page_count = 0\n\n    updatePageNum() {\n        this.bottomArea.page_num.string = `${this.pageContainer.currPageIndex + 1}/${PictureBookPlayer.page_count}`\n    }\n\n    async loadFirstPage() {\n        // let index = 0\n        return new Promise<void>(async (resolve, reject) => {\n            let prefab: cc.Prefab = null\n            // while (true) {\n            try {\n                prefab = await this.loadPage(0)\n                if (prefab == null) {\n                    // break\n                }\n                // index++\n                await this.pageContainer.addPrefab(prefab, 0)\n                this.pageContainer.loadNext()\n            } catch (error) {\n                // break\n            }\n            // }\n            resolve()\n        })\n    }\n\n    getPrefabName(index) {\n        let prefabName = 'EduPage'\n        if (index == 0) {\n            return prefabName\n        }\n\n        if (index > 0) {\n            let str = `${index}`\n            if (str.length == 1) {\n                prefabName += ' - 00' + str\n            } else if (str.length == 2) {\n                prefabName += ' - 0' + str\n            } else {\n                prefabName += ' - ' + str\n            }\n        }\n        return prefabName\n    }\n\n    async loadPage(index: number) {\n        return new Promise<cc.Prefab>(resolve => {\n            let prefabName = this.getPrefabName(index)\n            this.book_bundle.load(prefabName, cc.Prefab, (error: Error, prefab: cc.Prefab) => {\n                if (error) {\n                    resolve(null)\n                }\n                resolve(prefab)\n            })\n        })\n    }\n\n    start() {\n    }\n\n    // update (dt) {}\n\n    async onLeftArrowClicked() {\n        if (this.pageContainer.currPage.hasPrevText()) {\n            this.pageContainer.currPage.turnPrevText()\n            return\n        }\n\n        if (this.pageContainer.currPageIndex == 0) {\n            return\n        }\n        if (this.pageContainer.turningLock) {\n            return\n        }\n        this.needAutoTurnPage = false\n        this.restTime = 0\n        this.onPageUnLoaded(this.pageContainer.currPage)\n        await this.pageContainer.backward()\n        this.onPageLoaded(this.pageContainer.currPage)\n        if (this.pageContainer.currPageIndex > 0) {\n            await this.pageContainer.loadPrev()\n        }\n    }\n\n    async onRightArrowClicked() {\n        if (this.pageContainer.currPage.hasNextText()) {\n            this.pageContainer.currPage.turnNextText()\n            return\n        }\n\n        if (this.pageContainer.currPageIndex == PictureBookPlayer.page_count) {\n            return\n        }\n        if (this.pageContainer.turningLock) {\n            return\n        }\n        if (this.pageContainer.nextPage == null) {\n            return\n        }\n\n\n        this.needAutoTurnPage = false\n        this.restTime = 0\n        this.onPageUnLoaded(this.pageContainer.currPage)\n        let b = await this.pageContainer.forward()\n        if (b) {\n            this.onPageLoaded(this.pageContainer.currPage)\n            if (this.pageContainer.currPageIndex < PictureBookPlayer.page_count - 1) {\n                await this.pageContainer.loadNext()\n            }\n        }\n    }\n\n    onModeChanged() {\n        if (this.playMode == PictureBookPlayer.PLAY_MODE_AUTO) {\n            this.playMode = PictureBookPlayer.PLAY_MODE_MANAUL\n            this.modeImage.spriteFrame = this.mode_frames[1]\n        } else {\n            this.playMode = PictureBookPlayer.PLAY_MODE_AUTO\n            let page = this.pageContainer.currPage\n            this.modeImage.spriteFrame = this.mode_frames[0]\n            this.pageTimer(page)\n        }\n    }\n\n    playOrPauseBook(b: boolean) {\n        console.log('change playing state:' + b)\n    }\n\n    onPlayChanged() {\n        if (this.playing) {\n            this.playing = false\n            this.playImage.spriteFrame = this.play_frames[1]\n            let page = this.pageContainer.currPage\n            if (page) {\n                page.pause()\n            }\n            this.scheduleOnce(() => {\n                cc.game.pause()\n            }, 0.1)\n        } else {\n            this.playing = true\n            this.playImage.spriteFrame = this.play_frames[0]\n            let page = this.pageContainer.currPage\n            if (page) {\n                page.resume()\n            }\n            // this.scheduleOnce(() => {\n            cc.game.resume()\n            // }, 0.1)\n        }\n        this.playOrPauseBook(this.playing)\n    }\n\n    onExit() {\n\n    }\n\n    private initPos: cc.Vec2 = cc.Vec2.ZERO\n    private currPos: cc.Vec2 = cc.Vec2.ZERO\n\n    private onTouchBegan(event: cc.Event.EventTouch) {\n        let currX = event.getLocationX()\n        let currY = event.getLocationY()\n        this.initPos.x = currX\n        this.initPos.y = currY\n        this.currPos.x = currX\n        this.currPos.y = currY\n    }\n\n    private onTouchMove(event: cc.Event.EventTouch) {\n        let deltaX = event.getDeltaX()\n        let deltaY = event.getDeltaY()\n        this.currPos.x += deltaX\n        this.currPos.y += deltaY\n\n        let worldPos = this.node.parent.convertToWorldSpaceAR(this.node.position)\n        // if (this.hotArea.getBoundingBoxToWorld().contains(cc.v2(worldPos.x, worldPos.y))) {\n        //     this.hotBg.active = true\n        // } else {\n        //     this.hotBg.active = false\n        // }\n    }\n\n    private onTouchEnd(event: cc.Event.EventTouch) {\n        console.log(\"PictureBookPlayerEn.onTouchEnd\")\n        let currX = event.getLocationX()\n        let currY = event.getLocationY()\n\n        let dis = Math.abs((currX - this.initPos.x))\n        if (dis >= 100) {\n            if (currX < this.initPos.x) {\n                PictureBookPlayer.instance.onRightArrowClicked()\n            } else {\n                PictureBookPlayer.instance.onLeftArrowClicked()\n            }\n        } else {\n            let page = this.pageContainer.currPage\n            if (page) {\n                // let worldPos = this.touchMask.parent.convertToWorldSpaceAR(cc.v2(currX, currY))\n                page.onClickedAt(cc.v2(currX, currY))\n            }\n        }\n    }\n\n}\n","\nexport default class PageEffectAssemblerBase extends cc.Assembler {\n    // 普通四边形的属性，根据实际的顶点格式、数量调整\n    protected verticesCount = 4;\n    protected indicesCount = 6;\n    protected floatsPerVert = 5;\n\n    protected colorOffset = 4;    \n    protected renderData: cc.RenderData = null;\n\n    get verticesFloats() {\n        return this.verticesCount * this.floatsPerVert;\n    }\n\n    getBuffer() {\n        //@ts-ignore\n        return cc.renderer._handle.getBuffer(\"mesh\", this.getVfmt());\n    }\n\n    getVfmt() {\n        // to be overwrite\n        return null;\n    }\n\n    updateColor(comp, color) {\n        let uintVerts = this.renderData.uintVDatas[0];\n        if (!uintVerts) return;\n        color = color != null ? color : comp.node.color._val;\n        let floatsPerVert = this.floatsPerVert;\n        let colorOffset = this.colorOffset;\n        for (let i = colorOffset, l = uintVerts.length; i < l; i += floatsPerVert) {\n            uintVerts[i] = color;\n        }\n    }\n\n    updateIsFront(comp, dataOffset) {\n        let verts = this.renderData.vDatas[0];\n        let index = 0;\n        let floatsPerVert = this.floatsPerVert;\n        for (let i = 0, n = this.verticesCount; i < n; ++i) {\n            index = i * floatsPerVert;\n            let isFirstVert = i % 2 === 0;\n            let firstVertX = isFirstVert ? verts[index] : verts[index - floatsPerVert];\n            let secondVertX = isFirstVert ? verts[index + floatsPerVert] : verts[index];\n            let isFront = firstVertX < secondVertX ? 1.0 : 0.0;\n            verts[index + dataOffset] = isFront;\n        }\n    }\n    \n    initData() {\n        //@ts-ignore\n        this.renderData = new cc.RenderData();\n        this.renderData.init(this);\n\n        let data = this.renderData;\n        // createFlexData支持创建指定格式的renderData\n        data.createFlexData(0, this.verticesCount, this.indicesCount, this.getVfmt());\n\n        // 顶点数固定的情况下索引不变化\n        let indices = data.iDatas[0];\n        let count = indices.length / 6;\n        for (let i = 0, idx = 0; i < count; i++) {\n            let vertextID = i * 4;\n            indices[idx++] = vertextID;\n            indices[idx++] = vertextID+1;\n            indices[idx++] = vertextID+2;\n            indices[idx++] = vertextID+1;\n            indices[idx++] = vertextID+3;\n            indices[idx++] = vertextID+2;\n        }\n    }\n\n    fillBuffers(comp, renderer) {\n        let renderData = this.renderData;\n        let vData = renderData.vDatas[0] as any;\n        let iData = renderData.iDatas[0];\n\n        let buffer = this.getBuffer();\n        let offsetInfo = buffer.request(this.verticesCount, this.indicesCount);\n\n        let vertexOffset = offsetInfo.byteOffset >> 2,\n            vbuf = buffer._vData;\n\n        if (vData.length + vertexOffset > vbuf.length) {\n            //@ts-egnore\n            vbuf.set(vData.subarray(0, vbuf.length - vertexOffset), vertexOffset);\n        } else {\n            vbuf.set(vData, vertexOffset);\n        }\n\n        let ibuf = buffer._iData,\n            indiceOffset = offsetInfo.indiceOffset,\n            vertexId = offsetInfo.vertexOffset;\n        for (let i = 0, l = iData.length; i < l; i++) {\n            ibuf[indiceOffset++] = vertexId + iData[i];\n        }\n    }\n}\n","import PageEffectAssemblerBase from \"./page-effect-assembler-base-en\";\r\n\r\nconst gfx = cc.gfx\r\n\r\nlet vfmtPosUvColorFront = new gfx.VertexFormat([\r\n    { name: gfx.ATTR_POSITION, type: gfx.ATTR_TYPE_FLOAT32, num: 2 },\r\n    { name: gfx.ATTR_UV0, type: gfx.ATTR_TYPE_FLOAT32, num: 2 },\r\n    { name: gfx.ATTR_COLOR, type: gfx.ATTR_TYPE_UINT8, num: 4, normalize: true },\r\n    { name: \"a_isFront\", type: gfx.ATTR_TYPE_FLOAT32, num: 1},\r\n]);\r\n\r\nexport default class VerletAssembler extends PageEffectAssemblerBase {\r\n\r\n    init(comp: cc.RenderComponent) {\r\n        super['init'](comp);\r\n\r\n        //@ts-ignore\r\n        let segmentCount = comp.pointsCount - 1;\r\n        this.verticesCount = 4 * segmentCount;\r\n        this.indicesCount = 6 * segmentCount;\r\n        this.floatsPerVert = 6;\r\n        \r\n        this.initData();\r\n    }\r\n\r\n    getVfmt() {\r\n        return vfmtPosUvColorFront;\r\n    }\r\n    \r\n    public updateRenderData (comp: any) {\r\n        if (comp) {\r\n            let pointList: cc.Vec2[] = comp.getPointList()\r\n            let pointNum: number = pointList.length\r\n            if (pointNum < 2) {\r\n                return\r\n            }\r\n\r\n            let node = comp.node\r\n            let height = node.height\r\n            let width = node.width\r\n            let posX = - width * node.anchorX\r\n            let posY = - height * node.anchorY\r\n\r\n            let gapU = 1 / (pointNum - 1)\r\n            let lastU = 0\r\n            let nextU = 0\r\n\r\n            let floatsPerVert = this.floatsPerVert;\r\n            let verts = this.renderData.vDatas[0];\r\n            // 写verts时的下标\r\n            let dstOffset = 0;\r\n            for (let i = 1; i < pointNum; i++) {\r\n                let lastPoint = pointList[i - 1]\r\n                let nextPoint = pointList[i]\r\n                nextU = lastU + gapU\r\n\r\n                // 顶点和质点一一对应\r\n                // 顶点数据写入verts\r\n                dstOffset = floatsPerVert * (i-1) * 4;\r\n                verts[dstOffset]     = posX + lastPoint.x;\r\n                verts[dstOffset + 1] = posY + lastPoint.y;\r\n                verts[dstOffset + 2] = lastU;\r\n                verts[dstOffset + 3] = 1;\r\n                dstOffset += floatsPerVert;\r\n\r\n                verts[dstOffset]     = posX + nextPoint.x;\r\n                verts[dstOffset + 1] = posY + nextPoint.y;\r\n                verts[dstOffset + 2] = nextU;\r\n                verts[dstOffset + 3] = 1;\r\n                dstOffset += floatsPerVert;\r\n\r\n                verts[dstOffset]     = posX + lastPoint.x;\r\n                verts[dstOffset + 1] = posY + height + lastPoint.y;\r\n                verts[dstOffset + 2] = lastU;\r\n                verts[dstOffset + 3] = 0;\r\n                dstOffset += floatsPerVert;\r\n\r\n                verts[dstOffset]     = posX + nextPoint.x;\r\n                verts[dstOffset + 1] = posY + height + nextPoint.y;\r\n                verts[dstOffset + 2] = nextU;\r\n                verts[dstOffset + 3] = 0;\r\n\r\n                lastU = nextU\r\n            }\r\n\r\n            this.updateColor(comp, null);\r\n            this.updateIsFront(comp, 5);\r\n        }\r\n    }\r\n}","import VerletAssembler from \"./verlet-assembler-en\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\nclass PagePoint {\r\n    public oldPos: cc.Vec2\r\n    public newPos: cc.Vec2\r\n\r\n    constructor(x: number, y: number) {\r\n        this.oldPos = this.newPos = cc.v2(x, y)\r\n    }\r\n}\r\n\r\n@ccclass\r\nexport default class VerletRender2 extends cc.RenderComponent {\r\n    // @property({type: [cc.Texture2D], displayName:\"纹理\"})\r\n    // public textureList: cc.Texture2D[] = []\r\n\r\n    // @property({displayName:\"每条边上的顶点数量\"})\r\n    public pointsCount: number = 10\r\n\r\n    // @property({displayName:\"纠正次数\"})\r\n    public constraintTimes: number = 50\r\n\r\n    // @property({displayName:\"速度衰减系数\"})\r\n    public damping: number = 0.7\r\n\r\n    // @property({displayName:\"重力\"})\r\n    public gravity: number = -0.2\r\n\r\n    protected _initedMaterial: boolean = false\r\n    private _pointList: PagePoint[] = []\r\n    _angle: number = 0\r\n    // onEnable() {\r\n    //     super.onEnable();\r\n    //     this.initPointList();\r\n    //     // this.draw();\r\n    // }\r\n\r\n    start() {\r\n        this.initPointList();\r\n        this.update();\r\n    }\r\n\r\n    public _resetAssembler() {\r\n        let assembler = this['_assembler'] = new VerletAssembler()\r\n        assembler.init(this)\r\n    }\r\n\r\n    setTextures(texture1: cc.Texture2D, texture2: cc.Texture2D) {\r\n        let material = this.getMaterial(0)\r\n        if (material) {\r\n            material.define('CC_USE_MODEL', 1);\r\n            material.setProperty('texture0', texture1);\r\n            material.setProperty('texture1', texture2);\r\n        }\r\n    }\r\n\r\n    public updateAngle(angle: number) {\r\n        this._angle = angle\r\n    }\r\n\r\n    private pointListShadow: cc.Vec2[] = []\r\n    public getPointList() {\r\n        let pointList = this.pointListShadow\r\n        // if (pointList.length == 0) {\r\n        //     for (let point of this._pointList) {\r\n        //         pointList.push(new cc.Vec2(point.newPos.x, point.newPos.y))\r\n        //     }\r\n        // } else {\r\n        this._pointList.forEach((pp, i) => {\r\n            pointList[i].x = pp.newPos.x\r\n            pointList[i].y = pp.newPos.y\r\n        })\r\n        // }\r\n        return pointList\r\n    }\r\n\r\n    // 初始化质点\r\n    public initPointList() {\r\n        for (let i = 0; i < this.pointsCount; ++i) {\r\n            let posX = i / (this.pointsCount - 1) * this.node.width\r\n            this._pointList.push(new PagePoint(posX, 0))\r\n            this.pointListShadow.push(cc.v2(this._pointList[i].newPos.x, this._pointList[i].newPos.y))\r\n        }\r\n    }\r\n\r\n    public update() {\r\n        this.simulate()\r\n        this.applyConstraint()\r\n        this.draw()\r\n    }\r\n\r\n    // 使用verlet积分更新位置\r\n    public simulate() {\r\n        let gravity = cc.v2(0, this.gravity)\r\n        for (let i = this.pointsCount - 1; i >= 1; i--) {\r\n            let point = this._pointList[i]\r\n            // 速度等于当前位置与上一个位置的差乘上衰减系数\r\n            let velocity: cc.Vec2 = point.newPos.sub(point.oldPos).mul(this.damping)\r\n            // 模拟一个水平放置的绳子，当y小于等于0时，将不再受重力影响\r\n            if (point.newPos.y <= 0) {\r\n                gravity.y = Math.max(0, gravity.y)\r\n            }\r\n            point.oldPos = point.newPos\r\n            point.newPos = point.newPos.add(velocity)\r\n            point.newPos = point.newPos.add(gravity)\r\n        }\r\n    }\r\n\r\n    private _updateEndPos(endPos: cc.Vec2) {\r\n        let tailPoint = this._pointList[this.pointsCount - 1]\r\n        tailPoint.newPos = new cc.Vec2(endPos.x, endPos.y)\r\n    }\r\n\r\n    private _getEndPos(): cc.Vec2 {\r\n        let endPos = new cc.Vec2(0, 0)\r\n        let width = this.node.width\r\n        let rad = this._angle * Math.PI / 180\r\n\r\n        // 与贝塞尔曲线使用相同的运动轨迹\r\n        let per = rad * 2 / Math.PI\r\n        if (this._angle <= 90) {\r\n            let endPosX = width * (1 - Math.pow(per, 3))\r\n            let endPosY = width * 1 / 4 * (1 - Math.pow(1 - per, 4))\r\n            endPos = new cc.Vec2(endPosX, endPosY)\r\n        } else {\r\n            per = per - 1\r\n            let endPosX = - width * (1 - Math.pow(1 - per, 3))\r\n            let endPosY = width * 1 / 4 * (1 - Math.pow(per, 4))\r\n            endPos = new cc.Vec2(endPosX, endPosY)\r\n        }\r\n\r\n\r\n        return endPos\r\n    }\r\n    // 约束纠正\r\n    public applyConstraint() {\r\n        // 两个质点之间的固定距离\r\n        let normalDistance = this.node.width / (this.pointsCount - 1)\r\n        let endPos = this._getEndPos()\r\n        for (let t = 0; t < this.constraintTimes; t++) {\r\n            this._updateEndPos(endPos)\r\n            //由最后一个质点开始依次纠正\r\n            for (let i = this.pointsCount - 1; i >= 1; i--) {\r\n                let firstPoint = this._pointList[i - 1]\r\n                let secondPoint = this._pointList[i]\r\n                let delatPos = secondPoint.newPos.sub(firstPoint.newPos)  //d\r\n                let distance = delatPos.mag()\r\n                let fixDirection: cc.Vec2 = null\r\n                let fixDirection2: cc.Vec2 = null\r\n                if (distance < normalDistance) {\r\n                    fixDirection = delatPos.normalize().negate()\r\n                    fixDirection2 = delatPos.normalize()\r\n                } else if (distance > normalDistance) {\r\n                    fixDirection = delatPos.normalize()\r\n                    fixDirection2 = delatPos.normalize().negate()\r\n                } else {\r\n                    continue\r\n                }\r\n\r\n                let fixLen = Math.abs(distance - normalDistance)\r\n                if (i == 1) {\r\n                    // 由于第一个质点是固定的，所以只对第二个质点做纠正\r\n                    let fixVector = fixDirection2.mul(fixLen)\r\n                    secondPoint.newPos.addSelf(fixVector)\r\n                } else {\r\n                    // 将两个质点之间的距离纠正为固定长度\r\n                    let fixHalfVector1 = fixDirection.mul(fixLen * 0.5)\r\n                    firstPoint.newPos.addSelf(fixHalfVector1)\r\n                    let fixHalfVector2 = fixDirection2.mul(fixLen * 0.5)\r\n                    secondPoint.newPos.addSelf(fixHalfVector2)\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    public draw() {\r\n        this['setVertsDirty']()\r\n    }\r\n}"],"file":"index.js"}