{"version":3,"sources":["assets/common/scripts/AdapterBg.ts","assets/common/scripts/AdapterScreen.ts","assets/common/utils/sprite/Assembler2D.ts","assets/common/scripts/BaseChapterComponent.ts","assets/common/scripts/ChapterGameComponent.ts","assets/common/structure/CompEnum.ts","assets/common/hand/Hand.ts","assets/common/utils/sprite/LSprite.ts","assets/common/rollerAnimation/scr/RollerAnimation.ts","assets/common/utils/SpineUtils.ts","assets/common/utils/sprite/SpriteAssembler.ts","assets/common/gameTask/scripts/TaskBoard.ts","assets/common/gameTask/scripts/gameTask.ts","assets/common/utils/lessonUtil.ts","assets/common/scripts/rollBg.ts"],"names":["_a","cc","_decorator","ccclass","property","AdapterBg","_super","__extends","prototype","onLoad","onEnable","this","relayout","frameSize","view","getFrameSize","designResolution","Canvas","instance","designSize","size","width","height","frameAspectRatio","screenSize","__assign","ratio","node","wdt","getComponent","Widget","addComponent","isAlignHorizontalCenter","isAlignVerticalCenter","__decorate","Component","exports","default","AdapterScreen","_this","apply","arguments","lock","log","designAspectRatio","Math","ceil","Assembler2D","verticesCount","indecesCount","floatsPerVert","uvOffset","colorOffset","_renderData","_local","init","comp","call","RenderData","initLocal","initData","Object","defineProperty","get","length","data","createQuadData","verticesFloats","updateColor","color","uintVerts","uintVDatas","_val","i","len","updateUVs","uv","verts","vDatas","srcOffset","dstOffset","updateVerts","cw","ch","appx","anchorX","appy","l","b","r","t","local","updateWorldVerts","updateRenderData","_vertsDirty","CC_NATIVERENDERER","updateWorldVertsWebGL","matirx","Mat4","getWorldMatrix","matirxM","m","a","c","d","tx","ty","vl","vb","vr","vt","justTranslate","index","al","ar","bl","br","cb","ct","db","dt","updateWorldVertsNative","fillBuffers","renderer","worldMatDirty","renderData","vData","iData","iDatas","buffer","getBuffer","offsetInfo","request","vertexOffset","byteOffset","vbuf","_vData","set","subarray","ibuf","_iData","indiceOffset","vertexId","packToDynamicAtlas","frame","CC_TEST","_original","dynamicAtlasManager","_texture","packable","packedFrame","insertSpriteFrame","_setDynamicAtlasFrame","material","_materials","getProperty","_updateMaterial","_handle","_meshBuffer","Assembler","events_1","require","EventSystem_1","BaseChapterComponent","params","initParams","console","registerEvent","on","LIFE_CYCLE_BLOCK","onLifeCycleBlock","LIFE_CYCLE_UNBLOCK","onLifeCycleUnBlock","unregisterEvent","off","onChapterReady","emit","LIFE_CYCLE_READY","onChapterComplete","LIFE_CYCLE_COMPLETE","onDestroy","BaseChapterComponent_1","ChapterGameComponent","recordData","taskData","gameTaskCom","initComponents","evaluatingType","evaluatingText","tryTimes","evaluationScore","recordTime","FOLLOW_MODULE_TO_CLIENT","onRecordResult","componentsLoadComplete","Promise","all","initRecordAudioComp","initTaskComp","then","catch","error","warn","resolve","FOLLOW_CLIENT_TO_MODULE","eventName","extra","reject","bundle","assetManager","getBundle","load","Prefab","assets","taskNode","instantiate","parent","startRecordAudio","bundleName","audioUrl","iconPath","recordType","result","reportRoundCompleted","isSuccess","onGameEnd","RoundStateType","Hand","sp","cursor","mask","bg","onCompleted","move_duration","setCompleteListener","playClick","fadeIn","active","angle","setAnimation","fade","easing","easeSineOut","runAction","playSwipeLeft","playSwipeByAngle","playSwipeRight","playSwipeUp","playSwipeDown","playDown","callback","playUp","name","loop","hide","animation","setTargetBound","x","y","w","h","setTargetNode","target","expand","worldPos","convertToWorldSpaceAR","Vec2","ZERO","localPos","convertToNodeSpaceAR","type","Skeleton","displayName","Node","SpriteAssembler_1","LSprite","colorList","flushProperties","_resetAssembler","setVertsDirty","assembler","_assembler","_updateColor","Color","tooltip","Sprite","ChapterGameComponent_1","RollerAnimation","farNode","middleNode","nearNode","farSpeed","middleSpeed","nearSpeed","isHorizontal","isStopMove","start","stopMove","resumeMove","setFarSpeed","speed","getFarSpeed","setMiddleSpeed","getMiddleSpeed","setNearSpeed","getNearSpeed","changeSpeedMove","FSpeed","MSpeed","NSpeed","childrenCount","children","forEach","v","checkNode","dir","update","TimerSystem_1","SpineUtils","playSpineAsync","info","doOnce","duration","isValid","te","setTrackCompleteListener","playSpineAniByConfig","config","func","sent","playSpine","spinCmpt","animName","finishCb","finishCount","nextName","nextLoop","count_1","addAnimation","Assembler2D_1","SpriteAssembler","_whiteColor","_colorList","val","newColorList","sprite","_spriteFrame","anchorY","trim","spriteFrame","ow","_originalSize","oh","rw","_rect","rh","offset","_offset","scaleX","scaleY","trimLeft","trimRight","trimBottom","trimTop","TaskBoard","contents","contentNodes","finishIcon","poses","currPage","isShowing","panel","safearea","onClosed","flag_block","initPos","currPos","EventType","TOUCH_START","onTouchBegan","TOUCH_END","onTouchEnd","TOUCH_CANCEL","sw","show","pageIndex","onMoveEnded","pre","addChild","moveTo","fadeOut","removeFromParent","destroy","hideFinishIcon","oc","setPrefabs","prefabs","setNodes","nodes","playFinished","onClick","pos","mov","easeBackOut","seq","sequence","callFunc","event","getLocationX","getLocationY","currX","currY","dis","sqrt","AudioManager_1","gameTask","nodeWidget","topBtn","moveLen","taskHideTime","moveTime","updateTaskPos","right","updateAlignment","showTaskList","undefined","taskIndex","JSON","stringify","complete","imgList","updateTaskImg","moveAni","showSealSpine","SpriteFrame","err","asset","getChildByName","sealNode","sk","en","playEffect","callFuc","tween","by","callFunc1","delay","callFunc2","callFunc3","onTopBtnClicked","Tween","stopAllByTarget","ResourcesManager_1","lessonUtil","getRightFeedBackAni","res","rej","loadRes","ResourceType","Normal","e","node_1","ske","getErrorFeedBackAni","node_2","Mtype","NewClass","lubg1","lubg2","mtype","VERTICAL_P","isRunmap","cur_lubg","luOffset","setbgfix","VERTICAL_N","HORIZONTAL_P","HORIZONTAL_N","runlubg","s","Integer","min","max","step","slide","Enum"],"mappings":"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","sourcesContent":["const { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class AdapterBg extends cc.Component {\n    public onLoad() {\n    }\n\n    public onEnable() {\n        // console.log('FixBg >>>>>>>>>>>>>>')\n        this.relayout()\n    }\n\n    /**\n     * 重新布局\n     */\n    public relayout() {\n        let frameSize: cc.Size = cc.view.getFrameSize() // 屏幕尺寸\n        let designResolution: cc.Size = cc.Canvas.instance.designResolution\n        let designSize: cc.Size = cc.size(designResolution.width, designResolution.height)  // cc.Canvas.instance.designResolution\n        let frameAspectRatio: number = frameSize.width / frameSize.height\n        let screenSize: cc.Size = { ...designSize } as cc.Size\n\n        let ratio: number = this.node.width / this.node.height\n        if (ratio > frameAspectRatio) {\n            let width = this.node.width * screenSize.height / this.node.height\n            this.node.width = width\n            this.node.height = screenSize.height\n        } else {\n            let height = this.node.height * screenSize.width / this.node.width\n            this.node.width = screenSize.width\n            this.node.height = height\n        }\n\n        let wdt: cc.Widget = this.node.getComponent(cc.Widget)\n        if (wdt == null) {\n            this.node.addComponent(cc.Widget)\n            wdt = this.node.getComponent(cc.Widget)\n        }\n        wdt.isAlignHorizontalCenter = true\n        wdt.isAlignVerticalCenter = true\n    }\n}\n","const { ccclass, property } = cc._decorator;\n/**\n * 根据屏幕物理形状动态设置设计尺寸,设置实际的设计尺寸(至少有一个维度与1334x750相同，另一个维度为扩展维度,保证设计尺寸不比1334x750小)\n */\n@ccclass\nexport default class AdapterScreen extends cc.Component {\n    private lock = false\n\n    public onLoad() {\n        this.relayout()\n    }\n\n    public relayout() {\n        if (this.lock) {\n            return\n        }\n        this.lock = true\n        // 根据屏幕物理形状动态设置设计尺寸\n        let frameSize = cc.view.getFrameSize() // 屏幕尺寸\n        let designResolution = cc.Canvas.instance.designResolution\n        let designSize = cc.size(designResolution.width, designResolution.height)\n        cc.log(\"canvas designSize:\", designSize)\n        let frameAspectRatio = frameSize.width / frameSize.height\n        let designAspectRatio = designSize.width / designSize.height\n        let screenSize = { ...designSize } as cc.Size\n\n        if (frameAspectRatio < designAspectRatio) {\n            screenSize.height = Math.ceil(designSize.width / frameAspectRatio)\n        } else {\n            screenSize.width = Math.ceil(designSize.height * frameAspectRatio)\n        }\n        // 设置实际的设计尺寸(更改canvas的形状)\n        cc.Canvas.instance.designResolution = screenSize\n\n        this.lock = false\n    }\n\n    // public onWindowSizeChanged() {\n    //     cc.log(\"onWindowSizeChanged\")\n    //     this.relayout()\n    // }\n}\n","\n// 自定义渲染\n// https://docs.cocos.com/creator/manual/zh/advanced-topics/custom-render.html\n\n// 参考引擎\n// engine\\assemblers\\assembler-2d.js\n\n// 参考demo地址\n// https://github.com/caogtaa/CCBatchingTricks\n\n// 论坛地址\n// https://forum.cocos.org/t/demo/95087\n\n// 每个2d渲染单元里的有:\n// 4个顶点属性数据\n// 6个顶点索引 -> 三角剖分成2个三角形\n\n// 每个顶点属性由5个32位数据组成\n// 顶点属性声明:\n// var vfmtPosUvColor = new gfx.VertexFormat([\n//     { name: gfx.ATTR_POSITION, type: gfx.ATTR_TYPE_FLOAT32, num: 2 },\n//     { name: gfx.ATTR_UV0, type: gfx.ATTR_TYPE_FLOAT32, num: 2 },\n//     { name: gfx.ATTR_COLOR, type: gfx.ATTR_TYPE_UINT8, num: 4, normalize: true },       // 4个uint8\n// ]);\n// 顶点属性数据排列，每一格是32位 (float32/uint32)\n// x|y|u|v|color|x|y|u|v|color|...\n// 其中uv在一组数据中的偏移是2，color的偏移是4\n\n\n// const renderEngine = cc.renderer.renderEngine;\n\n// @ts-ignore\n// const gfx = cc.gfx;\n\n// 引擎定义的顶点数据的 buffer 格式, 参考引擎中的 vertex-format.js\n// 传递位置及 UV\n// let vfmtPosUv = new gfx.VertexFormat([\n//     { name: gfx.ATTR_POSITION, type: gfx.ATTR_TYPE_FLOAT32, num: 2 },\n//     { name: gfx.ATTR_UV0, type: gfx.ATTR_TYPE_FLOAT32, num: 2 }\n// ]);\n// 传递位置，UV 及颜色数据\n// let vfmtPosUvColor = new gfx.VertexFormat([\n//     { name: gfx.ATTR_POSITION, type: gfx.ATTR_TYPE_FLOAT32, num: 2 },\n//     { name: gfx.ATTR_UV0, type: gfx.ATTR_TYPE_FLOAT32, num: 2 },\n//     { name: gfx.ATTR_COLOR, type: gfx.ATTR_TYPE_UINT8, num: 4, normalize: true },\n// ]);\n\nexport default class Assembler2D extends cc.Assembler {\n\n    verticesCount: number = 4;\n    indecesCount: number = 6;\n    floatsPerVert: number = 5;\n\n    uvOffset: number = 2;\n    colorOffset: number = 4;\n\n    protected _renderData: cc.RenderData = null;\n    protected _local: any[] = null;\n\n    init(comp: cc.RenderComponent) {\n        super.init(comp);\n\n        this._renderData = new cc.RenderData();\n        this._renderData.init(this);\n\n        this.initLocal();\n        this.initData();\n    }\n\n    get verticesFloats(): number {\n        return this.verticesCount * this.floatsPerVert;\n    }\n\n    initLocal() {\n        this._local = [];\n        this._local.length = 4;\n    }\n\n    initData() {\n        let data = this._renderData;\n        data.createQuadData(0, this.verticesFloats, this.indecesCount);\n    }\n\n    updateColor(comp: any, color: any) {\n        let uintVerts = this._renderData.uintVDatas[0];\n        if(!uintVerts) return;\n        color = color != null ? color : comp.node.color._val;\n        let floatsPerVert = this.floatsPerVert;\n        let colorOffset = this.colorOffset;\n        for(let i = colorOffset, len = uintVerts.length; i < len; i += floatsPerVert) {\n            uintVerts[i] = color;\n        }\n    }\n\n    protected updateUVs(comp: cc.RenderComponent) {\n        // 左下, 右下, 左上, 右上\n        let uv = [0,0, 1,0, 0,1, 1,1];\n        let uvOffset = this.uvOffset;\n        let floatsPerVert = this.floatsPerVert;\n        let verts = this._renderData.vDatas[0];\n\n        for(let i = 0; i < 4; i++) {\n            let srcOffset = i * 2;\n            let dstOffset = floatsPerVert * i + uvOffset;\n            verts[dstOffset] = uv[srcOffset];\n            verts[dstOffset+1] = uv[srcOffset+1];\n        }\n    }\n\n    protected updateVerts(comp: cc.RenderComponent) {\n        let node: cc.Node = comp.node;\n        let cw: number = node.width;\n        let ch: number = node.height;\n        let appx: number = node.anchorX * cw;\n        let appy: number = node.anchorX * ch;\n        let l: number = -appx;\n        let b: number = -appy;\n        let r: number = appx;\n        let t: number = appy;\n        \n        let local = this._local;\n        local[0] = l;\n        local[1] = b;\n        local[2] = r;\n        local[3] = t;\n        this.updateWorldVerts(comp);\n    }\n\n    protected updateRenderData(comp: cc.RenderComponent) {\n        if(comp._vertsDirty) {\n            this.updateUVs(comp);\n            this.updateVerts(comp);\n            comp._vertsDirty = false;\n        }\n    }\n\n    updateWorldVerts(comp: cc.RenderComponent) {\n        if(CC_NATIVERENDERER) {\n            this.updateWorldVertsNative(comp);\n        } else {\n            this.updateWorldVertsWebGL(comp);\n        }\n    }\n\n    /*\n        m00 = 1, m01 = 0, m02 = 0, m03 = 0,\n        m04 = 0, m05 = 1, m06 = 0, m07 = 0,\n        m08 = 0, m09 = 0, m10 = 1, m11 = 0,\n        m12 = 0, m13 = 0, m14 = 0, m15 = 1\n    */\n\n    updateWorldVertsWebGL(comp: cc.RenderComponent) {\n        let local = this._local;\n        let verts = this._renderData.vDatas[0];\n\n        let matirx: cc.Mat4 = new cc.Mat4();\n        comp.node.getWorldMatrix(matirx);\n\n        let matirxM = matirx.m;\n        let a = matirxM[0];\n        let b = matirxM[1];\n        let c = matirxM[4];\n        let d = matirxM[5];\n        let tx = matirxM[12];\n        let ty = matirxM[13];\n\n        let vl = local[0];\n        let vb = local[1];\n        let vr = local[2];\n        let vt = local[3];\n\n        let justTranslate = a === 1 && b === 0 && c === 0 && d === 1;\n\n        let index = 0;\n        let floatsPerVert = this.floatsPerVert;\n\n        if(justTranslate) {\n            // left bottom\n            verts[index] = vl + tx;\n            verts[index+1] = vb + ty;\n\n            index += floatsPerVert;\n\n            // right bottom\n            verts[index] = vr + tx;\n            verts[index+1] = vb + ty;\n\n            index += floatsPerVert;\n\n            // left top\n            verts[index] = vl + tx;\n            verts[index+1] = vt + ty;\n\n            index += floatsPerVert;\n\n            // right top\n            verts[index] = vr + tx;\n            verts[index+1] = vt + ty;\n        } else {\n            let al = a * vl, ar = a * vr,\n            bl = b * vl, br = b * vr,\n            cb = c * vb, ct = c * vt,\n            db = d * vb, dt = d * vt;\n\n            verts[index] = al + cb + tx;\n            verts[index+1] = bl + db + ty;\n            index += floatsPerVert;\n\n            verts[index] = ar + cb + tx;\n            verts[index+1] = br + db + ty;\n            index += floatsPerVert;\n\n            verts[index] = al + ct + tx;\n            verts[index+1] = bl + dt + ty;\n            index += floatsPerVert;\n\n            verts[index] = ar + ct + tx;\n            verts[index+1] = br + dt + ty;\n        }\n    }\n\n    // copy from \\jsb-adapter-master\\engine\\assemblers\\assembler-2d.js\n    updateWorldVertsNative(comp: any) {\n        let local = this._local;\n        let verts = this._renderData.vDatas[0];\n        let floatsPerVert = this.floatsPerVert;\n      \n        let vl = local[0],\n            vr = local[2],\n            vb = local[1],\n            vt = local[3];\n      \n        let index: number = 0;\n        // left bottom\n        verts[index] = vl;\n        verts[index+1] = vb;\n        index += floatsPerVert;\n        // right bottom\n        verts[index] = vr;\n        verts[index+1] = vb;\n        index += floatsPerVert;\n        // left top\n        verts[index] = vl;\n        verts[index+1] = vt;\n        index += floatsPerVert;\n        // right top\n        verts[index] = vr;\n        verts[index+1] = vt;\n    }\n\n    // 纯数据拷贝, 没有什么参考价值.\n    // 不用纠结为什么这么写\n    fillBuffers(comp: cc.RenderComponent, renderer: any) {\n        if(renderer.worldMatDirty) {\n            this.updateWorldVerts(comp);\n        }\n\n        let renderData = this._renderData;\n        let vData = renderData.vDatas[0];\n        let iData = renderData.iDatas[0];\n\n        let buffer = this.getBuffer();\n        let offsetInfo = buffer.request(this.verticesCount, this.indecesCount);\n\n        // fill vertices\n        let vertexOffset = offsetInfo.byteOffset >> 2;\n        let vbuf = buffer._vData;\n\n        if (vData.length + vertexOffset > vbuf.length) {\n            vbuf.set(vData.subarray(0, vbuf.length - vertexOffset), vertexOffset);\n        } else {\n            vbuf.set(vData, vertexOffset);\n        }\n\n        // fill indices\n        let ibuf = buffer._iData,\n            indiceOffset = offsetInfo.indiceOffset,\n            vertexId = offsetInfo.vertexOffset;             // vertexId是已经在buffer里的顶点数，也是当前顶点序号的基数\n        for (let i = 0, l = iData.length; i < l; i++) {\n            ibuf[indiceOffset++] = vertexId + iData[i];\n        }\n    }\n\n    packToDynamicAtlas(comp: any, frame: any) {\n        if(CC_TEST) return;\n\n        if (!frame._original && cc.dynamicAtlasManager && frame._texture.packable) {\n            let packedFrame = cc.dynamicAtlasManager.insertSpriteFrame(frame);\n            //@ts-ignore\n            if (packedFrame) {\n                frame._setDynamicAtlasFrame(packedFrame);\n            }\n        }\n        let material = comp._materials[0];\n        if (!material) return;\n        \n        if (material.getProperty('texture') !== frame._texture) {\n            // texture was packed to dynamic atlas, should update uvs\n            comp._vertsDirty = true;\n            comp._updateMaterial();\n        }\n    }\n\n    getBuffer() {\n        // cc.renderer._handle.getBuffer(\"mesh\", this.getVfmt());\n        //@ts-ignore\n        return cc.renderer._handle._meshBuffer;\n    }\n}","import { LIFE_CYCLE_BLOCK, LIFE_CYCLE_COMPLETE, LIFE_CYCLE_READY, LIFE_CYCLE_UNBLOCK } from \"../../kit/events/events\";\nimport EventSystem from \"../../kit/system/event/EventSystem\";\n\n/**\n * 负责章节生命周期，等通用功能\n */\nconst {ccclass} = cc._decorator;\n\n@ccclass\nexport default class BaseChapterComponent extends cc.Component {\n    protected params:any = null;\n    initParams(params) {\n        this.params = params;\n    }\n\n    onLoad () {\n        console.log(\"BaseChapterComponent onLoad params: \", this.params);\n        this.registerEvent();\n    }\n\n    registerEvent() {\n        EventSystem.on(LIFE_CYCLE_BLOCK, this.onLifeCycleBlock, this);\n        EventSystem.on(LIFE_CYCLE_UNBLOCK, this.onLifeCycleUnBlock, this);\n    }\n\n    unregisterEvent() {\n        EventSystem.off(LIFE_CYCLE_BLOCK, this.onLifeCycleBlock, this);\n        EventSystem.off(LIFE_CYCLE_UNBLOCK, this.onLifeCycleUnBlock, this);\n    }\n\n    onChapterReady(){\n        EventSystem.emit(LIFE_CYCLE_READY);\n    }\n\n    // override\n    onLifeCycleBlock() {\n        \n    }\n    // override\n    onLifeCycleUnBlock() {\n\n    }\n\n    onChapterComplete() {\n        EventSystem.emit(LIFE_CYCLE_COMPLETE);\n    }\n\n    onDestroy() {\n        console.log(\"BaseChapterComponent onDestroy do sth\");\n        this.unregisterEvent();\n    }\n\n\n}\n","import { FOLLOW_CLIENT_TO_MODULE, FOLLOW_MODULE_TO_CLIENT, LIFE_CYCLE_READY } from \"../../kit/events/events\";\nimport EventSystem from \"../../kit/system/event/EventSystem\";\nimport gameTask from \"../gameTask/scripts/gameTask\";\nimport { GameTaskInitParam } from \"../structure/CompInterface\";\nimport BaseChapterComponent from \"./BaseChapterComponent\";\n\n/**\n * 课程游戏基类， 课程游戏的功能抽离\n */\nconst { ccclass } = cc._decorator;\n\n@ccclass\nexport default class ChapterGameComponent extends BaseChapterComponent {\n    // 评测参数\n    public recordData: any = null;\n\n    // 任务组件参数\n    public taskData: GameTaskInitParam = null;\n    public gameTaskCom: gameTask = null;\n\n    public override onLoad() {\n        super.onLoad();\n        cc.log(`ChapterGameComponent onLoad params: ${this.params}`)\n\n        this.initData();\n        this.initComponents();\n    }\n\n    /**\n     * 子游戏可以根据需求重载,修改参数\n     */\n    public initData() {\n        this.recordData = {\n            evaluatingType: 1,\n            evaluatingText: \"\",\n            tryTimes: 1,\n            evaluationScore: 30,\n            recordTime: 3,\n        };\n\n        // this.taskData = {\n        //     bundleName: 'SweepLeaves',\n        //     imgList: ['res/task1', 'res/task2']\n        // };\n    }\n\n    public override registerEvent() {\n        super.registerEvent()\n        EventSystem.on(FOLLOW_MODULE_TO_CLIENT, this.onRecordResult, this);\n    }\n\n    public override unregisterEvent() {\n        super.unregisterEvent()\n        EventSystem.off(FOLLOW_MODULE_TO_CLIENT, this.onRecordResult, this);\n    }\n    /**\n     * 组件加载完成\n     */\n    public componentsLoadComplete() {\n        cc.log(`components load complete`)\n        this.onChapterReady();\n    }\n    /**\n     * 子游戏可以根据需求重载\n     */\n    public initComponents() {\n        Promise.all([\n            this.initRecordAudioComp(),\n            this.initTaskComp(),\n        ]).then(() => {\n            this.componentsLoadComplete();\n        }).catch((error) => {\n            cc.warn(`initComponents error: ${error}`);\n        });\n    }\n\n    // 录音组件\n    /**\n     * https://pplingo.atlassian.net/wiki/spaces/ED/pages/246644739/APP\n     * @param recordData\n     * @returns\n     */\n    public initRecordAudioComp(): Promise<void> {\n        return new Promise<void>((resolve) => {\n            EventSystem.emit(FOLLOW_CLIENT_TO_MODULE, {\n                eventName: \"initComponent\",\n                extra: this.recordData,\n            });\n            resolve();\n        }).catch((error) => {\n            cc.warn(`initRecordAudioComp error: ${error}`);\n        });\n    }\n\n    // 任务组件\n    public initTaskComp(): Promise<void> {\n        return new Promise<void>((resolve, reject) => {\n            if (this.taskData) {\n                let bundle = cc.assetManager.getBundle(\"common\");\n                if (bundle) {\n                    bundle.load(\"gameTask/gameTask\", cc.Prefab, (error: Error, assets: cc.Prefab) => {\n                        let taskNode = cc.instantiate(assets);\n                        this.gameTaskCom = taskNode.getComponent(\"gameTask\");\n                        this.gameTaskCom && this.gameTaskCom.initData(this.taskData);\n                        taskNode.parent = this.node;\n                        resolve();\n                    });\n                } else {\n                    resolve();\n                }\n            } else {\n                resolve();\n            }\n\n        }).catch((error) => {\n            cc.warn(`initTaskComp error: ${error}`);\n        });\n    }\n\n\n    /**\n     * 开始录音\n     * https://pplingo.atlassian.net/wiki/spaces/ED/pages/246644739/APP\n     * @param evaluatingText 评测关键词\n     * @param bundleName\n     * @param audioUrl 音频路径\n     * @param iconPath 单词卡路径\n     * @returns\n     */\n    public startRecordAudio(evaluatingText: string, bundleName?: string, audioUrl?: string, iconPath?: string, recordType?: string) {\n        EventSystem.emit(FOLLOW_CLIENT_TO_MODULE, { eventName: \"startRecord\", extra: { evaluatingText, bundleName, audioUrl, iconPath, recordType } }); // 开始录音\n    }\n\n\n    /**\n     * 评测完成回调\n     * https://pplingo.atlassian.net/wiki/spaces/ED/pages/246644739/APP\n     * @param result\n     * RecordCallBack {\n        ReadyRecordCb = 'ReadyRecordCb', // 准备录音回调\n        StartRecordCb = 'StartRecordCb', // 开始录音回调\n        StopRecordCb = 'StopRecordCb', // 停止录音回调\n        ResultCb = 'ResultCb', // 评测结果回调\n        AudioFinishPlaying = \"AudioFinishPlaying\" // 录音播放完成\n        }\n     */\n    public onRecordResult(result) {\n        cc.log(` recordResult result.data: ${result.data}`);\n\n    }\n\n    /**\n     * 上报完成一轮游戏(每轮都报)\n     * @param index 第几轮\n     * @param isSuccess 是否成功完成\n     */\n    public reportRoundCompleted(index, isSuccess) {\n        cc.log(`report round data  index: ${index}  isSuccess: ${isSuccess}`);\n    }   \n\n    /**\n     * 游戏结局\n     * @param isSuccess 是否通过\n     */\n    public onGameEnd(isSuccess:boolean = true) {\n        cc.log(\" onGameEnd ~~\");\n    }\n    public override onDestroy() {\n        super.onDestroy();\n    }\n}\n","/**\n *  模板游戏state 类型\n */\nexport enum RoundStateType {\n    None = -1,\n    RoundOpenAniStart = 0,      // 开场动画开始\n    RoundOpenAniComplete,       // 开场动画播完\n    RoundStart,             // 环节开始\n    RoundProceeding,        // 环节进行中，多选，拼图之类的同步进度信息\n    RoundComplete,          // 环节完成\n    RoundEndAniStart,       // 完成动画开始播放\n    RoundEndAniComplete,    // 完成动画播放结束\n}","const { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class Hand extends cc.Component {\n\n    @property({ type: sp.Skeleton, displayName: '手动画' })\n    public sp: sp.Skeleton = null\n\n    @property({ type: cc.Node, displayName: '手' })\n    public cursor: cc.Node = null\n\n    @property({ type: cc.Node, displayName: 'Mask' })\n    public mask: cc.Node = null\n\n    @property({ type: cc.Node, displayName: 'Bg' })\n    public bg: cc.Node = null\n\n    /**\n     * 回调事件\n     */\n    public onCompleted: () => void = null\n\n    public onLoad() {\n        this.sp.setCompleteListener(() => {\n            if (this.onCompleted) {\n                const cb = this.onCompleted\n                cb()\n            }\n        })\n    }\n\n    /**\n     * 播放点击\n     */\n    public playClick() {\n        this.fadeIn()\n        this.node.active = true\n        this.cursor.angle = 0\n        this.sp.setAnimation(0, 'dian', false)\n    }\n\n    private fadeIn() {\n        let fade = cc.fadeIn(this.move_duration).easing(cc.easeSineOut())\n        this.bg.runAction(fade)\n    }\n\n    /**\n     * 左滑\n     */\n    public playSwipeLeft() {\n        this.playSwipeByAngle(0, 'you-zuo', false)\n    }\n\n    /**\n     * 右滑\n     */\n    public playSwipeRight() {\n        this.playSwipeByAngle(0, 'zuo-you', false)\n    }\n\n    /**\n     * 下滑\n     */\n    public playSwipeUp() {\n        this.playSwipeByAngle(90, 'zuo-you', false)\n    }\n\n    /**\n     * 上滑\n     */\n    public playSwipeDown() {\n        this.playSwipeByAngle(90, 'you-zuo', false)\n    }\n\n    /**\n     * 按下\n     */\n    public playDown(callback?: Function): void {\n        this.playSwipeByAngle(0, 'changdian', false);\n        if (callback) {\n            this.sp.setCompleteListener(callback);\n        }\n    }\n\n    /**\n     * 按下\n     */\n    public playUp(callback?: Function): void {\n        this.playSwipeByAngle(0, 'changdian-2', false);\n        this.sp.setCompleteListener(() => {\n            // this.sp.node.active = false;\n            if (callback) {\n                callback();\n            }\n        });\n    }\n\n\n    /**\n     * 任意角度滑动\n     */\n    public playSwipeByAngle(angle, name, loop) {\n        this.fadeIn()\n        this.node.active = true\n        this.cursor.angle = angle\n        this.sp.setAnimation(0, name, loop)\n    }\n\n    public move_duration = 0.4\n    /**\n     * 隐藏\n     */\n    public hide() {\n        // this.target = null\n        // let fade = cc.fadeOut(this.move_duration).easing(cc.easeSineOut())\n        // this.bg.runAction(fade)\n        this.node.active = false\n        this.sp.animation = \"\";\n    }\n\n    get isShowing() {\n        return this.node.active\n    }\n\n    /**\n     * 设置目标区域\n     * @param x\n     * @param y\n     * @param w\n     * @param h\n     */\n    public setTargetBound(x: number, y: number, w: number, h: number) {\n        this.mask.width = w\n        this.mask.height = h\n        this.mask.x = x\n        this.mask.y = y\n        // bg坐标\n        const screenSize = cc.Canvas.instance.designResolution\n        this.bg.width = screenSize.width\n        this.bg.height = screenSize.height\n        this.bg.x = -this.mask.x\n        this.bg.y = -this.mask.y\n        this.cursor.x = this.mask.x\n        this.cursor.y = this.mask.y\n    }\n\n    /**\n     * 设置目标区域\n     * @param target\n     * @param parent\n     * @param expand 扩边\n     */\n    public setTargetNode(target: cc.Node, parent: cc.Node, expand: number = 0) {\n        if (target == null) {\n            return\n        }\n        let worldPos = target.convertToWorldSpaceAR(cc.Vec2.ZERO)\n        this.mask.width = target.width;\n        this.mask.height = target.height;\n        let localPos = parent.convertToNodeSpaceAR(worldPos)\n        this.setTargetBound(localPos.x, localPos.y, target.width + expand, target.height + expand)\n    }\n\n}\n","import SpriteAssembler from \"./SpriteAssembler\";\n\nconst {ccclass, property} = cc._decorator;\n\n@ccclass\nexport default class LSprite extends cc.Sprite {\n\n    @property({type: [cc.Color], displayName: \"顶点颜色\", tooltip: \"左下->右下->左上->右上\"})\n    colorList: cc.Color[] = [];\n\n    flushProperties() {\n        // //@ts-ignore\n        // let assembler: MovingBGAssembler = this._assembler;\n        // if (!assembler)\n        //     return;\n        // this.setVertsDirty();\n    }\n\n    _resetAssembler() {\n        this.setVertsDirty();\n        let assembler = this._assembler = new SpriteAssembler();\n        assembler.colorList = this.colorList;\n        this.flushProperties();\n\n        assembler.init(this);\n\n        // @ts-ignore\n        this._updateColor(); // may no need\n    }\n\n}","import ChapterGameComponent from \"../../scripts/ChapterGameComponent\";\n\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class RollerAnimation extends ChapterGameComponent {\n  @property(cc.Node)\n  farNode: cc.Node = null;\n\n  @property(cc.Node)\n  middleNode: cc.Node = null;\n\n  @property(cc.Node)\n  nearNode: cc.Node = null;\n\n  @property({\n    displayName: \"远景速度\",\n    tooltip: \"如果要从左往右请填写负数\",\n  })\n  public farSpeed: number = 100;\n\n  @property({\n    displayName: \"中景速度\",\n    tooltip: \"如果要从左往右请填写负数\",\n  })\n  public middleSpeed: number = 200;\n\n  @property({\n    displayName: \"近景速度\",\n    tooltip: \"如果要从左往右请填写负数\",\n  })\n  public nearSpeed: number = 300;\n\n  @property({\n    displayName: \"横向移动\",\n    tooltip: \"默认从右往左\",\n  })\n  public isHorizontal: boolean = true;\n\n  /** 是否停止移动 */\n  public isStopMove: boolean = false;\n\n  onLoad() {\n    super.onLoad();\n  }\n\n  start() {}\n\n  public initData() {}\n\n  /** 暂停物体移动 */\n  public stopMove() {\n    this.isStopMove = true;\n  }\n\n  /** 恢复物体移动 */\n  public resumeMove() {\n    this.isStopMove = false;\n  }\n\n  public setFarSpeed(speed) {\n    this.farSpeed = speed;\n  }\n\n  public getFarSpeed() {\n    return this.farSpeed;\n  }\n\n  public setMiddleSpeed(speed) {\n    this.middleSpeed = speed;\n  }\n\n  public getMiddleSpeed() {\n    return this.middleSpeed;\n  }\n\n  public setNearSpeed(speed) {\n    this.nearSpeed = speed;\n  }\n\n  public getNearSpeed() {\n    return this.nearSpeed;\n  }\n\n  onDestroy() {\n    super.onDestroy();\n  }\n\n  /**\n   *\n   * @param FSpeed 远景速度\n   * @param MSpeed 中景速度\n   * @param NSpeed 近景速度\n   * @returns\n   */\n  public changeSpeedMove(FSpeed: number, MSpeed: number, NSpeed: number) {\n    if (this.farNode.childrenCount > 0) {\n      this.farNode.children.forEach((v) => {\n        if (this.isHorizontal) {\n          v.x -= FSpeed;\n        } else {\n          v.y -= FSpeed;\n        }\n        this.checkNode(v, FSpeed);\n      });\n    }\n\n    if (this.nearNode.childrenCount > 0) {\n      this.nearNode.children.forEach((v) => {\n        if (this.isHorizontal) {\n          v.x -= NSpeed;\n        } else {\n          v.y -= NSpeed;\n        }\n        this.checkNode(v, NSpeed);\n      });\n    }\n\n    if (this.middleNode.childrenCount > 0) {\n      this.middleNode.children.forEach((v) => {\n        if (this.isHorizontal) {\n          v.x -= MSpeed;\n        } else {\n          v.y -= MSpeed;\n        }\n        this.checkNode(v, MSpeed);\n      });\n    }\n  }\n\n  private checkNode(node: cc.Node, dir: number) {\n    let w = cc.view.getFrameSize().width + node.width / 2;\n    let h = cc.view.getFrameSize().height + node.height / 2;\n    if (this.isHorizontal) {\n      if (dir >= 0) {\n        //  从右往左  <------\n        if (node.x < -w) {\n          node.x = w;\n        }\n      } else {\n        // 从左往右 ------>\n        if (node.x > w) {\n          node.x = -w;\n        }\n      }\n    } else {\n      if (dir >= 0) {\n        //  从上往下\n        if (node.y < -h) {\n          node.y = h;\n        }\n      } else {\n        // 从下往上\n        if (node.y > h) {\n          node.y = -h;\n        }\n      }\n    }\n  }\n\n  update(dt) {\n    if (this.isStopMove) return;\n    let farSpeed = dt * this.farSpeed;\n    let middleSpeed = dt * this.middleSpeed;\n    let nearSpeed = dt * this.nearSpeed;\n    this.changeSpeedMove(farSpeed, middleSpeed, nearSpeed);\n  }\n}\n","/**\n * spine 动画播放\n */\n\nimport TimerSystem from \"../../kit/system/timer/TimerSystem\";\nimport { AnimationConfig } from \"../structure/CompInterface\";\n\nexport class SpineUtils {\n\n    /**\n     * 播放一个动作\n     * @param sp spine 组件\n     * @param info 播放参数\n     * @returns \n     */\n    static playSpineAsync(sp: sp.Skeleton, info: AnimationConfig) {\n        return new Promise((resolve, reject) => {\n            if (info.loop) {\n                sp.setAnimation(0, info.name, true);\n                TimerSystem.instance.doOnce(info.duration*1000 || 0, () => {\n                    if (cc.isValid(sp.node)) {\n                        resolve(true)\n                    }else{\n                        cc.warn(`sp.node  is valid false! animation name ${info.name}`);\n                        resolve(false)\n                    }\n                });\n            } else {\n                let te = sp.setAnimation(0, info.name, false);\n                if (!te) {\n                    resolve(true);\n                    return;\n                };\n                sp.setTrackCompleteListener(te, () => {\n                    resolve(true);\n                });\n            }\n\n        })\n    }\n\n    /**\n     * 根据配置播放动画\n     * @param sp spine 组件\n     * @param config AnimationConfig[]\n     */\n    static async playSpineAniByConfig(sp: sp.Skeleton, config: AnimationConfig[]) {\n        for (let index = 0; index < config.length; index++) {\n            const info = config[index];\n            info.func && info.func();\n            await SpineUtils.playSpineAsync(sp,info);\n        }\n\n    }\n\n    /**\n     * 播放spine\n     * @param spinCmpt 组件\n     * @param animName 动画名称\n     * @param loop 是否循环\n     * @param finishCb 第一个动画完成回调\n     * @param finishCount 第一个动画播放次数\n     * @param nextName 下一个动画名称\n     * @param nextLoop 循环\n     * @returns \n     */\n    public static playSpine (spinCmpt: sp.Skeleton, animName: string, loop: boolean, finishCb?: () => void, finishCount: number = 1, nextName?: string, nextLoop?: boolean) {\n        if (!spinCmpt) {\n            cc.warn(`playSpine:${animName}, sp.Skeleton null`);\n            return;\n        }\n        if (animName == '') {\n            cc.warn(`playSpine:${animName}`);\n            return;\n        }\n        spinCmpt.node.active = true;\n        spinCmpt.setAnimation(0, animName, loop);\n        spinCmpt.setCompleteListener(null);\n        \n        if (finishCb) {\n            let count = 0;\n            spinCmpt.setCompleteListener(() => {\n                if (spinCmpt.animation == animName) {\n                    count ++\n                    if (count >= finishCount) {\n                        finishCb();\n                        if (nextName && nextName != \"\") {\n                            spinCmpt.setAnimation(0, nextName, nextLoop);\n                        }\n                        spinCmpt.setCompleteListener(null);\n                    }\n                }\n            })\n            return;\n        }\n\n        if (nextName && nextName != \"\") {\n            spinCmpt.addAnimation(0, nextName, nextLoop);\n        }\n    }\n    \n}\n","import Assembler2D from \"./Assembler2D\";\n\nexport default class SpriteAssembler extends Assembler2D {\n\n    private _whiteColor: number = 4294967295;\n    private _colorList: number[] = [];\n\n    public set colorList(val: cc.Color[]) {\n        let newColorList = [];\n        for(let i = 0; i < val.length; i++) {\n            let v = 0;\n            let color = val[i] as any;\n            newColorList[i] = color._val;\n        }\n        this._colorList = newColorList;\n    }\n\n    updateRenderData(sprite: cc.Sprite) {\n        this.packToDynamicAtlas(sprite, sprite._spriteFrame);\n        super.updateRenderData(sprite);\n    }\n\n    updateUVs(sprite: any) {\n        let uv = sprite._spriteFrame.uv;\n        // console.log(\"xxxx\", uv);\n        // uv = [0,1,      2,2,    0,0,        2,0];\n        let uvOffset = this.uvOffset;\n        let floatsPerVert = this.floatsPerVert;\n        let verts = this._renderData.vDatas[0];\n        for (let i = 0; i < 4; i++) {\n            let srcOffset = i * 2;\n            let dstOffset = floatsPerVert * i + uvOffset;\n            verts[dstOffset] = uv[srcOffset];\n            verts[dstOffset + 1] = uv[srcOffset + 1];\n        }\n    }\n\n    updateVerts(sprite: any) {\n        let node = sprite.node,\n            cw = node.width, ch = node.height,\n            appx = node.anchorX * cw, appy = node.anchorY * ch,\n            l, b, r, t;\n        if (sprite.trim) {\n            l = -appx;\n            b = -appy;\n            r = cw - appx;\n            t = ch - appy;\n        }\n        else {\n            let frame = sprite.spriteFrame,\n                ow = frame._originalSize.width, oh = frame._originalSize.height,\n                rw = frame._rect.width, rh = frame._rect.height,\n                offset = frame._offset,\n                scaleX = cw / ow, scaleY = ch / oh;\n            let trimLeft = offset.x + (ow - rw) / 2;\n            let trimRight = offset.x - (ow - rw) / 2;\n            let trimBottom = offset.y + (oh - rh) / 2;\n            let trimTop = offset.y - (oh - rh) / 2;\n            l = trimLeft * scaleX - appx;\n            b = trimBottom * scaleY - appy;\n            r = cw + trimRight * scaleX - appx;\n            t = ch + trimTop * scaleY - appy;\n        }\n\n        let local = this._local;\n        local[0] = l;\n        local[1] = b;\n        local[2] = r;\n        local[3] = t;\n        this.updateWorldVerts(sprite);\n    }\n\n    updateColor(comp: any, color: any) {\n        let uintVerts = this._renderData.uintVDatas[0];\n        if(!uintVerts) return;\n        color = color != null ? color : comp.node.color._val;\n        let floatsPerVert = this.floatsPerVert;\n        let colorOffset = this.colorOffset;\n        let d = 0;\n\n        for(let i = colorOffset, len = uintVerts.length; i < len; i += floatsPerVert) {\n            color = this._colorList[d];\n            !color ? color = this._whiteColor : null;\n            uintVerts[i] = color;\n            d++;\n        }\n    }\n}","// Learn TypeScript:\n//  - https://docs.cocos.com/creator/manual/en/scripting/typescript.html\n// Learn Attribute:\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\n\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class TaskBoard extends cc.Component {\n    private contents: cc.Prefab[] = []\n    private contentNodes: cc.Node[] = []\n    /**\n     * 完成图标\n     */\n    @property({ type: sp.Skeleton, displayName: '任务完成' })\n    finishIcon: sp.Skeleton = null\n\n\n    /**\n     * 面板位置\n     */\n    @property({ type: [cc.Node], displayName: '面板位置' })\n    poses: cc.Node[] = []\n\n    /**\n     * 移动完毕:isShowing是否显示状态\n     */\n    // onMoveEnded: (isShowing: boolean) => void = null\n\n    private move_duration = 0.4\n\n    /**\n     * 当前页\n     */\n    private currPage = 0\n\n    isShowing: boolean = false\n\n    /**\n     * 面板\n     */\n    @property({ type: cc.Node, displayName: '面板' })\n    panel: cc.Node = null\n\n    /**\n     * mask\n     */\n    @property({ type: cc.Node, displayName: 'mask' })\n    mask: cc.Node = null\n\n    /**\n     * 内容区域\n     */\n    @property({ type: cc.Node, displayName: '内容区域' })\n    safearea: cc.Node = null\n\n    onLoad() {\n        this.node.on(cc.Node.EventType.TOUCH_START, this.onTouchBegan, this)\n        this.node.on(cc.Node.EventType.TOUCH_END, this.onTouchEnd, this)\n        this.node.on(cc.Node.EventType.TOUCH_CANCEL, this.onTouchEnd, this)\n        let sw = cc.Canvas.instance.designResolution\n        this.poses[0].x = sw.width / 2 - 220\n        this.poses[0].y = -sw.height / 2\n        this.poses[1].x = sw.width / 2 + 220\n        this.poses[1].y = -sw.height / 2\n        this.panel.x = this.poses[1].x\n        this.panel.y = this.poses[1].y\n    }\n\n    start() {\n\n    }\n\n    // update (dt) {}\n\n    /**\n     * 显示\n     * @param pageIndex 页码，默认:0\n     */\n    show(pageIndex: number,onMoveEnded:Function = null) {\n        this.finishIcon.node.active = false\n        this.node.active = true\n        if (this.contents.length > 0) {\n            let pre = this.contents[pageIndex]\n            let ch = cc.instantiate(pre)\n            ch.active = true\n            this.safearea.addChild(ch)\n            ch.x = 0\n            ch.y = 0\n        } else {\n            if (this.contentNodes.length > 0) {\n                let pre = this.contentNodes[pageIndex]\n                let ch = cc.instantiate(pre)\n                ch.active = true\n                this.safearea.addChild(ch)\n                ch.x = 0\n                ch.y = 0\n            }\n        }\n        this.panel.active = true\n        let fade = cc.fadeIn(this.move_duration).easing(cc.easeSineOut())\n        this.mask.runAction(fade)\n        this.moveTo(this.poses[0], this.move_duration, () => {\n            this.isShowing = true\n            if (onMoveEnded) {\n                onMoveEnded(this.isShowing)\n            }\n        })\n    }\n\n    onClosed:Function = null\n\n    /**\n     * 收起\n     */\n    hide(onMoveEnded:Function = null) {\n        let fade = cc.fadeOut(this.move_duration).easing(cc.easeSineOut())\n        this.mask.runAction(fade)\n        this.moveTo(this.poses[1], this.move_duration, () => {\n            this.isShowing = false\n            this.node.active = false\n            this.panel.active = false\n            if (this.safearea.children.length > 0) {\n                let ch = this.safearea.children[0]\n                ch.removeFromParent()\n                ch.destroy()\n            }\n            this.hideFinishIcon()\n            if (onMoveEnded) {\n                onMoveEnded(this.isShowing)\n            }\n            if(this.onClosed){\n                let oc = this.onClosed\n                oc()\n            }\n        })\n    }\n\n    /**\n     * 内容可设置prefab也可设置node,内容区大小为330x340px\n     * @param prefabs \n     */\n    setPrefabs(prefabs: cc.Prefab[]) {\n        this.contents = prefabs\n    }\n\n    /**\n     * 内容可设置prefab也可设置node,内容区大小为330x340px\n     * @param nodes \n     */\n    setNodes(nodes: cc.Node[]) {\n        this.contentNodes = nodes\n    }\n\n    /**\n     * 播放完成盖章动画\n     */\n    playFinished() {\n        this.finishIcon.node.active = true\n        this.finishIcon.setAnimation(0, 'gaizhang', false)\n    }\n\n    hideFinishIcon() {\n        this.finishIcon.node.active = false\n        // this.finishIcon.setAnimation(0, '', false)\n    }\n\n    onClick() {\n        // if (this.isShowing) {\n        //     this.hide()\n        // } else {\n        //     this.show()\n        // }\n\n    }\n\n    private flag_block = false\n\n    /**\n    * 飘动到\n    * @param pos \n    */\n    moveTo(pos: cc.Node, duration = 1, callback: () => void = () => void {}) {\n        this.flag_block = true\n        let mov = cc.moveTo(duration, pos.x, pos.y).easing(cc.easeBackOut())\n        let seq = cc.sequence(mov, cc.callFunc(() => {\n            this.flag_block = false\n            callback()\n        }))\n        this.panel.runAction(seq)\n    }\n\n    private initPos: cc.Vec2 = cc.Vec2.ZERO\n    private currPos: cc.Vec2 = cc.Vec2.ZERO\n\n    private onTouchBegan(event: cc.Event.EventTouch) {\n        console.log('onTouchBegan >>>>>>>>>>>>')\n        this.currPos.x = event.getLocationX()\n        this.currPos.y = event.getLocationY()\n        this.initPos.x = event.getLocationX()\n        this.initPos.y = event.getLocationY()\n    }\n\n    private onTouchEnd(event: cc.Event.EventTouch) {\n        console.log('onTouchEnd >>>>>>>>>>>>')\n        // console.log(`touch x: ${event.getLocationX()} y: ${event.getLocationY()}`)\n        let currX = event.getLocationX()\n        let currY = event.getLocationY()\n\n        let dis = Math.sqrt((currX - this.initPos.x) * (currX - this.initPos.x) + (currY - this.initPos.y) * (currY - this.initPos.y))\n        if (dis < 20) {\n            //收起\n            this.hide()\n        }\n    }\n\n\n}\n","import AudioManager from \"../../../kit/system/audio/AudioManager\";\nimport { GameTaskInitParam, GameTaskShowParam } from \"../../structure/CompInterface\";\n\n/**\n * 课程游戏侧边任务\n * 使用：子类重载ChapterGameComponent的initData，并给taskData赋值，然后通过 gameTaskCom\n * 调用接口\n    let showParams: GameTaskShowParam = {\n        taskIndex:1,\n        complete:false,\n        callFunc1:()=>{\n        },\n        callFunc2: () => {\n        },\n        callFunc3: () => {\n        },\n    }\n    this.showTaskList(showParams);\n */\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class gameTask extends cc.Component {\n\n    @property(cc.Widget)\n    public nodeWidget: cc.Widget = null;\n\n    @property(cc.Node)\n    public topBtn: cc.Node = null;\n\n    private moveLen = 400; // 任务栏移动距离\n    public taskHideTime = 4; // 任务栏隐藏倒计时\n    private moveTime = 0.5; // 任务栏移动时间\n\n    public taskData: GameTaskInitParam = null;\n    public params: any;\n\n    public initData(taskData) {\n        this.taskData = taskData;\n    }\n    public onLoad() {\n        this.node.active = false;\n        this.topBtn.active = false;\n        this.updateTaskPos();\n        // let showParams: GameTaskShowParam = {\n        //     taskIndex:1,\n        //     complete:false,\n        //     callFunc1:()=>{\n        //     },\n        //     callFunc2: () => {\n        //     },\n        //     callFunc3: () => {\n        //     },\n        // }\n        // this.showTaskList(showParams);\n\n        // this.scheduleOnce(()=>{\n        //     showParams.taskIndex = 0;\n        //     showParams.complete = true;\n        //     this.showTaskList(showParams);\n        // }, 8);\n\n        // this.scheduleOnce(() => {\n        //     showParams.taskIndex = 1;\n        //     showParams.complete = true;\n        //     this.showTaskList(showParams);\n        // }, 16);\n    }\n\n    private updateTaskPos() {\n        this.nodeWidget.right = -this.node.width;\n        this.nodeWidget.updateAlignment();\n    }\n\n    /** 显示任务栏 */\n    public async showTaskList(params: GameTaskShowParam) {\n        if (!params || (params.taskIndex == undefined)) {\n            cc.error(`show task params error! params:${JSON.stringify(params)}`);\n            return\n        }\n        let taskIndex = params.taskIndex;\n        let complete = params.complete;\n        if (taskIndex >= this.taskData.imgList.length) {\n            cc.error(`task index error!`)\n            return\n        }\n        await this.updateTaskImg(taskIndex);\n        this.moveAni(params, () => {\n            this.showSealSpine(complete);\n        });\n    }\n\n    private updateTaskImg(taskIndex) {\n        return new Promise<void>((resolve, reject) => {\n            let bundle = cc.assetManager.getBundle(this.taskData.bundleName);\n            if (bundle) {\n                bundle.load(this.taskData.imgList[taskIndex], cc.SpriteFrame, (err: Error, asset: cc.SpriteFrame) => {\n                    this.node.getChildByName('task').getComponent(cc.Sprite).spriteFrame = asset;\n                    this.node.active = true;\n                    resolve();\n                });\n            }\n        });\n    }\n\n    private showSealSpine(complete) {\n        if (!complete) {\n            return\n        }\n        let sealNode = this.node.getChildByName(\"sealNode\");\n        sealNode.active = true;\n        let sk = sealNode.getComponent(sp.Skeleton);\n        let en: sp.spine.TrackEntry = sk.setAnimation(0, \"gaizhang\", false);\n        sk.setTrackCompleteListener(en, () => {\n            AudioManager.playEffect(\"common\", `gameTask/audio/SE_luoyefense_03`);\n            AudioManager.playEffect(\"common\", `gameTask/audio/6_congratulations`);\n        });\n    }\n\n    private moveAni(params, callFuc) {\n        this.params = params;\n        cc.tween(this.node)\n            .by(this.moveTime, { x: -this.moveLen })\n            .call(() => {\n                params.callFunc1 && params.callFunc1();\n                callFuc && callFuc();\n                this.topBtn.active = true;\n\n            })\n            .delay(this.taskHideTime)\n            .call(() => {\n                params.callFunc2 && params.callFunc2();\n                this.topBtn.active = false;\n            })\n            .by(this.moveTime, { x: this.moveLen })\n            .call(() => {\n                params.callFunc3 && params.callFunc3();\n                let sealNode = this.node.getChildByName(\"sealNode\");\n                sealNode.active = false;\n            })\n            .start();\n    }\n\n    public onTopBtnClicked(event) {\n        cc.Tween.stopAllByTarget(this.node);\n        cc.tween(this.node)\n            .by(this.moveTime, { x: this.moveLen })\n            .call(() => {\n                this.params && this.params.callFunc3 && this.params.callFunc3();\n                let sealNode = this.node.getChildByName(\"sealNode\");\n                sealNode.active = false;\n            })\n            .start();\n\n        // btn\n        this.topBtn.active = false;\n        // call fun\n        this.params && this.params.callFunc2 && this.params.callFunc2();\n    }\n\n}\n\n\n","import ResourcesManager, { ResourceType } from \"../../kit/manager/ResourcesManager\"\n\nexport class lessonUtil {\n\n    /* 正确反馈动画 */\n    static getRightFeedBackAni(): Promise<cc.Node> {\n        return new Promise<cc.Node>((res, rej) => {\n            ResourcesManager.instance.loadRes(\"common\", `feedBack/right`, ResourceType.Normal, cc.Prefab, (e, pre) => {\n                if (pre) {\n                    let node = cc.instantiate(pre)\n                    let ske = node.getComponent(sp.Skeleton)\n                    ske.setCompleteListener(()=> node.destroy())\n                    res(node)\n                } else {\n                    console.log(e)\n                    rej()\n                }\n            })\n        })\n    }\n\n    /* 错误反馈动画 */\n    static getErrorFeedBackAni(): Promise<cc.Node> {\n        return new Promise<cc.Node>((res, rej) => {\n            ResourcesManager.instance.loadRes(\"common\", `feedBack/error`, ResourceType.Normal, cc.Prefab, (e, pre) => {\n                if (pre) {\n                    let node = cc.instantiate(pre)\n                    let ske = node.getComponent(sp.Skeleton)\n                    ske.setCompleteListener(()=> node.destroy())\n                    res(node)\n                } else {\n                    console.log(e)\n                    rej()\n                }\n            })\n        })\n    }\n}","\nconst {ccclass, property} = cc._decorator;\nenum Mtype {\n    VERTICAL_P,\n    VERTICAL_N, \n    HORIZONTAL_P,\n    HORIZONTAL_N,\n  }\n@ccclass\nexport default class NewClass extends cc.Component {\n\n    @property({type:cc.Node,tooltip:\"当前屏的背景节点\"})\n    lubg1:cc.Node = null;\n\n    @property({type:cc.Node,tooltip:\"下一屏的背景节点\"})\n    lubg2:cc.Node = null;\n\n    @property({\n        type:cc.Integer,\n        tooltip:\"循环速度\",\n        min:0,\n        max:1000,\n        step:50,\n        slide:true,\n    })\n    speed = 200;\n\n    @property({ type: cc.Enum(Mtype),tooltip:\"VERTICAL_P:垂直向下滚动  VERTICAL_N:垂直向上滚动 HORIZONTAL_P:水平向左滚动 HORIZONTAL_N:水平向右滚动\" })\n    mtype: Mtype = Mtype.VERTICAL_P;\n\n    isRunmap = false;//滚动开关\n    cur_lubg:cc.Node = null;\n    luOffset = 0;\n    // onLoad () {}\n\n    start () {\n        this.cur_lubg = this.lubg1;\n        this.setbgfix();\n        this.isRunmap = true;\n    }\n\n    setbgfix(){\n        let frameSize: cc.Size = cc.view.getFrameSize()\n        let designResolution: cc.Size = cc.Canvas.instance.designResolution\n        let designSize: cc.Size = cc.size(designResolution.width, designResolution.height)\n        let frameAspectRatio: number = frameSize.width / frameSize.height\n        let screenSize: cc.Size = { ...designSize } as cc.Size\n\n        let ratio: number = this.node.width / this.node.height\n        if (ratio > frameAspectRatio) {\n            let width = this.node.width * screenSize.height / this.node.height\n            this.lubg1.width = width\n            this.lubg1.height = screenSize.height\n            this.lubg2.width = width\n            this.lubg2.height = screenSize.height\n            switch (this.mtype) {\n                case Mtype.VERTICAL_P:\n                    this.lubg2.y = screenSize.height;\n                    this.luOffset = screenSize.height;\n                    break;\n                case Mtype.VERTICAL_N:\n                    this.lubg2.y = -screenSize.height;\n                    this.luOffset = screenSize.height;\n                    break;\n                case Mtype.HORIZONTAL_P:\n                    this.lubg2.x = width;\n                    this.luOffset = width;\n                    break;\n                case Mtype.HORIZONTAL_N:\n                    this.lubg2.x = -width;\n                    this.luOffset = width;\n                    break;\n                default:\n                    break;\n            }\n        } else {\n            let height = this.node.height * screenSize.width / this.node.width\n            this.lubg1.width = screenSize.width\n            this.lubg1.height = height\n            this.lubg2.width = screenSize.width\n            this.lubg2.height = height\n            switch (this.mtype) {\n                case Mtype.VERTICAL_P:\n                    this.lubg2.y = height;\n                    this.luOffset = height;\n                    break;\n                case Mtype.VERTICAL_N:\n                    this.lubg2.y = -height;\n                    this.luOffset = height;\n                    break;\n                case Mtype.HORIZONTAL_P:\n                    this.lubg2.x = screenSize.width;\n                    this.luOffset = screenSize.width;\n                    break;\n                case Mtype.HORIZONTAL_N:\n                    this.lubg2.x = -screenSize.width;\n                    this.luOffset = screenSize.width;\n                    break;\n                default:\n                    break;\n            }\n        }\n    }\n\n    runlubg(dt){\n        var s = dt * this.speed;\n        \n        switch (this.mtype) {\n            case Mtype.VERTICAL_P:\n                this.lubg1.y -= s;\n                this.lubg2.y -= s;\n                if (this.cur_lubg.y <= -this.luOffset) {\n                    if(this.cur_lubg == this.lubg2) {\n                        this.lubg2.y = this.lubg1.y + this.luOffset;\n                        this.cur_lubg = this.lubg1;\n                    }\n                    else {\n                        this.lubg1.y = this.lubg2.y + this.luOffset;\n                        this.cur_lubg = this.lubg2;\n                    }\n                }\n                break;\n            case Mtype.VERTICAL_N:\n                this.lubg1.y += s;\n                this.lubg2.y += s;\n                if (this.cur_lubg.y >= this.luOffset) {\n                    if(this.cur_lubg == this.lubg2) {\n                        this.lubg2.y = this.lubg1.y - this.luOffset;\n                        this.cur_lubg = this.lubg1;\n                    }\n                    else {\n                        this.lubg1.y = this.lubg2.y - this.luOffset;\n                        this.cur_lubg = this.lubg2;\n                    }\n                }\n                break;\n            case Mtype.HORIZONTAL_P:\n                this.lubg1.x -= s;\n                this.lubg2.x -= s;\n                if (this.cur_lubg.x <= -this.luOffset) {\n                    if(this.cur_lubg == this.lubg2) {\n                        this.lubg2.x = this.lubg1.x + this.luOffset;\n                        this.cur_lubg = this.lubg1;\n                    }\n                    else {\n                        this.lubg1.x = this.lubg2.x + this.luOffset;\n                        this.cur_lubg = this.lubg2;\n                    }\n                }\n                break;\n            case Mtype.HORIZONTAL_N:\n                this.lubg1.x += s;\n                this.lubg2.x += s;\n                if (this.cur_lubg.x >= this.luOffset) {\n                    if(this.cur_lubg == this.lubg2) {\n                        this.lubg2.x = this.lubg1.x - this.luOffset;\n                        this.cur_lubg = this.lubg1;\n                    }\n                    else {\n                        this.lubg1.x = this.lubg2.x - this.luOffset;\n                        this.cur_lubg = this.lubg2;\n                    }\n                }\n                break;\n            default:\n                break;\n        }\n        \n    }\n    \n    update (dt) {\n        if (this.isRunmap) {\n            this.runlubg(dt);\n        }\n    }\n}\n"],"file":"index.js"}