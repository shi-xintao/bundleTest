{"version":3,"sources":["assets/bundles_en/Float/src/DragableLetter.ts","assets/bundles_en/Float/src/DroppableLetter.ts","assets/bundles_en/Float/src/FloatMain.ts","assets/bundles_en/Float/src/FloatUtil.ts","assets/bundles_en/Float/src/Unit.ts"],"names":["DroppableLetter_1","require","FloatMain_1","FloatUtil_1","_a","cc","_decorator","ccclass","property","DragableLetter","_super","__extends","_this","apply","this","arguments","initPos","Vec2","ZERO","currPos","dropArea","letter","freezed","lastPos","prototype","onLoad","node","on","Node","EventType","TOUCH_START","onTouchBegan","TOUCH_MOVE","onTouchMove","TOUCH_END","onTouchEnd","TOUCH_CANCEL","push","find","parent","getComponent","default","Label","string","event","instance","canDrag","dragged","hand","hide","x","y","deltaX","getDeltaX","deltaY","getDeltaY","currX","getLocationX","currY","getLocationY","i","length","element","pos","convertToNodeSpace","box","getBoundingBox","contains","playVoice","put","wrongNum","shakeBtnByNode","sent","goBack","Promise","resolve","tween","to","call","start","poses","v2","__decorate","Component","exports","Tigo_1","DroppableLetter","usages","other","moveTo","isCompleted","pp","currResolve","cb","console","log","stars","inst","total_star","callAppToCollect","gid","sleep","coin_board","setCoinAni","isFull","ret","reset","DragableLetter_1","Unit_1","GameData_1","recordAin_1","notifierCenter_1","AudioManager_1","HandEn_1","coinBoard_1","Float","map","board","highlight","btn_c","btn_d","boat","black_mask","trumpet","tip","tigoInMap","tigoInBoat","tigoOnSnail","monster1","monster2","monster3","snail","box1","tigo","boardPosY","screenSize","screenRealSize","screenScaledSize","isDev","currStage","big_letter","mapRight","mapLeft","barLeft","barRight","bgLeft","bgRight","cursor","farBg","currMapScale","ui","mic","reward","coin","currTime","currBigLetterDestPos","isBoardShowing","currAnswer","tweenBtnC","tweenBtnD","isFollow","currFollowUnit","timer_drag","timer_drag_callback","timer_select","timer_select_callback","record_num","currAction","currWord","Float_1","init","window","webframe","Notify","listen","receiveAppData","getNodeFromMap","mask","active","pos_born","size","Canvas","designResolution","width","height","scale","screenw","switchTigo","opacity","pos_boat1","pos_snail1","progressBar","children","name","startsWith","bg","onDisable","ignore","fixScreen","seconds","Date","now","scheduleOnce","unit","answerQuestion","answer","__awaiter","func","showBoard","txt","txt2","enableBtns","isFirst4","voice","da","lc","ld","RichText","fontSize","letters","leftDrop","rightDrop","l","voice_1","center","playTrumpet","waitingForAnswer","duration","hideBoard","pos_center","destPos","uiPos","pos_l","unit_1","play","delay","unit_2","unit_3","pos_center_1","uiPos_1","flag_1","func2_1","unit_4","centraled_1","hadCentraled_1","scaleX","scaleY","_loop_1","this_1","unit_5","runStage1","setHighlight","jumpTo","TIGO_IDLE","followMap","walkTo","TIGO_SCRATCH","moveMap","fade","pos_boat_onland","pos_boat_inside","onBoat","playLoopEffect","stopLoopEffect","pos_boat_onland2","p_landing1","runStage2","pos_c","pos_d","showVine","TIGO_MOVE","p_vine1_land","runStage3","m1","TIGO_SHOOT1","then","MONSTER1_HITTED","MONSTER1_DISAPPEAR","runStage4","m2","TIGO_SHOOT2","MONSTER2_HITTED","MONSTER2_DISAPPEAR","runStage5","TIGO_GRAB","p_grab_land","runStage6","cover","doorBack","runStage7","TIGO_SHOOT3","MONSTER3_HITTED","MONSTER3_DISAPPEAR","runStage8","pos_snail_land1","pos_snail_inside","pos_snail_onland2","pos_landing2","pbox","BOX_OPENING","BOX_OPENED","playEffect","TIGO_SURPRISE","b","Button","enabled","warn","addStarNum","callAppToClose","drop_area","initBoard","isShow","bY","opa","easing","getBtn","scaleBtn","btn","startSelectTimer","from","playDragTo","record","onVoice","onSelected","stop","shakeBtn","Animation","stopTrumpet","target","getSafeMapX","xInMap","walkMap","destX","Math","abs","walkSpeed","startDragTimer","time","callback","update","dt","barx","cur","min","max","stopEffect","showTip","msg","A","parallel","repeat","by","isOn","word","initeAniFun","callAppToRecord","action","param","path","code","score","playRight","playWrong","data","JSON","stringify","callAppToResult","n","Number","toString","parseInt","type","displayName","FloatUtil","src","dest","xy","worldPos","convertToWorldSpaceAR","nodePos","convertToNodeSpaceAR","Unit","spine","anchor","vine","spine_name","NAME_TIGO","slot","findSlot","getAttachment","setCompleteListener","loop","setAnimation","TIGO_JUMP","TIGO_WALK","setAttachment","TIGO_HAPPY","MONSTER1_IDLE","MONSTER2_IDLE","MONSTER3_IDLE","SNAIL_IDLE","SNAIL_HAPPY","SNAIL_SWIM","BOX_CLOSED","JUMP_DUARATION","sp","Skeleton"],"mappings":"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","sourcesContent":["// Learn TypeScript:\n//  - https://docs.cocos.com/creator/manual/en/scripting/typescript.html\n// Learn Attribute:\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\n\nimport DroppableLetter from \"./DroppableLetter\";\nimport Float from \"./FloatMain\";\nimport FloatUtil from \"./FloatUtil\";\n\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class DragableLetter extends cc.Component {\n\n    private initPos: cc.Vec2 = cc.Vec2.ZERO\n    private currPos: cc.Vec2 = cc.Vec2.ZERO\n\n    dropArea: DroppableLetter[] = []\n\n    public letter = ''\n\n    static poses = [cc.v2(-250, 93.153), cc.v2(-150, 93.153), cc.v2(-50, 93.153), cc.v2(50, 93.153), cc.v2(150, 93.153), cc.v2(250, 93.153)]\n\n    freezed = false\n    @property(cc.Vec2)\n    lastPos: cc.Vec2 = cc.Vec2.ZERO\n\n    onLoad() {\n        this.node.on(cc.Node.EventType.TOUCH_START, this.onTouchBegan, this)\n        this.node.on(cc.Node.EventType.TOUCH_MOVE, this.onTouchMove, this)\n        this.node.on(cc.Node.EventType.TOUCH_END, this.onTouchEnd, this)\n        this.node.on(cc.Node.EventType.TOUCH_CANCEL, this.onTouchEnd, this)\n        this.dropArea.push(cc.find('btn_c', this.node.parent).getComponent(DroppableLetter))\n        this.dropArea.push(cc.find('btn_d', this.node.parent).getComponent(DroppableLetter))\n        this.letter = cc.find('l', this.node).getComponent(cc.Label).string\n    }\n\n    private onTouchBegan(event: cc.Event.EventTouch) {\n        if (!Float.instance.canDrag) {\n            return\n        }\n        if (this.freezed) {\n            return\n        }\n        Float.instance.dragged = true\n        Float.instance.hand.hide()\n        this.currPos.x = this.node.x\n        this.currPos.y = this.node.y\n        this.initPos.x = this.node.x\n        this.initPos.y = this.node.y\n    }\n\n    private onTouchMove(event: cc.Event.EventTouch) {\n        if (!Float.instance.canDrag) {\n            return\n        }\n        if (this.freezed) {\n            return\n        }\n        let deltaX = event.getDeltaX()\n        let deltaY = event.getDeltaY()\n        this.currPos.x += deltaX\n        this.currPos.y += deltaY\n        this.node.x = this.currPos.x\n        this.node.y = this.currPos.y\n        // let worldPos = this.node.parent.convertToWorldSpaceAR(this.node.position)\n    }\n\n    private async onTouchEnd(event: cc.Event.EventTouch) {\n        if (!Float.instance.canDrag) {\n            return\n        }\n        if (this.freezed) {\n            return\n        }\n        // console.log(`touch x: ${event.getLocationX()} y: ${event.getLocationY()}`)\n        let currX = event.getLocationX()\n        let currY = event.getLocationY()\n\n        // let dis = Math.sqrt((currX - this.initPos.x) * (currX - this.initPos.x) + (currY - this.initPos.y) * (currY - this.initPos.y))\n        // if (dis > 20) {\n        // } else {\n        // }\n        for (let i = 0; i < this.dropArea.length; i++) {\n            const element = this.dropArea[i];\n            let pos = FloatUtil.convertToNodeSpace(this.node.parent, element.node.parent, this.node.x, this.node.y)\n            let box = element.node.getBoundingBox()\n            if (box.contains(pos)) {\n                if (this.letter == element.letter) {\n                    if (this.letter == 'C') {\n                        Float.instance.playVoice('Big C')\n                    } else if (this.letter == 'c') {\n                        Float.instance.playVoice('Small c')\n                    } else if (this.letter == 'D') {\n                        Float.instance.playVoice('Big D')\n                    } else if (this.letter == 'd') {\n                        Float.instance.playVoice('Small d')\n                    }\n                    element.put(this)\n                    return\n                } else {\n                    Float.instance.playVoice('wrong')\n                    Float.instance.wrongNum++\n                    await Float.instance.shakeBtnByNode(this.node)\n                }\n            }\n        }\n        //飞回\n        this.goBack()\n    }\n\n\n\n    async goBack() {\n        return new Promise<void>(resolve => {\n            cc.tween(this.node).to(0.3, { x: this.lastPos.x, y: this.lastPos.y }).call(() => {\n                resolve()\n            }).start()\n        })\n    }\n}\n\n","// Learn TypeScript:\n//  - https://docs.cocos.com/creator/manual/en/scripting/typescript.html\n// Learn Attribute:\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\n\nimport Tigo from \"../../common_en/Tigo\";\nimport DragableLetter from \"./DragableLetter\";\nimport Float from \"./FloatMain\";\nimport FloatUtil from \"./FloatUtil\";\nimport Unit from \"./Unit\";\n\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class DroppableLetter extends cc.Component {\n\n    poses: cc.Vec2[] = [cc.v2(0, 37), cc.v2(-45, -31), cc.v2(45, -31)]\n    usages: number[] = [0, 0, 0]\n\n    other: DroppableLetter = null\n\n    async put(letter: DragableLetter) {\n        for (let i = 0; i < this.usages.length; i++) {\n            const element = this.usages[i]\n            if (element == 0) {\n                let pos = FloatUtil.convertToNodeSpace(this.node, this.node.parent, this.poses[i])\n                letter.freezed = true\n                await this.moveTo(letter, pos)\n                this.usages[i] = 1\n                if (this.isCompleted()) {\n                    let pp = Float.instance\n                    pp.canDrag = false\n                    if (pp.currResolve) {\n                        const cb = pp.currResolve\n                        pp.currResolve = null\n                        console.log('answer is right, continue>>>>>')\n                        \n                        // await pp.tigo.play(Unit.TIGO_HAPPY)\n                        let stars = 3\n                        let inst = Float.instance\n                        if (inst.wrongNum == 0) {\n                            stars = 3\n                        } else if (inst.wrongNum == 1) {\n                            stars = 2\n                        } else {\n                            stars = 1\n                        }\n                        inst.total_star += stars\n                        Tigo.callAppToCollect(inst.gid, 1004, stars);\n                        await inst.sleep(3)\n                        Float.instance.playVoice('right')\n                        await inst.coin_board.setCoinAni(stars)\n                        await inst.sleep(1)\n                        cb()\n                    }\n                }\n                break\n            }\n        }\n    }\n\n    isCompleted() {\n        return this.isFull() && this.other.isFull()\n    }\n\n    isFull() {\n        let ret = true\n        for (let i = 0; i < this.usages.length; i++) {\n            const element = this.usages[i]\n            if (element == 0) {\n                ret = false\n                break\n            }\n        }\n        return ret\n    }\n\n    async moveTo(letter: DragableLetter, pos: cc.Vec2) {\n        return new Promise<void>(resolve => {\n            cc.tween(letter.node).to(0.2, { x: pos.x, y: pos.y }).call(() => {\n                resolve()\n            }).start()\n        })\n    }\n\n    reset() {\n        for (let i = 0; i < this.usages.length; i++) {\n            this.usages[i] = 0\n        }\n    }\n\n    letter: string = ''\n    onLoad() {\n\n    }\n\n    start() {\n\n    }\n\n    // update (dt) {}\n}\n","// Learn TypeScript:\n//  - https://docs.cocos.com/creator/manual/en/scripting/typescript.html\n// Learn Attribute:\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\n\nimport DragableLetter from \"./DragableLetter\";\nimport DroppableLetter from \"./DroppableLetter\";\nimport FloatUtil from \"./FloatUtil\";\nimport Unit from \"./Unit\";\nimport Tigo from \"../../common_en/Tigo\";\nimport GameData from \"../../common_en/GameData\";\nimport recordAin from \"../../common_en/mic/recordAin\";\nimport NotifierCenter from \"../../common_en/notifierCenter\";\nimport AudioManager from \"../../../kit/system/audio/AudioManager\";\nimport Util from \"../../common_en/Util\";\nimport HandEn from \"../../common_en/hand/HandEn\";\nimport CoinBoard from \"../../common_en/coin_fly/coinBoard\";\n\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class Float extends cc.Component {\n\n    @property({ type: cc.Node, displayName: \"地图\" })\n    map: cc.Node = null\n    board: cc.Node = null\n    highlight: cc.Node = null\n    btn_c: cc.Node = null\n    btn_d: cc.Node = null\n    @property({ type: cc.Node, displayName: \"船\" })\n    boat: cc.Node = null//船\n    @property({ type: cc.Node, displayName: \"黑背景\" })\n    black_mask: cc.Node = null\n    trumpet: cc.Node = null\n    @property({ type: cc.Label, displayName: \"tip\" })\n    tip: cc.Label = null\n    @property({ type: Unit, displayName: \"tigo map\" })\n    tigoInMap: Unit = null\n    @property({ type: Unit, displayName: \"tigo boat\" })\n    tigoInBoat: Unit = null\n    @property({ type: Unit, displayName: \"tigo snail\" })\n    tigoOnSnail: Unit = null\n    @property({ type: Unit, displayName: \"怪物I\" })\n    monster1: Unit = null\n    @property({ type: Unit, displayName: \"怪物II\" })\n    monster2: Unit = null\n    @property({ type: Unit, displayName: \"怪物III\" })\n    monster3: Unit = null\n    @property({ type: Unit, displayName: \"蜗牛\" })\n    snail: Unit = null\n    @property({ type: cc.Node, displayName: \"宝箱1\" })\n    box1: cc.Node = null\n    @property({ type: Unit, displayName: \"宝箱\" })\n    box: Unit = null\n    // @property({ type: [cc.Prefab], displayName: \"前景\" })\n    // fronts: cc.Prefab[] = []\n    // @property({ type: [cc.Prefab], displayName: \"后景\" })\n    // backs: cc.Prefab[] = []\n    tigo: Unit = null\n    boardPosY = 666\n    screenSize: cc.Size = null\n    screenRealSize: cc.Size = null\n    screenScaledSize: cc.Size = null\n    isDev = false\n    currStage = 1\n    big_letter: cc.Label = null\n\n    static instance: Float = null\n\n    mapRight = 0\n    mapLeft = 0\n\n    barLeft = -205\n    barRight = 205\n\n    bgLeft = 0\n    bgRight = 0\n\n    cursor: cc.Node = null\n    farBg: cc.Node = null\n\n    currMapScale = 1.0\n\n    ui: cc.Node = null\n    mic: cc.Node = null\n\n    reward: Unit = null\n\n    gid = 1\n\n    coin: Unit = null\n\n    hand: HandEn = null\n    coin_board: CoinBoard = null\n    dragged = false\n\n    total_star = 0\n    progressBar: cc.Node;\n\n    //poses\n    init() {\n        if (!window.webframe) {\n            window.webframe = {} as any\n        }\n        if (!window.webframe.Notify) {\n            window.webframe.Notify = new NotifierCenter()\n        }\n        window.webframe.Notify.listen(\"callCocos_data\", this.receiveAppData, this, false)\n        Float.instance = this\n        // window.webframe = {} as any\n        // window.webframe.Notify = new NotifierCenter()\n\n        this.board = this.getNodeFromMap('board')\n        this.btn_c = cc.find('btn_c', this.board)\n        this.btn_d = cc.find('btn_d', this.board)\n        this.hand = cc.find('handen', this.board).getComponent(HandEn)\n        this.hand.mask.active = false\n        this.hand.node.active = false\n        this.trumpet = cc.find('voice', this.board)\n        this.highlight = cc.find('blur_small', this.board)\n        let pos_born = this.getNodeFromMap('p_born')\n        this.screenRealSize = cc.size(cc.Canvas.instance.designResolution.width, cc.Canvas.instance.designResolution.height)\n        this.currMapScale = this.screenRealSize.height / this.map.height\n        this.map.scale = this.currMapScale\n        let screenw = this.screenRealSize.width / this.screenRealSize.height * this.map.height\n        // this.screenSize = cc.size(this.screenRealSize.width / this.currMapScale,this.map.height)\n        this.screenSize = cc.size(screenw, this.map.height)\n        console.log('screen size:' + this.screenSize.width + ',' + this.screenSize.height)\n        this.map.x = 0\n        this.mapLeft = 0\n        this.mapRight = this.map.width - this.screenSize.width\n        this.farBg = cc.find('far_bg', this.node)\n        this.farBg.scale = this.currMapScale\n\n        this.bgLeft = -this.farBg.width + this.screenSize.width\n        this.bgRight = 0\n        this.farBg.x = this.bgRight\n        this.switchTigo(this.tigoInMap)\n        this.tigo.node.x = pos_born.x\n        this.black_mask.opacity = 0\n        this.tip.node.opacity = 0\n        this.boat.opacity = 0\n        this.snail.node.opacity = 0\n        let pos_boat1 = this.getNodeFromMap('p_boat1')\n        this.boat.x = pos_boat1.x\n        let pos_snail1 = this.getNodeFromMap('p_snail1')\n        this.snail.node.x = pos_snail1.x\n        this.tigoInBoat.node.active = false\n        this.tigoOnSnail.node.active = false\n        this.big_letter = cc.find('big_letter', this.board).getComponent(cc.Label)\n        this.big_letter.node.active = false\n        let ui = cc.find('ui', this.node)\n        this.progressBar = cc.find('progress_bar', this.map)\n        this.cursor = cc.find('cursor', this.progressBar)\n        this.coin_board = cc.find('coinborder', ui).getComponent(CoinBoard)\n        this.coin_board.node.scale = 1334 / 2048\n        //init nodes\n        if (!this.isDev) {\n            for (let i = 0; i < this.map.children.length; i++) {\n                const element = this.map.children[i];\n                if (element.name.startsWith('p_')) {\n                    let bg = cc.find('bg', element)\n                    bg.active = false\n                }\n            }\n            for (let i = 0; i < this.boat.children.length; i++) {\n                const element = this.boat.children[i];\n                if (element.name.startsWith('p_')) {\n                    let bg = cc.find('bg', element)\n                    bg.active = false\n                }\n            }\n            for (let i = 0; i < this.snail.node.children.length; i++) {\n                const element = this.snail.node.children[i];\n                if (element.name.startsWith('p_')) {\n                    let bg = cc.find('bg', element)\n                    bg.active = false\n                }\n            }\n            for (let i = 0; i < this.board.children.length; i++) {\n                const element = this.board.children[i];\n                if (element.name.startsWith('p_')) {\n                    let bg = cc.find('bg', element)\n                    bg.active = false\n                }\n            }\n        }\n\n        this.ui = cc.find('ui', this.node)\n        this.mic = cc.find('mic', this.board)\n        this.reward = cc.find('reward', this.ui).getComponent(Unit)\n        this.coin = cc.find('coin_mid', this.ui).getComponent(Unit)\n    }\n\n    onDisable() {\n        if (window.webframe) {\n            window.webframe.Notify.ignore(\"callCocos_data\", this.receiveAppData, this, false)\n        }\n    }\n\n    fixScreen() {\n\n    }\n\n    private currTime = 0\n    async sleep(seconds: number) {\n        this.currTime = Date.now()\n        // console.log(`sleep at: ${this.currTime}`)\n        return new Promise<void>(resolve => {\n            this.scheduleOnce(() => {\n                // console.log(`awaked by: ${Date.now() - this.currTime} seconds`)\n                resolve()\n            }, seconds)\n        });\n    }\n\n    /**\n     * 切换主角动画\n     * @param unit \n     */\n    switchTigo(unit: Unit) {\n        if (this.tigo) {\n            this.tigo.node.active = false\n        }\n        unit.node.active = true\n        this.tigo = unit\n    }\n\n    getNodeFromMap(name) {\n        return cc.find(name, this.map)\n    }\n\n    canDrag = false\n\n    /**\n     * 答题环节\n     * @param answer 答案\n     * @returns \n     */\n    async answerQuestion(answer) {\n        return new Promise<void>(async resolve => {\n            let func = async () => {\n                this.big_letter.node.active = false\n                await this.showBoard(false)\n                //答题结束\n                resolve()\n            }\n            //答题开始(一些初始化)\n            let txt = cc.find('Cc', this.btn_c)\n            let txt2 = cc.find('Dd', this.btn_d)\n            this.enableBtns(false)\n            let isFirst4 = this.currStage >= 1 && this.currStage <= 4\n            let voice = cc.find('voice', this.board)\n            voice.active = isFirst4\n            for (let i = 0; i < 6; i++) {\n                const element = cc.find('bletter' + (i + 1), this.board)\n                element.active = this.currStage == 5 || this.currStage == 6\n                let pos = DragableLetter.poses[i]\n                element.x = pos.x\n                element.y = pos.y\n                element.opacity = 255\n            }\n            let da = cc.find('drag_area', this.board)\n            da.active = (this.currStage == 5 || this.currStage == 6)\n            da.opacity = 255\n            let lc = cc.find('lc', this.board)\n            let ld = cc.find('ld', this.board)\n            if (da.active) {\n                lc.active = true\n                ld.active = true\n            } else {\n                lc.active = false\n                ld.active = false\n            }\n            if (this.currStage == 1 || this.currStage == 2) {\n                if (this.currStage == 1) {\n                    this.big_letter.string = 'C'\n                    txt.getComponent(cc.RichText).string = '<color=#F4AC5E>Cc</color>'\n                    txt2.getComponent(cc.RichText).string = '<color=#F4AC5E>Dd</color>'\n                } else {\n                    this.big_letter.string = 'D'\n                    txt.getComponent(cc.RichText).string = '<color=#F4AC5E>Cc</color>'\n                    txt2.getComponent(cc.RichText).string = '<color=#F4AC5E>Dd</color>'\n                }\n                txt.getComponent(cc.RichText).fontSize = 100\n                txt2.getComponent(cc.RichText).fontSize = 100\n            } else if (this.currStage == 3 || this.currStage == 4) {\n                if (this.currStage == 3) {\n                    this.big_letter.string = 'c'\n                    txt.getComponent(cc.RichText).string = '<color=#F4AC5E>c</c><color=#f4c46a>ow</color>'\n                    txt2.getComponent(cc.RichText).string = '<color=#F4AC5E>d</c><color=#f4c46a>og</color>'\n                } else {\n                    this.big_letter.string = 'd'\n                    txt.getComponent(cc.RichText).string = '<color=#F4AC5E>c</c><color=#f4c46a>arrot</color>'\n                    txt2.getComponent(cc.RichText).string = '<color=#F4AC5E>d</c><color=#f4c46a>uck</color>'\n                }\n                txt.getComponent(cc.RichText).fontSize = 60\n                txt2.getComponent(cc.RichText).fontSize = 60\n            } else if (this.currStage == 5 || this.currStage == 6) {\n                // da.active = false\n                this.canDrag = false\n                this.big_letter.string = ''\n                txt.getComponent(cc.RichText).string = ''\n                txt2.getComponent(cc.RichText).string = ''\n                lc.getComponent(cc.Label).string = 'C'\n                ld.getComponent(cc.Label).string = 'c'\n                let letters = ['C', 'C', 'c', 'C', 'c', 'c']\n                let leftDrop = this.btn_c.getComponent(DroppableLetter)\n                leftDrop.reset()\n                leftDrop.letter = 'C'\n                let rightDrop = this.btn_d.getComponent(DroppableLetter)\n                rightDrop.reset()\n                rightDrop.letter = 'c'\n                leftDrop.other = rightDrop\n                rightDrop.other = leftDrop\n                if (this.currStage == 6) {\n                    letters = ['d', 'd', 'D', 'D', 'd', 'D']\n                    lc.getComponent(cc.Label).string = 'D'\n                    ld.getComponent(cc.Label).string = 'd'\n                    leftDrop.letter = 'D'\n                    rightDrop.letter = 'd'\n                }\n\n                lc.active = true\n                lc.opacity = 35\n                ld.active = true\n                ld.opacity = 35\n                for (let i = 0; i < 6; i++) {\n                    const element = cc.find('bletter' + (i + 1), this.board)\n                    let l = cc.find('l', element).getComponent(cc.Label)\n                    element.getComponent(DragableLetter).freezed = false\n                    l.string = letters[i]\n                    element.x = DragableLetter.poses[i].x\n                    element.y = DragableLetter.poses[i].y\n                    element.getComponent(DragableLetter).lastPos = DragableLetter.poses[i]\n                    element.getComponent(DragableLetter).letter = letters[i]\n                }\n                let voice = cc.find('voice', this.board)\n                voice.active = false\n                this.dragged = false\n            } else if (this.currStage == 7 || this.currStage == 8) {\n                this.big_letter.string = 'C'\n                txt.getComponent(cc.RichText).string = 'Cc'\n                txt.getComponent(cc.RichText).fontSize = 100\n                this.currWord = 'see'\n                if (this.currStage == 8) {\n                    this.big_letter.string = 'd'\n                    txt.getComponent(cc.RichText).string = 'Dd'\n                    this.currWord = 'dee'\n                }\n                txt2.getComponent(cc.RichText).string = ''\n                let center = cc.find('p_center', this.board)\n                this.btn_c.x = center.x\n                this.btn_d.active = false\n                this.btn_c.y = center.y + 90\n                this.highlight.y = this.btn_c.y\n                this.wrongNum = 0\n            } else {\n            }\n            this.wrongNum = 0\n            await this.showBoard(true)\n            this.playTrumpet('voice')\n\n            //题目语音\n            if (this.currStage == 1) {\n                await this.playVoice('listen and click')\n                await this.sleep(1)\n                await this.playVoice('C')\n            } else if (this.currStage == 2) {\n                await this.playVoice('listen and click')\n                await this.sleep(1)\n                await this.playVoice('D')\n            } else if (this.currStage == 3) {\n                await this.playVoice('find the \"c\" in the words')\n            } else if (this.currStage == 4) {\n                await this.playVoice('find the \"d\" in the words')\n            } else if (this.currStage == 5) {\n                await this.playVoice('Drag and drop')\n            } else if (this.currStage == 6) {\n                await this.playVoice('Drag and drop')\n            } else if (this.currStage == 7) {\n                await this.playVoice('Listen and say, C.')\n            } else if (this.currStage == 8) {\n                await this.playVoice('Listen and say, D.')\n            } else {\n                await this.playVoice('listen and click')\n            }\n\n            this.playTrumpet('voice_end')\n            //等待用户操作\n            await this.waitingForAnswer(answer)\n            let duration = 0.5\n            //字母飞行动画\n            if (this.currStage == 1 || this.currStage == 2) {\n                this.highlight.active = false\n                await this.hideBoard(duration)\n                let pos_center = cc.find('p_center', this.board)\n                let destPos = this.getNodeFromMap('p_letter' + this.currStage)\n                let uiPos = FloatUtil.convertToNodeSpace(this.map, this.board, destPos.x, destPos.y)\n                let pos_l = cc.find('p_l' + this.currStage, this.board)\n                this.big_letter.node.x = pos_l.x\n                this.big_letter.node.y = pos_l.y\n                this.big_letter.node.active = true\n                this.big_letter.node.opacity = 255\n                if (this.currStage == 1) {\n                    const unit = cc.find('unit_C', this.big_letter.node).getComponent(Unit)\n                    unit.play('idle2')\n                    this.big_letter.string = ''\n                    this.big_letter.node.scale = 0.1\n                    unit.node.active = true\n                    cc.tween(this.big_letter.node)\n                        .to(duration, { x: pos_center.x })\n                        .delay(1)\n                        .to(duration, { x: uiPos.x, y: uiPos.y, scale: 1 })\n                        .call(() => {\n                            this.playVoice('blink')\n                            unit.play('shan')\n                        })\n                        .delay(0.5)\n                        .call(() => {\n                            unit.node.active = false\n                            func()\n                        }).start()\n                } else {\n                    const unit = cc.find('unit_D', this.big_letter.node).getComponent(Unit)\n                    unit.play('idle2')\n                    this.big_letter.string = ''\n                    this.big_letter.node.scale = 0.1\n                    unit.node.active = true\n                    cc.tween(this.big_letter.node)\n                        .to(duration, { x: pos_center.x })\n                        .delay(1)\n                        .to(duration, { x: uiPos.x, y: uiPos.y })\n                        .call(() => {\n                            this.playVoice('blink')\n                            unit.play('shan')\n                        })\n                        .delay(0.5)\n                        .call(() => {\n                            unit.node.active = false\n                            func()\n                        }).start()\n                }\n            } else if (this.currStage == 3 || this.currStage == 4) {\n                this.highlight.active = false\n                await this.hideBoard(duration)\n                let pos_center = cc.find('p_center', this.board)\n                let destPos = this.getNodeFromMap('p_letter' + this.currStage)\n                let uiPos = FloatUtil.convertToNodeSpace(this.map, this.board, destPos.x, destPos.y)\n                let pos_l = cc.find('p_l' + this.currStage, this.board)\n                this.big_letter.node.x = pos_l.x\n                this.big_letter.node.y = pos_l.y\n                this.big_letter.node.active = true\n                this.big_letter.node.opacity = 255\n                let unit: Unit = null\n                if (this.currStage == 3) {\n                    unit = cc.find('unit_c', this.big_letter.node).getComponent(Unit)\n                    unit.play('idle2')\n                    this.big_letter.string = ''\n                    this.big_letter.node.scale = 0.1\n                    unit.node.active = true\n                } else {\n                    unit = cc.find('unit_d', this.big_letter.node).getComponent(Unit)\n                    unit.play('idle2')\n                    this.big_letter.string = ''\n                    this.big_letter.node.scale = 0.1\n                    unit.node.active = true\n                }\n                cc.tween(this.big_letter.node)\n                    .to(duration, { x: pos_center.x })\n                    .delay(1)\n                    .to(duration, { x: uiPos.x, y: uiPos.y })\n                    .call(() => {\n                        this.playVoice('blink')\n                        unit.play('shan')\n                    })\n                    .delay(0.5)\n                    .call(func).start()\n            } else if (this.currStage == 5 || this.currStage == 6) {\n                this.highlight.active = false\n                this.big_letter.node.active = false\n                await this.hideBoard(duration)\n                let pos_center = cc.find('p_center', this.board)\n                let destPos = this.getNodeFromMap('p_letter' + this.currStage)\n                let uiPos = FloatUtil.convertToNodeSpace(this.map, this.board, destPos.x, destPos.y)\n                let flag = false\n                let func2 = () => {\n                    if (!flag) {\n                        flag = true\n                        func()\n                    }\n                }\n                let unit: Unit = null\n                let centraled: Function = null\n                let hadCentraled = false\n                if (this.currStage == 5) {\n                    unit = cc.find('unit_C', this.big_letter.node).getComponent(Unit)\n                    unit.play('idle2')\n                    this.big_letter.string = ''\n                    this.big_letter.node.scale = 0.1\n                    unit.node.active = true\n                    centraled = () => {\n                        if (hadCentraled == false) {\n                            hadCentraled = true\n                            this.big_letter.node.x = pos_center.x\n                            this.big_letter.node.y = pos_center.y\n                            this.big_letter.node.active = true\n                            cc.tween(this.big_letter.node).delay(1)\n                                .to(duration, { x: uiPos.x, y: uiPos.y })\n                                .call(() => {\n                                    this.playVoice('blink')\n                                    unit.play('shan')\n                                })\n                                .delay(0.5)\n                                .call(() => {\n                                    func2()\n                                }).start()\n                        }\n                    }\n                } else {\n                    unit = cc.find('unit_D', this.big_letter.node).getComponent(Unit)\n                    unit.play('idle2')\n                    this.big_letter.string = ''\n                    this.big_letter.node.scale = 0.1\n                    unit.node.active = true\n                    centraled = () => {\n                        if (hadCentraled == false) {\n                            hadCentraled = true\n                            this.big_letter.node.x = pos_center.x\n                            this.big_letter.node.y = pos_center.y\n                            this.big_letter.node.active = true\n                            cc.tween(this.big_letter.node).delay(1)\n                                .to(duration, { x: uiPos.x, y: uiPos.y, scaleX: 0.3, scaleY: 0.4 })\n                                .call(() => {\n                                    this.playVoice('blink')\n                                    unit.play('shan')\n                                })\n                                .delay(0.5)\n                                .call(() => {\n                                    func2()\n                                }).start()\n                        }\n                    }\n                }\n\n                for (let i = 0; i < 6; i++) {\n                    const element = cc.find('bletter' + (i + 1), this.board)\n                    let letter = element.getComponent(DragableLetter)\n                    if (letter.letter == 'C' || letter.letter == 'D') {//大写字母\n                        cc.tween(letter.node)\n                            .to(duration, { x: pos_center.x, y: pos_center.y })\n                            .call(() => {\n                                letter.node.active = false\n                                centraled()\n                            }).start()\n                    }\n                }\n            } else if (this.currStage == 7 || this.currStage == 8) {\n                this.highlight.active = false\n                await this.hideBoard(duration)\n                let pos_center = cc.find('p_center', this.board)\n                let destPos = this.getNodeFromMap('p_letter' + this.currStage)\n                let uiPos = FloatUtil.convertToNodeSpace(this.map, this.board, destPos.x, destPos.y)\n                let pos_l = pos_center//cc.find('p_l' + this.currStage, this.board)\n                this.big_letter.node.x = pos_l.x\n                this.big_letter.node.y = pos_l.y\n                this.big_letter.node.active = true\n                this.big_letter.node.opacity = 255\n                let unit: Unit = null\n                if (this.currStage == 7) {\n                    unit = cc.find('unit_c', this.big_letter.node).getComponent(Unit)\n                    unit.play('idle2')\n                    this.big_letter.string = ''\n                    this.big_letter.node.scale = 0.1\n                    unit.node.active = true\n                } else {\n                    unit = cc.find('unit_d', this.big_letter.node).getComponent(Unit)\n                    unit.play('idle2')\n                    this.big_letter.string = ''\n                    this.big_letter.node.scale = 0.1\n                    unit.node.active = true\n                }\n                cc.tween(this.big_letter.node)\n                    // .to(duration, { x: pos_center.x })\n                    // .delay(1)\n                    .to(duration, { x: uiPos.x, y: uiPos.y, scale: this.currStage == 7 ? 0.1 : 0.5 })\n                    .call(() => {\n                        this.playVoice('blink')\n                        unit.play('shan')\n                    })\n                    .delay(0.5)\n                    .call(func).start()\n            }\n        })\n    }\n\n    currBigLetterDestPos: cc.Vec2 = null\n\n    /**\n     * 第一关:船\n     */\n    async runStage1() {\n        this.currStage = 1\n        this.setHighlight()\n        await this.tigo.jumpTo(this.getNodeFromMap('p_start'))\n        this.tigo.play(Unit.TIGO_IDLE, true)\n        this.followMap(true, this.tigo.node)\n        await this.tigo.walkTo(this.getNodeFromMap('p_dock'))\n        this.tigo.play(Unit.TIGO_SCRATCH, true)\n        await this.sleep(1)\n        this.followMap(false)\n        await this.moveMap(this.getNodeFromMap('p_boat_view').x)\n        await this.answerQuestion('C')//答题\n        this.playVoice('appear')\n        await this.fade(this.boat, 255, 1.5)\n        this.switchTigo(this.tigoInBoat)\n        let pos_boat_onland = cc.find('p_on_land', this.boat)\n        this.tigo.node.x = pos_boat_onland.x\n        this.tigo.node.y = pos_boat_onland.y\n        let pos_boat_inside = cc.find('p_in_boat', this.boat)\n        this.onBoat(this.boat, true, 0.7)\n        await this.tigo.jumpTo(pos_boat_inside)\n        // await this.tigo.play(Unit.TIGO_HAPPY)\n        this.tigo.play(Unit.TIGO_IDLE, true)\n        this.followMap(true, this.boat)\n        AudioManager.playLoopEffect('Float', 'sound/SE_qihuanpiaoliu_03')\n        await this.moveTo(this.boat, this.getNodeFromMap('p_boat2').x)\n        AudioManager.stopLoopEffect('sound/SE_qihuanpiaoliu_03')\n        let pos_boat_onland2 = cc.find('p_on_land2', this.boat)\n        this.onBoat(this.boat, false, 0.1)\n        await this.tigo.jumpTo(pos_boat_onland2)\n        this.switchTigo(this.tigoInMap)\n        let p_landing1 = this.getNodeFromMap('p_landing1')\n        this.tigo.node.x = p_landing1.x\n        this.tigo.node.y = p_landing1.y\n        this.tigo.play(Unit.TIGO_IDLE, true)\n        await this.moveMap(this.tigo.node.x)\n    }\n\n    /**\n     * 第二关：藤条\n     */\n    async runStage2() {\n        this.currStage = 2\n        //for testing\n        if (this.isDev) {\n            let lastPos = this.getNodeFromMap('p_landing1')\n            this.tigo.node.x = lastPos.x\n            this.tigo.node.y = lastPos.y\n            this.followMap(false)\n            await this.moveMap(this.tigo.node.x)\n        }\n        let pos_c = cc.find('p_c', this.board)\n        let pos_d = cc.find('p_d', this.board)\n        this.btn_c.x = pos_c.x\n        this.btn_d.x = pos_d.x\n        this.btn_c.opacity = 255\n        this.btn_d.opacity = 255\n        //start\n        this.followMap(true, this.tigo.node)\n        this.setHighlight()\n        // await this.sleep(1)\n        await this.tigo.walkTo(this.getNodeFromMap('p_vine'))\n        this.tigo.play(Unit.TIGO_SCRATCH, true)\n        await this.sleep(1)\n        this.followMap(false)\n        await this.moveMap(this.getNodeFromMap('p_vine_view').x)\n        await this.answerQuestion('D')//答题\n        this.tigo.showVine(true)\n        this.playVoice('slide', 0.5)\n        await this.tigo.play(Unit.TIGO_MOVE)\n        await this.sleep(0.3)\n        this.tigo.showVine(false)\n        // let pos_vine_tree = this.getNodeFromMap('p_vine1_tree')\n        // this.tigo.node.x = pos_vine_tree.x\n        // this.tigo.node.y = pos_vine_tree.y\n        let p_vine1_land = this.getNodeFromMap('p_vine1_land')\n        this.tigo.node.x = p_vine1_land.x\n        this.tigo.node.y = p_vine1_land.y\n        // await this.tigo.jumpTo(p_vine1_land)\n        this.tigo.play(Unit.TIGO_IDLE, true)\n        await this.moveMap(p_vine1_land.x)\n    }\n    /**\n     * 第三关：黄色怪\n     */\n    async runStage3() {\n        this.currStage = 3\n        //for testing\n        if (this.isDev) {\n            let lastPos = this.getNodeFromMap('p_vine1_land')\n            this.tigo.node.x = lastPos.x\n            this.tigo.node.y = lastPos.y\n            this.followMap(false)\n            await this.moveMap(this.tigo.node.x)\n        }\n        //题\n        // let txt = cc.find('Cc', this.btn_c)\n        // txt.getComponent(cc.Label).string = 'cow'\n        // txt = cc.find('Dd', this.btn_d)\n        // txt.getComponent(cc.Label).string = 'dog'\n        //start\n        this.setHighlight()\n        let m1 = this.getNodeFromMap('p_m1')\n        this.followMap(true, this.tigo.node)\n        await this.tigo.walkTo(m1)\n        this.tigo.play(Unit.TIGO_SCRATCH, true)\n        await this.sleep(1)\n        this.followMap(false)\n        await this.moveMap(this.getNodeFromMap('p_m1_view').x)\n        await this.answerQuestion('C')//答题\n        this.playVoice('wave', 0.5)\n        this.tigo.play(Unit.TIGO_SHOOT1).then(() => {\n            this.tigo.play(Unit.TIGO_IDLE, true)\n        })\n        await this.sleep(1)\n        this.playVoice('destroyed', 0.3)\n        await this.monster1.play(Unit.MONSTER1_HITTED)\n        this.playVoice('disappear', 1)\n        await this.monster1.play(Unit.MONSTER1_DISAPPEAR)\n        // await this.tigo.play(Unit.TIGO_HAPPY)\n        this.tigo.play(Unit.TIGO_IDLE, true)\n    }\n    /**\n     * 第四关：紫色怪\n     */\n    async runStage4() {\n        this.currStage = 4\n        //for testing\n        if (this.isDev) {\n            let lastPos = this.getNodeFromMap('p_m1')\n            this.tigo.node.x = lastPos.x\n            this.tigo.node.y = lastPos.y\n            this.followMap(false)\n            await this.moveMap(this.getNodeFromMap('p_m1_view').x)\n        }\n        //题\n        // let txt = cc.find('Cc', this.btn_c)\n        // txt.getComponent(cc.Label).string = 'carrot'\n        // txt = cc.find('Dd', this.btn_d)\n        // txt.getComponent(cc.Label).string = 'duck'\n        //start\n        this.setHighlight()\n        let m2 = this.getNodeFromMap('p_m2')\n        this.followMap(true, this.tigo.node)\n        await this.tigo.walkTo(m2)\n        this.tigo.play(Unit.TIGO_SCRATCH, true)\n        await this.sleep(1)\n        this.followMap(false)\n        await this.moveMap(this.getNodeFromMap('p_m2_view').x)\n        await this.answerQuestion('D')//答题\n        this.playVoice('wave', 1)\n        this.tigo.play(Unit.TIGO_SHOOT2).then(() => {\n            this.tigo.play(Unit.TIGO_IDLE, true)\n        })\n        await this.sleep(0.2)\n        this.playVoice('destroyed', 1)\n        await this.monster2.play(Unit.MONSTER2_HITTED)\n        this.playVoice('disappear', 0.4)\n        await this.monster2.play(Unit.MONSTER2_DISAPPEAR)\n        // await this.tigo.play(Unit.TIGO_HAPPY)\n        this.tigo.play(Unit.TIGO_IDLE, true)\n    }\n\n    /**\n     * 第五关：飞爪\n     */\n    async runStage5() {\n        this.currStage = 5\n        //for testing\n        if (this.isDev) {\n            let lastPos = this.getNodeFromMap('p_m2')\n            this.tigo.node.x = lastPos.x\n            this.tigo.node.y = lastPos.y\n            this.followMap(false)\n            await this.moveMap(this.getNodeFromMap('p_m2_view').x)\n        }\n        //start\n        this.followMap(true, this.tigo.node)\n        this.setHighlight()\n        await this.sleep(1)\n        await this.tigo.walkTo(this.getNodeFromMap('p_tree'))\n        this.tigo.play(Unit.TIGO_SCRATCH, true)\n        await this.sleep(1)\n        this.followMap(false)\n        await this.moveMap(this.getNodeFromMap('p_grab_view').x)\n        await this.answerQuestion('C')//答题\n        this.playVoice('machine', 0.3)\n        await this.tigo.play(Unit.TIGO_GRAB)\n        await this.sleep(0.3)\n        // let p_grab_tree = this.getNodeFromMap('p_grab_tree')\n        // this.tigo.node.x = p_grab_tree.x\n        // this.tigo.node.y = p_grab_tree.y\n        let p_grab_land = this.getNodeFromMap('p_grab_land')\n        // await this.tigo.jumpTo(p_grab_land)\n        this.tigo.node.x = p_grab_land.x\n        this.tigo.node.y = p_grab_land.y\n        this.tigo.play(Unit.TIGO_IDLE, true)\n        await this.moveMap(p_grab_land.x)\n    }\n\n    /**\n     * 第六关：石门\n     */\n    async runStage6() {\n        this.currStage = 6\n        //for testing\n        if (this.isDev) {\n            let lastPos = this.getNodeFromMap('p_grab_land')\n            this.tigo.node.x = lastPos.x\n            this.tigo.node.y = lastPos.y\n            this.followMap(false)\n            await this.moveMap(this.getNodeFromMap('p_grab_land').x)\n        }\n        //start\n        this.setHighlight()\n        let m2 = this.getNodeFromMap('p_stone')\n        this.followMap(true, this.tigo.node)\n        await this.tigo.walkTo(m2)\n        this.tigo.play(Unit.TIGO_SCRATCH, true)\n        await this.sleep(1)\n        this.followMap(false)\n        await this.moveMap(this.getNodeFromMap('p_stone_view').x)\n        this.tigo.play(Unit.TIGO_IDLE, true)\n        await this.answerQuestion('D')//答题\n        // let cover = this.getNodeFromMap('stone_cover')\n        let cover = cc.find('stone_cover', this.map)\n        this.playVoice('open')\n        this.tigo.play(Unit.TIGO_IDLE, true)\n        await this.fade(cover, 0, 2)\n        // await this.tigo.play(Unit.TIGO_HAPPY)\n        let doorBack = this.getNodeFromMap('p_stone2')\n        await this.tigo.jumpTo(doorBack)\n        this.tigo.play(Unit.TIGO_IDLE, true)\n        await this.moveMap(this.tigo.node.x)\n    }\n\n    /**\n     * 第七关：蓝色怪\n     */\n    async runStage7() {\n        this.currStage = 7\n        //for testing\n        if (this.isDev) {\n            let lastPos = this.getNodeFromMap('p_stone2')\n            this.tigo.node.x = lastPos.x\n            this.tigo.node.y = lastPos.y\n            this.followMap(false)\n            await this.moveMap(this.tigo.node.x)\n        }\n        //start\n        this.setHighlight()\n        let m2 = this.getNodeFromMap('p_m3')\n        this.followMap(true, this.tigo.node)\n        await this.tigo.walkTo(m2)\n        this.tigo.play(Unit.TIGO_SCRATCH, true)\n        await this.sleep(1)\n        this.followMap(false)\n        await this.moveMap(this.getNodeFromMap('p_m3_view').x)\n        await this.answerQuestion('C')//答题\n        this.tigo.play(Unit.TIGO_SHOOT3).then(() => {\n            this.tigo.play(Unit.TIGO_IDLE, true)\n        })\n        await this.sleep(0.8)\n        this.playVoice('destroyed', 0.2)\n        await this.monster3.play(Unit.MONSTER3_HITTED)\n        this.playVoice('disappear', 0.3)\n        await this.monster3.play(Unit.MONSTER3_DISAPPEAR)\n        // await this.tigo.play(Unit.TIGO_HAPPY)\n        this.tigo.play(Unit.TIGO_IDLE, true)\n    }\n\n    /**\n     * 第八关：蜗牛\n     */\n    async runStage8() {\n        this.currStage = 8\n        //for testing\n        if (this.isDev) {\n            let lastPos = this.getNodeFromMap('p_m3')\n            this.tigo.node.x = lastPos.x\n            this.tigo.node.y = lastPos.y\n            this.followMap(false)\n            await this.moveMap(this.getNodeFromMap('p_m3_view').x)\n        }\n        //start\n        this.setHighlight()\n        let m2 = this.getNodeFromMap('p_snail')\n        this.followMap(true, this.tigo.node)\n        await this.tigo.walkTo(m2)\n        this.tigo.play(Unit.TIGO_SCRATCH, true)\n        await this.sleep(1)\n        await this.moveMap(this.getNodeFromMap('p_snail_view').x)\n        await this.answerQuestion('D')//答题\n        await this.fade(this.snail.node, 255, 1.5)\n        this.switchTigo(this.tigoOnSnail)\n        let pos_snail_land1 = cc.find('p_snail_land1', this.snail.node)\n        this.tigo.node.x = pos_snail_land1.x\n        this.tigo.node.y = pos_snail_land1.y\n        let pos_snail_inside = cc.find('p_snail_ride', this.snail.node)\n        this.onBoat(this.snail.node, true, 0.7)\n        await this.tigo.jumpTo(pos_snail_inside)\n        // await this.tigo.play(Unit.TIGO_HAPPY)\n        this.tigo.play(Unit.TIGO_IDLE, true)\n        this.followMap(true, this.snail.node)\n        AudioManager.playLoopEffect('Float', 'sound/SE_qihuanpiaoliu_03')\n        await this.moveTo(this.snail.node, this.getNodeFromMap('p_snail2').x)\n        AudioManager.stopLoopEffect('sound/SE_qihuanpiaoliu_03')\n        let pos_snail_onland2 = cc.find('p_snail_land2', this.snail.node)\n        this.onBoat(this.snail.node, false, 0.1)\n        await this.tigo.jumpTo(pos_snail_onland2)\n        this.switchTigo(this.tigoInMap)\n        let pos_landing2 = this.getNodeFromMap('p_landing2')\n        this.tigo.node.x = pos_landing2.x\n        this.tigo.play(Unit.TIGO_IDLE, true)\n        this.followMap(false)\n        await this.moveMap(this.tigo.node.x)\n        this.followMap(true, this.tigo.node)\n        let pbox = this.getNodeFromMap('p_box')\n        await this.tigo.walkTo(pbox)\n        this.tigo.play(Unit.TIGO_IDLE, true)\n        await this.box.play(Unit.BOX_OPENING)\n        this.box.play(Unit.BOX_OPENED)\n        await this.playVoice('box')\n        AudioManager.playEffect('Float', 'sound/amazing')\n        await this.tigo.play(Unit.TIGO_SURPRISE, true)\n        this.tigo.play(Unit.TIGO_IDLE, true)\n    }\n\n\n    enableBtns(b: boolean) {\n        this.btn_c.getComponent(cc.Button).enabled = b\n        this.btn_d.getComponent(cc.Button).enabled = b\n        // if (b) {\n        //     this.highlight.active = false\n        // }\n    }\n\n    async start() {\n        this.init()\n        await this.sleep(2)\n        await this.runStage1()\n        await this.runStage2()\n        await this.runStage3()\n        await this.runStage4()\n        await this.runStage5()\n        await this.runStage6()\n        await this.runStage7()\n        await this.runStage8()\n        this.reward.node.active = true\n        await this.reward.play('caidai')\n        await this.sleep(1)\n        this.coin.node.active = true\n        AudioManager.playEffect('Float', 'sound/coin_large')\n        console.warn('float total stars:' + this.total_star)\n        GameData.addStarNum(this.total_star)\n        await this.coin.play('Animation')\n        Tigo.callAppToClose('replayOrNext', true)\n    }\n\n    private isBoardShowing = false\n\n    async hideBoard(duration) {\n        let box = cc.find('box', this.board)\n        this.fade(box, 0, duration)\n        this.highlight.active = false\n        let btn_c = cc.find('btn_c', this.board)\n        this.fade(btn_c, 0, duration)\n        let btn_d = cc.find('btn_d', this.board)\n        this.fade(btn_d, 0, duration)\n        let voice = cc.find('voice', this.board)\n        this.fade(this.black_mask, 0, duration / 4)\n        let drop_area = cc.find('drag_area', this.board)\n        // this.fade(drop_area, 0, duration / 4)\n        let lc = cc.find('lc', this.board)\n        this.fade(lc, 0, duration / 4)\n        let ld = cc.find('ld', this.board)\n        this.fade(ld, 0, duration / 4)\n        drop_area.active = false\n        this.coin_board.reset()\n        this.mic.active = false\n        for (let i = 0; i < 6; i++) {\n            const element = cc.find('bletter' + (i + 1), this.board)\n            let letter = element.getComponent(DragableLetter)\n            if (letter.letter == 'C' || letter.letter == 'D') {\n\n            } else {\n                this.fade(element, duration)\n            }\n        }\n        return this.fade(voice, 0, duration)\n    }\n\n    initBoard() {\n        let box = cc.find('box', this.board)\n        box.opacity = 255\n        this.highlight.active = false\n        let btn_c = cc.find('btn_c', this.board)\n        btn_c.opacity = 255\n        let btn_d = cc.find('btn_d', this.board)\n        btn_d.opacity = 255\n        let voice = cc.find('voice', this.board)\n        voice.opacity = 255\n    }\n\n    /**\n     * 显隐题板\n     * @param isShow \n     * @returns \n     */\n    async showBoard(isShow: boolean) {\n        let bY = 0\n        let opa = 123\n        if (!isShow) {\n            bY = this.boardPosY\n            opa = 0\n        }\n        this.board.x = -this.map.x / this.currMapScale + this.screenSize.width / 2\n        this.board.y = this.boardPosY\n        this.initBoard()\n        return new Promise<void>(resolve => {\n            let duration = 0.5\n            cc.tween(this.board).to(duration, { y: bY }, { easing: 'backOut' })\n                .call(() => {\n                    this.isBoardShowing = isShow\n                    resolve()\n                }).start()\n            this.fade(this.black_mask, opa, duration)\n        })\n    }\n\n    private currAnswer = 'C'\n\n    getBtn(name) {\n        if (name == 'C') {\n            return this.btn_c\n        } else {\n            return this.btn_d\n        }\n    }\n\n    /**\n     * 点击提示\n     */\n    scaleBtn(btn: cc.Node) {\n        let duration = 0.2\n        return cc.tween(btn)\n            .to(duration, { scale: 1.2 }, { easing: 'sineOut' })\n            .to(duration, { scale: 1 }, { easing: 'sineIn' })\n            .to(duration, { scale: 1.2 }, { easing: 'sineOut' })\n            .to(duration, { scale: 1 }, { easing: 'sineIn' })\n            .start()\n    }\n\n    currResolve = null\n    tweenBtnC: cc.Tween<cc.Node> = null\n    tweenBtnD: cc.Tween<cc.Node> = null\n\n    async waitingForAnswer(answer) {\n        return new Promise(async resolve => {\n            this.canDrag = true\n            this.currAnswer = answer\n            this.currResolve = resolve\n            if (this.currStage >= 1 && this.currStage <= 4) {\n                this.enableBtns(true)\n                this.startSelectTimer(5, () => {\n                    this.tweenBtnC = this.scaleBtn(this.btn_c)\n                    this.tweenBtnD = this.scaleBtn(this.btn_d)\n                    this.startSelectTimer(6)\n                })\n            } else if (this.currStage == 5 || this.currStage == 6) {\n                let from = cc.find('bletter1', this.board)\n                let to = this.btn_c\n                if (this.currStage == 6) {\n                    // from = cc.find('bletter5', this.board)\n                    to = this.btn_d\n                }\n                if (!this.dragged) {\n                    this.hand.playDragTo(from, to, true)\n                    // console.log('playDragTo returned >>>>>>>>>>')\n                }\n            }\n            // if (this.isDev) {\n            //     if (this.currStage >= 7 && this.currStage <= 8) {\n            //         this.currAnswer = 'C'\n            //         this.enableBtns(true)\n            //     }\n            // } else {\n    \n            // }\n    \n            if (this.currStage >= 7 && this.currStage <= 8) {\n                // this.currAnswer = 'C'\n                // this.enableBtns(true)\n                await this.playVoice('record')\n                this.record(this.currWord)\n            }\n        })\n    }\n\n\n\n    async onVoice() {\n        this.playTrumpet('voice')\n        await this.playVoice(this.currAnswer)\n        this.playTrumpet('voice_end')\n    }\n\n    /**\n     * 选择C or D\n     */\n    async onSelected(btn, answer: string) {\n        this.enableBtns(false)\n        this.setHighlight(answer)\n        this.timer_select = 0\n        if (this.tweenBtnC != null) {\n            this.tweenBtnC.stop()\n            this.tweenBtnC = null\n            this.btn_c.scale = 1\n        }\n        if (this.tweenBtnD != null) {\n            this.tweenBtnD.stop()\n            this.tweenBtnD = null\n            this.btn_d.scale = 1\n        }\n        if (this.currAnswer != answer) {\n            this.playVoice('wrong')\n            await this.shakeBtn(answer)\n            this.enableBtns(true)\n            this.startSelectTimer(5)\n            this.wrongNum++\n        } else {\n            if (this.currResolve) {\n                const cb = this.currResolve\n                this.currResolve = null\n                console.log('answer is right, continue>>>>>')\n                this.playVoice('right')\n                // await this.tigo.play(Unit.TIGO_HAPPY)\n                this.tigo.play(Unit.TIGO_IDLE, true)\n                let stars = 3\n                if (this.wrongNum == 0) {\n                    stars = 3\n                } else if (this.wrongNum == 1) {\n                    stars = 2\n                } else {\n                    stars = 1\n                }\n                this.total_star += stars\n                Tigo.callAppToCollect(this.gid, 1004, stars);\n                await this.coin_board.setCoinAni(stars)\n                // await this.sleep(1)\n                cb()\n            }\n        }\n    }\n\n    setHighlight(name?: string) {\n        if (!name) {\n            this.highlight.active = false\n            return\n        }\n        this.highlight.active = true\n        let btn = this.getBtn(name)\n        this.highlight.x = btn.x\n    }\n\n    async shakeBtn(name) {\n        let btn = this.getBtn(name)\n        return this.shakeBtnByNode(btn)\n    }\n\n    async shakeBtnByNode(btn: cc.Node) {\n        let duration = 0.2\n        let currX = btn.x\n        return new Promise<void>(resolve => {\n            cc.tween(btn)\n                .to(duration / 2, { x: currX - 10 })\n                .to(duration / 2, { x: currX + 10 })\n                .to(duration / 2, { x: currX - 10 })\n                .to(duration / 2, { x: currX + 10 })\n                .to(duration / 2, { x: currX })\n                .call(() => {\n                    resolve()\n                }).start()\n        })\n    }\n\n    /**\n     * 播放喇叭动画\n     */\n    playTrumpet(name) {\n        this.trumpet.getComponent(cc.Animation).play(name)\n    }\n\n    stopTrumpet() {\n        this.trumpet.getComponent(cc.Animation).stop()\n    }\n\n    private isFollow = false\n    private currFollowUnit = null\n\n    /**\n     * 跟随地图\n     * @param b \n     */\n    followMap(b: boolean, target?: cc.Node) {\n        this.currFollowUnit = target\n        this.isFollow = b\n    }\n\n    private getSafeMapX(xInMap: number) {\n        if (xInMap < this.screenSize.width / 2) {\n            xInMap = this.screenSize.width / 2\n        }\n        if (xInMap > this.map.width - this.screenSize.width / 2) {\n            xInMap = this.map.width - this.screenSize.width / 2\n        }\n        return xInMap\n    }\n\n    /**\n     * 走地图\n     * @param xInMap 地图中的坐标（左对齐） \n     */\n    walkMap(xInMap: number) {\n        xInMap = this.getSafeMapX(xInMap)\n        let destX = (-xInMap + this.screenSize.width / 2) * this.currMapScale\n        if (destX > this.map.x) {\n            // console.log('不往后走>>>>>')\n            return\n        }\n        this.map.x = destX\n    }\n\n    /**\n     * 移动地图一段位移到某处(对齐到屏幕中心)\n     * @param xInMap 地图中的坐标（左对齐） \n     */\n    async moveMap(xInMap: number) {\n        let duration = Math.abs(-this.map.x - xInMap) * this.currMapScale / Unit.walkSpeed\n        // if (this.isDev) {\n        duration = 1\n        // }\n        xInMap = this.getSafeMapX(xInMap)\n        return new Promise<void>(resolve => {\n            cc.tween(this.map).to(duration, { x: (-xInMap + this.screenSize.width / 2) * this.currMapScale }, { easing: 'sineInOut' }).call(() => {\n                resolve()\n            }).start()\n        })\n    }\n\n    async fade(target: cc.Node, opa: number, duration = 1) {\n        return new Promise<void>(resolve => {\n            cc.tween(target).to(duration, { opacity: opa }, { easing: 'sineOut' }).call(() => {\n                resolve()\n            }).start()\n        })\n    }\n\n    timer_drag = 0\n    timer_drag_callback: Function = null\n\n    startDragTimer(time: number, callback: Function = null) {\n        this.timer_drag = time\n        if (callback != null) {\n            this.timer_drag_callback = callback\n        }\n    }\n\n    timer_select = 0\n    timer_select_callback: Function = null\n\n    startSelectTimer(time: number, callback: Function = null) {\n        this.timer_select = time\n        if (callback != null) {\n            this.timer_select_callback = callback\n        }\n    }\n\n    update(dt: number) {\n        if (this.isFollow) {\n            if (this.currFollowUnit) {\n                this.walkMap(this.currFollowUnit.x)\n            }\n        }\n\n        let barx = -this.map.x / this.currMapScale + this.progressBar.width / 2 + 130\n        this.progressBar.x = barx\n\n        if (this.farBg) {\n            //同步进度\n            let cur = (-this.map.x - this.mapLeft) / (this.mapRight - this.mapLeft)\n            // cur = 0.5\n            let x = cur * (this.barRight - this.barLeft) + this.barLeft\n            this.cursor.x = x\n\n            let min = this.bgLeft\n            let max = this.bgRight\n\n            this.farBg.x = this.bgRight - (this.farBg.width - this.screenSize.width) * cur\n        }\n\n        if (this.timer_drag > 0) {\n            this.timer_drag -= dt\n            if (this.timer_drag <= 0) {\n                if (this.timer_drag_callback != null) {\n                    let cb = this.timer_drag_callback\n                    cb()\n                }\n            }\n        }\n\n        if (this.timer_select > 0) {\n            this.timer_select -= dt\n            if (this.timer_select <= 0) {\n                if (this.timer_select_callback != null) {\n                    let cb = this.timer_select_callback\n                    cb()\n                }\n            }\n        }\n    }\n\n    async playVoice(name: string, delay: number = 0) {\n        if (name != 'wrong' && name != 'right' && name != 'try again' && name != 'record') {\n            this.playTrumpet('voice')\n        }\n        return new Promise<void>(async resolve => {\n            // if (name == 'destroyed' || name == 'disappear' || name == 'slide' || name == 'machine') {\n            //     await this.sleep(0.3)\n            // }\n            if (delay > 0) {\n                await this.sleep(delay)\n            }\n            switch (name) {\n                case 'Big C':\n                    AudioManager.stopEffect()\n                    AudioManager.playEffect('Float', 'sound/big C', () => {\n                        resolve()\n                    })\n                    break;\n                case 'Small c':\n                    AudioManager.stopEffect()\n                    AudioManager.playEffect('Float', 'sound/small c', () => {\n                        resolve()\n                    })\n                    break;\n                case 'Big D':\n                    AudioManager.stopEffect()\n                    AudioManager.playEffect('Float', 'sound/big D', () => {\n                        resolve()\n                    })\n                    break;\n                case 'Small d':\n                    AudioManager.stopEffect()\n                    AudioManager.playEffect('Float', 'sound/small d', () => {\n                        resolve()\n                    })\n                    break;\n                case 'listen and click':\n                    AudioManager.playEffect('Float', 'sound/listen_and_click', () => {\n                        resolve()\n                    })\n                    break;\n                case 'Listen and say, C.':\n                    AudioManager.playEffect('Float', 'sound/listen and say', () => {\n                        this.scheduleOnce(() => {\n                            AudioManager.playEffect('Float', 'sound/C', () => {\n                                resolve()\n                            })\n                        }, 1)\n                    })\n                    break;\n                case 'Listen and say, D.':\n                    AudioManager.playEffect('Float', 'sound/listen and say', () => {\n                        this.scheduleOnce(() => {\n                            AudioManager.playEffect('Float', 'sound/D', () => {\n                                resolve()\n                            })\n                        }, 1)\n                    })\n                    break;\n                case 'C':\n                    AudioManager.playEffect('Float', 'sound/C', () => {\n                        resolve()\n                    })\n                    break;\n                case 'D':\n                    AudioManager.playEffect('Float', 'sound/D', () => {\n                        resolve()\n                    })\n                    break;\n                case 'find the \"c\" in the words':\n                    AudioManager.playEffect('Float', 'sound/find the C in the words', () => {\n                        resolve()\n                    })\n                    break;\n                case 'find the \"d\" in the words':\n                    AudioManager.playEffect('Float', 'sound/find the D in the words', () => {\n                        resolve()\n                    })\n                    break;\n                case 'Drag and drop':\n                    AudioManager.playEffect('Float', 'sound/drag and drop', () => {\n                        resolve()\n                    })\n                    break;\n                case 'blink':\n                    AudioManager.playEffect('Float', 'sound/SE_qihuanpiaoliu_01', () => {\n                        resolve()\n                    })\n                    break;\n                case 'appear':\n                    AudioManager.playEffect('Float', 'sound/SE_qihuanpiaoliu_02', () => {\n                        resolve()\n                    })\n                    break;\n                case 'water':\n                    AudioManager.playEffect('Float', 'sound/SE_qihuanpiaoliu_03', () => {\n                        resolve()\n                    })\n                    break;\n                case 'slide':\n                    AudioManager.playEffect('Float', 'sound/SE_qihuanpiaoliu_04', () => {\n                        resolve()\n                    })\n                    break;\n                case 'wave':\n                    AudioManager.playEffect('Float', 'sound/SE_qihuanpiaoliu_05', () => {\n                        resolve()\n                    })\n                    break;\n                case 'walk':\n                    AudioManager.playEffect('Float', 'sound/SE_qihuanpiaoliu_06', () => {\n                        resolve()\n                    })\n                    break;\n                case 'dart':\n                    AudioManager.playEffect('Float', 'sound/SE_qihuanpiaoliu_07', () => {\n                        resolve()\n                    })\n                    break;\n                case 'machine':\n                    AudioManager.playEffect('Float', 'sound/SE_qihuanpiaoliu_08', () => {\n                        resolve()\n                    })\n                    break;\n                case 'jump':\n                    AudioManager.playEffect('Float', 'sound/SE_qihuanpiaoliu_09', () => {\n                        resolve()\n                    })\n                    break;\n                case 'open':\n                    AudioManager.playEffect('Float', 'sound/SE_qihuanpiaoliu_10', () => {\n                        resolve()\n                    })\n                    break;\n                case 'destroyed':\n                    AudioManager.playEffect('Float', 'sound/SE_qihuanpiaoliu_11', () => {\n                        resolve()\n                    })\n                    break;\n                case 'disappear':\n                    AudioManager.playEffect('Float', 'sound/SE_qihuanpiaoliu_12', () => {\n                        resolve()\n                    })\n                    break;\n                case 'box':\n                    AudioManager.playEffect('Float', 'sound/SE_qihuanpiaoliu_13', () => {\n                        resolve()\n                    })\n                    break;\n                case 'wrong':\n                    AudioManager.playEffect('Float', 'sound/game_error', () => {\n                        resolve()\n                    })\n                    break;\n                case 'right':\n                    AudioManager.playEffect('common_en', 'sound/game_right', () => {\n                        resolve()\n                    })\n                    break;\n                case 'try again':\n                    AudioManager.playEffect('common_en', 'sound/try_again', () => {\n                        resolve()\n                    })\n                    break;\n                case 'record':\n                    AudioManager.playEffect('common_en', 'sound/record', () => {\n                        resolve()\n                    })\n                    break;\n                default:\n                    // this.showTip('播放音频:' + name)\n                    AudioManager.playEffect('Float', name, () => {\n                        resolve()\n                    })\n                    break;\n            }\n            // await this.sleep(3)\n            // resolve()\n        })\n    }\n\n    showTip(msg) {\n        this.tip.string = msg\n        cc.tween(this.tip.node).to(0.5, { opacity: 255 }, { easing: 'sineOut' }).delay(2).to(0.5, { opacity: 0 }, { easing: 'sineOut' }).start()\n    }\n\n    /**\n     * 移动对象\n     * @param target \n     * @param destX \n     * @param duration \n     * @returns \n     */\n    async moveTo(target: cc.Node, destX: number) {\n        let duration = (destX - target.x) / Unit.walkSpeed\n        const A = 20\n        return new Promise<void>(resolve => {\n            cc.tween(target)\n                .parallel(\n                    cc.tween().to(duration, { x: destX }).call(() => {\n                        resolve()\n                    }),\n                    cc.tween().repeat(2, cc.tween().by(duration / 8, { y: -A / 2 }, { easing: 'sineOut' }).by(duration / 4, { y: A }, { easing: 'sineInOut' }).by(duration / 8, { y: -A / 2 }, { easing: 'sineIn' }))\n                )\n                .start()\n        })\n    }\n\n    async onBoat(target: cc.Node, isOn: boolean, delay: number) {\n        let duration = 0.2\n        let A = 0\n        if (isOn) {\n            A = 12\n        } else {\n            A = -10\n        }\n        return new Promise<void>(resolve => {\n            cc.tween(target)\n                .delay(delay)\n                .by(duration, { y: -A }, { easing: 'sineOut' })\n                .by(duration, { y: A }, { easing: 'backOut' })\n                .delay(0.5)\n                .call(() => {\n                    resolve()\n                })\n                .start()\n        })\n    }\n\n    record_num = 0\n\n    record(word: string) {\n        console.log(\"record begin\")\n        this.mic.active = true\n        this.mic.getComponent(recordAin).initeAniFun(3)\n        this.currAction = ''\n        Tigo.callAppToRecord(3000, word)\n        if (this.isDev) {\n            this.scheduleOnce(() => {\n                this.receiveAppData({ action: 'TiGoRecordFinish', param: { path: '' } })\n                this.scheduleOnce(() => {\n                    this.receiveAppData({ action: 'TiGoVoiceEvaluationFinish', param: { code: '200', score: 30 } })\n                }, 2)\n            }, 3)\n        }\n    }\n\n    wrongNum = 0\n    async playRight(score) {\n        if (this.currResolve) {\n            const cb = this.currResolve\n            this.currResolve = null\n            console.log('answer is right, continue>>>>>')\n            // await this.tigo.play(Unit.TIGO_HAPPY)\n            this.tigo.play(Unit.TIGO_IDLE, true)\n            Tigo.callAppToCollect(this.gid, 1004, score);\n            this.playVoice('right')\n            if (score < 1) {\n                score = 1\n            }\n            if (score > 3) {\n                score = 3\n            }\n            this.total_star += score\n            await this.coin_board.setCoinAni(score)\n            // this.sleep(1)\n            cb()\n        }\n    }\n\n    async playWrong() {\n        this.wrongNum++\n        if (this.wrongNum >= 3) {\n            this.playRight(1)\n            return\n        }\n        // this.shakeBtn('C')\n        await this.playVoice('try again')\n        await this.sleep(1)\n        await this.playVoice('record')\n        this.record(this.currWord)\n    }\n\n    currAction = ''\n    currWord = ''\n    /**\n     * 录音回调\n     * @param data \n     * @returns \n     */\n    receiveAppData(data) {\n        console.warn(\"offbus:receiveAppData  ====  \" + JSON.stringify(data));\n        switch (data.action) {\n            case 'TiGoRecordFinish':\n                if (this.currAction == '') {\n                    this.currAction = data.action\n                    Tigo.callAppToResult(this.currWord, data.param.path)\n                    var n = Number(GameData.record_num);\n                    n += 1;\n                    GameData.record_num = n.toString();\n                    console.warn('record finished >>>>>>>>>')\n                }\n                break\n            case 'TiGoVoiceEvaluationFinish':\n                if (this.currAction == 'TiGoRecordFinish') {\n                    this.mic.active = false\n                    this.currAction = data.action\n                    if (parseInt(data.param.code) == 200) {\n                        console.warn('evaluation code 200 >>>>>>>>>' + this.currWord)\n                        if (parseInt(data.param.score) > 0) {\n                            this.playRight(parseInt(data.param.score))\n                        } else {\n                            this.playWrong()\n                        }\n\n                    } else {\n                        console.warn('evaluation failed >>>>>>>>>' + this.currWord)\n                        this.playWrong()\n                    }\n                }\n                break\n            default:\n                break;\n        }\n    }\n}\n","export default class FloatUtil {\n    static convertToNodeSpace(src: cc.Node, dest: cc.Node, xy: cc.Vec2 | number, y?: number) {\n        let worldPos: cc.Vec2\n        if (typeof xy == 'object') {\n            worldPos = src.convertToWorldSpaceAR(xy)\n        } else {\n            worldPos = src.convertToWorldSpaceAR(cc.v2(xy, y))\n        }\n        let nodePos = dest.convertToNodeSpaceAR(worldPos)\n        return nodePos\n    }\n}","// Learn TypeScript:\n//  - https://docs.cocos.com/creator/manual/en/scripting/typescript.html\n// Learn Attribute:\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\n\nimport AudioManager from \"../../../kit/system/audio/AudioManager\";\n\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class Unit extends cc.Component {\n\n    @property({ type: sp.Skeleton, displayName: 'spine' })\n    spine: sp.Skeleton = null\n\n\n    @property({ type: cc.Node, displayName: '参考点' })\n    anchor: cc.Node = null\n\n    vine: sp.spine.Attachment = null\n\n    @property({ displayName: '名称' })\n    spine_name = ''\n\n    static NAME_TIGO = 'tigo'\n\n    static TIGO_HAPPY = 'happy'\n    static TIGO_IDLE = 'idle'\n    static TIGO_JUMP = 'jump'\n    static TIGO_MOVE = 'move'\n    static TIGO_SCRATCH = 'naotou'\n    static TIGO_SHOOT1 = 'shoot1'\n    static TIGO_SHOOT2 = 'shoot2'\n    static TIGO_SHOOT3 = 'shoot3'\n    static TIGO_SURPRISE = 'surprise'\n    static TIGO_WALK = 'walk'\n    static TIGO_GRAB = 'zhua'\n    static MONSTER1_IDLE = 'daiji'\n    static MONSTER1_HITTED = 'hit'\n    static MONSTER1_DISAPPEAR = 'xiaoshi'\n    static MONSTER2_IDLE = 'daiji'\n    static MONSTER2_HITTED = 'beijida'\n    static MONSTER2_DISAPPEAR = 'xiaoshi'\n    static MONSTER3_IDLE = 'daiji_idle'\n    static MONSTER3_HITTED = 'shouji_idle'\n    static MONSTER3_DISAPPEAR = 'xiaoshi_idle'\n    static SNAIL_IDLE = 'idle'\n    static SNAIL_HAPPY = 'happy'\n    static SNAIL_SWIM = 'swim'\n\n    static BOX_CLOSED = 'idle2'\n    static BOX_OPENING = 'open'\n    static BOX_OPENED = 'idle1'\n\n    static JUMP_DUARATION = 1\n\n    onLoad() {\n        if (this.spine_name == Unit.NAME_TIGO) {//tigo隐藏藤条\n            let slot = this.spine.findSlot('tengtiao') as sp.spine.Slot\n            this.vine = slot.getAttachment()\n            this.showVine(false)\n        }\n        this.showVine(false)\n        this.spine.setCompleteListener(() => {\n            if (this.currResolve) {\n                const cb = this.currResolve\n                this.currResolve = null\n                cb()\n            }\n        })\n    }\n\n    start() {\n    }\n\n    private currResolve: Function = null\n\n    async play(name: string, loop = false) {\n        return new Promise<void>((resolve) => {\n            this.spine.setAnimation(0, name, loop)\n            this.currResolve = resolve\n        })\n    }\n\n    async jumpTo(dest: cc.Node | cc.Vec2) {\n        AudioManager.playEffect('Float','sound/SE_qihuanpiaoliu_09')\n        return new Promise<void>(async (resolve) => {\n            cc.tween(this.node).delay(0.3).to(0.4, { x: dest.x, y: dest.y }, { easing: 'sineInOut' }).start()\n            await this.play(Unit.TIGO_JUMP, false)\n            resolve()\n        })\n    }\n\n    static walkSpeed = 400//250 // px/s\n    async walkTo(dest: cc.Node | cc.Vec2) {\n        AudioManager.playLoopEffect('Float','sound/SE_qihuanpiaoliu_06')\n        let duration = (dest.x - this.node.x) / Unit.walkSpeed\n        return new Promise<void>((resolve) => {\n            this.play(Unit.TIGO_WALK, true)\n            cc.tween(this.node).delay(0.1).to(duration, { x: dest.x }).call(() => {\n                AudioManager.stopLoopEffect('sound/SE_qihuanpiaoliu_06')\n                resolve()\n            }).start()\n        })\n    }\n\n    showVine(b: boolean) {\n        if (this.spine_name == Unit.NAME_TIGO) {//tigo隐藏藤条\n            let slot = this.spine.findSlot('tengtiao') as sp.spine.Slot\n            if (b) {\n                slot.setAttachment(this.vine)\n            } else {\n                slot.setAttachment(null)\n            }\n        }\n    }\n\n}\n"],"file":"index.js"}