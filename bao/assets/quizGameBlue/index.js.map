{"version":3,"sources":["assets/bundles/quizGameBlue/scripts/QuizGameBlueConfig.ts","assets/bundles/quizGameBlue/scripts/QuizGameBlue.ts"],"names":["AudioManager_1","require","QuizGameBlue_1","EleSpineName","exports","SpineType","QuizBlueSoundConfig","round1CorrectConfig","name","Chailiwu","loop","func","default","playEffect","QUIZGAMEBLUE","SE_guoshengri02","zhanshi","zhanshi2","duration","SE_guoshengri03","round1CorrectWrong","Chailiwu2","kunhuo","kunhuo2","SE_guoshengri07","round2CorrectConfig","chuipaopao","chuipaopao2","round2WrongConfig","chuipaopao2Huai","kunhuoGun","kunhuoGun1","SE_guoshengri08","SpineUtils_1","CompEnum_1","TemplateGameBase_1","QuizGameBlueConfig_1","_a","cc","_decorator","ccclass","property","MOVE_SPEED","QuizGameBlue","_super","__extends","_this","apply","this","arguments","eleSpine","cakeSpine","idlePosNode","xiangce","xiangzheng","iconOpen","decBox","decZhuozi","guidHand","decoNodes","targetPos1","selectTargetNode","selectCorrect","guidFun","prototype","start","node","zIndex","roundNodeArr","map","playMusic","BG","guidRound12","nodeArr","curRoundIndex","children","tween","call","to","scale","openAniStart","log","playOpenAniStart1","_b","sent","bind","schedule","playEleAnimation","daiji","active","playOpenAniStart3","scheduleOnce","playOpenAniStart4","roundStateTypeChanged","RoundStateType","RoundOpenAniComplete","roundStart","MaxRoundIndex","endAniStart","console","changeSpine","ce","Walk","playWalkSound","move2TargetPos","v3","x","y","zheng","skinName","setSkin","Promise","resolve","reject","scaleX","instantiate","parent","pos","position","add","SpineUtils","playSpineAniByConfig","then","isValid","eleMove2TargetPosWithAni","curRoundResult","win","playLoopEffect","SE_guoshengri04","stopLoopEffect","WalkWithGun","setAnimation","addAnimation","SE_guoshengri05","Chuiqi","round3CorrectConfig_1","gaoxing","SE_guoshengri06","SE_guoshengri09","round3WrongConfig_1","RoundEndAniComplete","startAudioCallFunc","startRecordAudio","CC_PREVIEW","onRecordResult","result","data","eventName","success","RoundComplete","__awaiter","naqiang","kan","moveAniName","stayAniName","aniName","le","setTrackCompleteListener","spineName","skeletonData","p","len","sub","time","itemTouchCall","event","curRoundStateType","RoundStart","unschedule","target","currentTarget","worldPos","convertToWorldSpaceAR","convertToNodeSpaceAR","n","Number","btn","getComponent","Button","interactable","play","SE_guoshengri01","unregisterEvent","__decorate","type","sp","Skeleton","displayName","Node","SkeletonData"],"mappings":"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","sourcesContent":["import { AnimationConfig } from \"../../../common/structure/CompInterface\";\nimport AudioManager from \"../../../kit/system/audio/AudioManager\";\nimport { QUIZGAMEBLUE } from \"./QuizGameBlue\";\n\nexport enum EleSpineName {\n    Walk = 'walk2',\n    WalkWithGun = 'walk',\n    Chuiqi = 'chuiqi',\n    Chailiwu = 'chai li wu',\n    Chailiwu2 = 'chai li wu2',\n    chuipaopao = 'chuipaopao',\n    chuipaopao2 = 'chuipaopao2',\n    chuipaopao2Huai = 'chuipaopao2-huai',\n    daiji = 'daiji',\n    gaoxing = 'gaoxing',\n    ku = 'ku',\n    kunhuo = 'kunhuo',\n    kunhuo2 = 'kunhuo2',\n    qidai = 'qidai',\n    zhanshi = 'zhanshi',\n    zhanshi2 = 'zhanshi2',\n    naqiang = 'naqiang',\n    kunhuoGun = 'kunhuo-kan',\n    kunhuoGun1 = 'kunhuo2-kan',\n    kan = 'kan',\n}\n\nexport enum SpineType {\n    ce = \"xiang-ce\",\n    zheng = \"xiang-zhengmian\"\n}\n\nexport enum QuizBlueSoundConfig {\n    BG = 'audios/BGM_guoshengri_01', //背景\n    SE_guoshengri01 = 'audios/SE_guoshengri01', //八宝走动的音效\n    SE_guoshengri02 = 'audios/SE_guoshengri02', //八宝背对屏幕拆盒子的音效\n    SE_guoshengri03 = 'audios/SE_guoshengri03', //八宝展示礼物时yeah~的音效\n    SE_guoshengri04 = 'audios/SE_guoshengri04', //八宝发射泡泡枪的泡泡的音效  循环\n    SE_guoshengri05 = 'audios/SE_guoshengri05', //八宝吹蛋糕的时候发出的夹杂着风声的大象叫声\n    SE_guoshengri06 = 'audios/SE_guoshengri06', //八宝高兴的哈哈笑声\n    SE_guoshengri07 = 'audios/SE_guoshengri07', //八宝疑惑的发出en？的声音\n    SE_guoshengri08 = 'audios/SE_guoshengri08', //八宝试图开了两次枪，没有泡泡发射出来，八宝看着枪发出疑惑的声音\n    SE_guoshengri09 = 'audios/SE_guoshengri09', //八宝吹蛋糕的时候发出的大象叫声加蛋糕飞走的声音\n}\n\nlet  round1CorrectConfig: AnimationConfig[] = [\n    {\n        name: EleSpineName.Chailiwu,\n        loop: false,\n        func:()=>{\n            AudioManager.playEffect(QUIZGAMEBLUE, QuizBlueSoundConfig.SE_guoshengri02);\n        }\n    },\n    {\n        name: EleSpineName.zhanshi,\n        loop: false\n    },\n    {\n        name: EleSpineName.zhanshi2,\n        loop: true,\n        duration: 3,\n        func: () => {\n            AudioManager.playEffect(QUIZGAMEBLUE, QuizBlueSoundConfig.SE_guoshengri03);\n        }\n    }\n];\n\nlet round1CorrectWrong: AnimationConfig[] = [\n    {\n        name: EleSpineName.Chailiwu2,\n        loop: false,\n        func: () => {\n            AudioManager.playEffect(QUIZGAMEBLUE, QuizBlueSoundConfig.SE_guoshengri02);\n        }\n    },\n    {\n        name: EleSpineName.kunhuo,\n        loop: false\n    },\n    {\n        name: EleSpineName.kunhuo2,\n        loop: true,\n        duration: 2,\n        func: () => {\n            AudioManager.playEffect(QUIZGAMEBLUE, QuizBlueSoundConfig.SE_guoshengri07);\n\n        }\n    }\n];\n\nlet round2CorrectConfig: AnimationConfig[] = [\n    {\n        name: EleSpineName.chuipaopao,\n        loop: false,\n    },\n    {\n        name: EleSpineName.chuipaopao2,\n        loop: true,\n        duration: 2\n    }\n];\n\nlet round2WrongConfig: AnimationConfig[] = [\n    {\n        name: EleSpineName.chuipaopao,\n        loop: false,\n    },\n    {\n        name: EleSpineName.chuipaopao2Huai,\n        loop: false,\n    },\n    {\n        name: EleSpineName.kunhuoGun,\n        loop: false,\n    },\n    {\n        name: EleSpineName.kunhuoGun1,\n        loop: true,\n        duration: 2,\n        func: () => {\n            AudioManager.playEffect(QUIZGAMEBLUE, QuizBlueSoundConfig.SE_guoshengri08);\n        }\n    },\n];\n\n\nexport { round1CorrectConfig, round1CorrectWrong, round2CorrectConfig, round2WrongConfig }","import { SpineUtils } from './../../../common/utils/SpineUtils';\nimport { RoundStateType } from \"../../../common/structure/CompEnum\";\nimport ResourcesManager, { ResourceType } from \"../../../kit/manager/ResourcesManager\";\nimport AudioManager from \"../../../kit/system/audio/AudioManager\";\nimport TemplateGameBase from \"../../templateGame/scripts/TemplateGameBase\";\nimport { SpineType, EleSpineName, round1CorrectConfig, round2CorrectConfig, round2WrongConfig, round1CorrectWrong, QuizBlueSoundConfig } from \"./QuizGameBlueConfig\";\nimport { AnimationConfig } from '../../../common/structure/CompInterface';\nconst {ccclass, property} = cc._decorator;\n\nexport const QUIZGAMEBLUE = 'quizGameBlue';\nconst MOVE_SPEED = 200;\n@ccclass\nexport default class QuizGameBlue extends TemplateGameBase {\n\n    @property({ type: sp.Skeleton, displayName: \"大象动画\" })\n    eleSpine: sp.Skeleton = null;\n\n    @property({ type: sp.Skeleton, displayName: \"蛋糕动画\" })\n    cakeSpine: sp.Skeleton = null;\n\n    @property({ type: cc.Node, displayName: \"大象待机位置\" })\n    idlePosNode: cc.Node = null;\n\n    @property({ type: sp.SkeletonData, displayName: \"大象侧面\" })\n    xiangce: sp.SkeletonData = null;\n\n    @property({ type: sp.SkeletonData, displayName: \"大象正面\" })\n    xiangzheng: sp.SkeletonData = null;\n\n    @property(cc.Node)\n    iconOpen: cc.Node = null;\n    @property(cc.Node)\n    decBox: cc.Node = null;\n    @property(cc.Node)\n    decZhuozi: cc.Node = null;\n\n    @property(cc.Node)\n    guidHand: cc.Node = null;\n\n    @property([cc.Node])\n    decoNodes: cc.Node[] = [];\n\n    targetPos1:cc.Vec3 = null;\n    selectTargetNode:cc.Node = null;\n    selectCorrect = false;\n    guidFun:()=>void = null\n\n    start(){\n        this.eleSpine.node.zIndex = 100;\n        this.roundNodeArr[2].zIndex = 110;\n        this.decBox.zIndex = 101;\n        this.decoNodes.map(node=>node.zIndex = 102);\n        //背景\n        AudioManager.playMusic( QUIZGAMEBLUE, QuizBlueSoundConfig.BG);\n    }\n\n    guidRound12(){\n        let nodeArr = this.roundNodeArr[this.curRoundIndex].children\n        // if (this.curRoundIndex == 2) {\n        //     let node = cc.find('bg/ItemsLayer', this.roundNodeArr[this.curRoundIndex])\n        //     nodeArr = node.children\n        // }\n        AudioManager.playEffect(QUIZGAMEBLUE, \"audios/blue\");\n        nodeArr.map((node)=>{\n            cc.tween(node)\n                .call(()=>{})\n                .to(0.15, { scale: 1.1 })\n                .to(0.15, { scale: 0.9 })\n                .to(0.15, { scale: 1.1 })\n                .to(0.15, { scale: 1 })\n                .start()\n        })\n    }\n\n    // 开场动画开始\n    async openAniStart() {\n        cc.log(\" openAniStart =====this.curRoundIndex: \", this.curRoundIndex)\n        switch (this.curRoundIndex) {\n            case 0:\n                await this.playOpenAniStart1();\n                this.guidFun = this.guidRound12.bind(this)\n                this.schedule(this.guidFun, 5);\n                break;\n            case 1:\n                this.playEleAnimation(EleSpineName.daiji, true, 1);\n                this.guidFun = this.guidRound12.bind(this)\n                this.schedule(this.guidFun, 5);\n                break;\n            case 2:\n                this.decBox.active = true;\n                await this.playOpenAniStart3();\n                this.scheduleOnce(() => {\n                    this.guidHand.active = false;\n                }, 2);\n                break;\n            default:\n                this.decZhuozi.active = true;\n                await this.playOpenAniStart4();\n                break;\n        }\n\n        this.roundStateTypeChanged(RoundStateType.RoundOpenAniComplete);\n    }\n\n    // // 开场动画播完\n    // openAniComplete() { }\n    // // 环节开始\n    roundStart() { \n        super.roundStart();\n        if (this.curRoundIndex == this.MaxRoundIndex - 1) {\n\n        } else {\n            AudioManager.playEffect(QUIZGAMEBLUE, \"audios/blue\")\n        }\n    }\n    // // 环节进行中 状态同步\n    // roundProceeding() { }\n    // 环节完成\n    // roundComplete(params: Comp2TemplateParams) { }\n    // 完成动画开始播放\n\n    \n    async endAniStart() { \n        console.log(\" endAniStart  ===this.curRoundIndex: \", this.curRoundIndex);\n        switch (this.curRoundIndex) {\n            case 0:\n            case 1:\n                await this.changeSpine(SpineType.ce);\n                this.playEleAnimation(EleSpineName.Walk, true, -1);\n                this.playWalkSound(true);\n                await this.move2TargetPos(cc.v3(this.targetPos1.x, this.eleSpine.node.y));\n                this.playWalkSound(false);\n                await this.changeSpine(SpineType.zheng);\n                let skinName = this.curRoundIndex == 0 ? 'jiqiren' : 'huoche';\n                this.eleSpine.setSkin(skinName);\n                if (this.selectCorrect) {\n                    await new Promise<void>((resolve, reject) => {\n                        this.eleSpine.node.scaleX = 1;\n                        round1CorrectConfig[1].func = ()=>{\n                            this.selectTargetNode.active = false;\n                            let node = cc.instantiate(this.iconOpen);\n                            node.parent = this.selectTargetNode.parent;\n                            let pos = this.selectTargetNode.position;\n                            node.position = pos.add(cc.v3(85. - 7));\n                        }\n                        SpineUtils.playSpineAniByConfig(this.eleSpine, round1CorrectConfig).then(() => resolve());\n                    });\n                    if (!cc.isValid(this.node)) {\n                        return\n                    }\n                    await new Promise<void>((resolve, reject) => {\n                        this.playWalkSound(true);\n                        this.eleMove2TargetPosWithAni(EleSpineName.Walk, this.idlePosNode.position, EleSpineName.daiji).then(() => {\n                            this.playWalkSound(false);\n                            resolve();\n                        });\n                    });\n                }else{\n                    this.eleSpine.setSkin(\"moren\");\n                    this.scheduleOnce(()=>{\n                        this.eleSpine.node.x = this.eleSpine.node.x -200\n                        this.selectTargetNode.active = false;\n                        let node = cc.instantiate(this.iconOpen);\n                        node.parent = this.selectTargetNode.parent;\n                        let pos = this.selectTargetNode.position;\n                        node.position = pos.add(cc.v3(85. - 7));\n                    }, 2.8);\n                    await new Promise<void>((resolve, reject) => {\n                        this.eleSpine.node.scaleX = 1;\n                        SpineUtils.playSpineAniByConfig(this.eleSpine, round1CorrectWrong).then(() => resolve());\n                    });\n                    if (!cc.isValid(this.node)) {\n                        return\n                    }\n                    await new Promise<void>((resolve, reject) => {\n                        this.playWalkSound(true);\n                        this.eleMove2TargetPosWithAni(EleSpineName.Walk, this.idlePosNode.position, EleSpineName.daiji).then(() => {\n                            this.playWalkSound(false);\n                            resolve();\n                        });\n                    });\n                }\n                \n                break;\n            case 2:\n                this.decBox.active = false;\n                this.eleSpine.setSkin('shuiqiang');\n                if (this.curRoundResult.win == 1) {\n                    this.scheduleOnce(()=>{\n                        AudioManager.playLoopEffect(QUIZGAMEBLUE, QuizBlueSoundConfig.SE_guoshengri04);\n                    }, 0.5);\n                    await new Promise<void>((resolve, reject) => {\n                        SpineUtils.playSpineAniByConfig(this.eleSpine, round2CorrectConfig).then(() => resolve());\n\n                    });\n                    AudioManager.stopLoopEffect(QUIZGAMEBLUE, QuizBlueSoundConfig.SE_guoshengri04);\n                } else {\n                    await new Promise<void>((resolve, reject) => {\n                        SpineUtils.playSpineAniByConfig(this.eleSpine, round2WrongConfig).then(() => resolve());\n\n                    });\n                }\n                if (!cc.isValid(this.node)) {\n                    return\n                }\n                await new Promise<void>((resolve, reject) => {\n                    this.playWalkSound(true);\n                    this.eleMove2TargetPosWithAni(EleSpineName.WalkWithGun, this.idlePosNode.position, EleSpineName.daiji).then(() => {\n                        this.playWalkSound(false);\n                        resolve();\n                    });\n                });\n                // await this.playEleAnimation(EleSpineName.daiji, false, 1);\n                break;\n            case 3:\n                if (this.curRoundResult.win == 1) {\n                    await this.changeSpine(SpineType.ce);\n                    this.scheduleOnce(() => {\n                        this.cakeSpine.setAnimation(0, 'lazhu-mie', false);\n                        this.cakeSpine.addAnimation(0, 'lazhu-mie2', true);\n                    }, 1.2);\n                    this.scheduleOnce(() => {\n                        AudioManager.playEffect(QUIZGAMEBLUE, QuizBlueSoundConfig.SE_guoshengri05);\n                    }, 0.8);\n                    await this.playEleAnimation(EleSpineName.Chuiqi, false, -1);\n                    await this.changeSpine(SpineType.zheng);\n                    let round3CorrectConfig: AnimationConfig[] = [\n                        {\n                            name: EleSpineName.gaoxing,\n                            loop: true,\n                            duration: 3,\n                            func:()=>{\n                                AudioManager.playEffect(QUIZGAMEBLUE, QuizBlueSoundConfig.SE_guoshengri06);\n                            }\n                        }\n                    ];\n                    await new Promise<void>((resolve, reject) => {\n                        SpineUtils.playSpineAniByConfig(this.eleSpine, round3CorrectConfig).then(() => resolve());\n                    });\n                } else {\n                    await this.changeSpine(SpineType.ce);\n                    this.scheduleOnce(() => {\n                        this.cakeSpine.setAnimation(0, 'lazhu-fei', false);\n                    }, 1.2);\n                    this.scheduleOnce(() => {\n                        AudioManager.playEffect(QUIZGAMEBLUE, QuizBlueSoundConfig.SE_guoshengri09);\n                    }, 0.4);\n                    \n                    await this.playEleAnimation(EleSpineName.Chuiqi, false, -1);\n                    await this.changeSpine(SpineType.zheng);\n\n                    let round3WrongConfig: AnimationConfig[] = [\n                        {\n                            name: EleSpineName.kunhuo,\n                            loop: false,\n                        },\n                        {\n                            name: EleSpineName.kunhuo2,\n                            loop: true,\n                            duration: 3\n                        }\n                    ];\n                    await new Promise<void>((resolve, reject) => {\n                        SpineUtils.playSpineAniByConfig(this.eleSpine, round3WrongConfig).then(() => resolve());\n                    });\n                }\n                \n                break;\n\n            default:\n                break;\n        }\n        console.log(\" endAniStart  ===this.curRoundIndex: 1111\", this.curRoundIndex);\n        this.roundStateTypeChanged(RoundStateType.RoundEndAniComplete);\n    }\n    // // 完成动画播放结束\n    // endAniComplete() { }\n\n\n    startAudioCallFunc() {\n        cc.log(\"QuizGameBlue start record!\")\n        this.startRecordAudio(\"蓝色\", QUIZGAMEBLUE, \"audios/blue\", \"texture/blue\");\n        if (CC_PREVIEW) {\n            this.scheduleOnce(() => {\n                let result = { data: { success: false, eventName: \"ResultCb\" } }\n                this.onRecordResult(result);\n            }, 4);\n        }\n    }\n\n    onRecordResult(result) {\n        cc.log(\"onRecordResult ===== \", result)\n        if (result.data.eventName == 'ResultCb') {\n            if (result.data.success) {\n                this.roundStateTypeChanged(RoundStateType.RoundComplete, { win: 1 })\n            }\n            else {\n                this.roundStateTypeChanged(RoundStateType.RoundComplete, { win: 0 })\n            }\n        }\n    }\n\n    playOpenAniStart1(){\n        return new Promise<void>((resolve, reject) => {\n            this.playWalkSound(true);\n            this.eleMove2TargetPosWithAni(EleSpineName.Walk, this.idlePosNode.position, EleSpineName.daiji).then(() => {\n                this.playWalkSound(false);\n                resolve();\n            });\n        })\n    }\n\n\n    playOpenAniStart3() {\n        return new Promise<void>(async (resolve, reject) => {\n            this.eleSpine.setSkin(\"shuiqiang\");\n            // await this.playEleAnimation(EleSpineName.daiji, false, 1);\n            await this.playEleAnimation(EleSpineName.naqiang, false, 1);\n            await this.changeSpine(SpineType.ce);\n            let pos = this.decBox.position;\n            let scaleX = this.eleSpine.node.x > pos.x ? 1 : -1;\n            this.playWalkSound(true);\n            this.playEleAnimation(EleSpineName.WalkWithGun, true, scaleX);\n            await this.move2TargetPos(cc.v3(pos.x+50, this.eleSpine.node.y));\n            this.playWalkSound(false);\n            await this.changeSpine(SpineType.zheng);\n            await this.playEleAnimation(EleSpineName.kan, false, scaleX);\n            this.playEleAnimation(EleSpineName.daiji, true, 1);\n            resolve();\n        });\n    }\n\n    playOpenAniStart4() {\n        return new Promise<void>(async (resolve, reject) => {\n            this.eleSpine.setSkin(\"moren\");\n            // await this.playEleAnimation(EleSpineName.daiji, false, 1);\n            this.playEleAnimation(EleSpineName.daiji, true, 1);\n            resolve();\n        });\n    }\n\n    async eleMove2TargetPosWithAni(moveAniName, pos, stayAniName) {\n        await this.changeSpine(SpineType.ce);\n        let scaleX = this.eleSpine.node.x > pos.x ? 1:-1;\n        this.playEleAnimation(moveAniName, true, scaleX);\n        await this.move2TargetPos(pos);\n        await this.changeSpine(SpineType.zheng);\n        this.playEleAnimation(stayAniName, true, 1);\n    }\n\n\n    /**\n     * \n     * @param aniName \n     * @param loop \n     * @param scale 朝向\n     */\n    playEleAnimation(aniName, loop = true, scale = 1){\n        // this.eleSpine.node.scaleX = 1;\n        if (loop) {\n            Promise.resolve().then(() => {\n                this.eleSpine.node.scaleX = scale;\n                let le = this.eleSpine.setAnimation(0, aniName, loop);\n            });\n        }else{\n            return new Promise<void>((resolve, reject) => {\n                this.eleSpine.node.scaleX = scale;\n                let le = this.eleSpine.setAnimation(0, aniName, loop);\n                this.eleSpine.setTrackCompleteListener(le, () => {\n                    resolve();\n                })\n            });\n        }\n    }\n\n    changeSpine(spineName:SpineType){\n        return new Promise<void>((resolve, reject) => {\n            // ResourcesManager.instance.loadRes(QUIZGAMEBLUE, `spine/${spineName}`, ResourceType.Normal, sp.SkeletonData, (err, res: sp.SkeletonData) => {\n            //     if (err) {\n            //         cc.error(err);\n            //         resolve();\n            //         return\n            //     }\n            //     this.eleSpine.skeletonData = res;\n            //     resolve();\n            // });\n            this.eleSpine.skeletonData = (spineName == SpineType.ce) ? this.xiangce : this.xiangzheng;\n            resolve();\n        })\n        \n    }\n\n    move2TargetPos(pos){\n        return new Promise<void>((resolve, reject) => {\n            let p = this.eleSpine.node.position;\n            let len = p.sub(pos).len()\n            let time = len / MOVE_SPEED;\n            cc.tween(this.eleSpine.node).to(time,{\n                    position: pos\n                }\n            )\n            .call(()=>{\n                resolve()\n            })\n            .start();\n        })\n    }\n\n    itemTouchCall(event:cc.Event.EventTouch, data) {\n        if (this.curRoundStateType < RoundStateType.RoundStart) {\n            cc.log(`round not start curRoundIndex：${this.curRoundStateType}`);\n            return\n        }\n        this.unschedule(this.guidFun);\n        let target:cc.Node = event.currentTarget;\n        this.selectTargetNode = target;\n        let worldPos = target.parent.convertToWorldSpaceAR(target.position);\n        this.targetPos1 = this.node.convertToNodeSpaceAR(worldPos);\n\n        let n = Number(data);\n        this.selectCorrect = (0 == n);\n        console.log(\" ====this.selectCorrect: \", this.selectCorrect, \" n: \", n);\n        \n        if (0 == n) {\n            AudioManager.playEffect(QUIZGAMEBLUE, \"audios/game_right\")\n            //选择正确\n            this.roundStateTypeChanged(RoundStateType.RoundComplete, { win: 1 })\n        }\n        else {\n            AudioManager.playEffect(QUIZGAMEBLUE, \"audios/game_error\")\n            //选择错误\n            this.roundStateTypeChanged(RoundStateType.RoundComplete, { win: 0 })\n        }\n\n        //jinyong\n        this.roundNodeArr[this.curRoundIndex].children.map((node)=>{\n            let btn = node.getComponent(cc.Button);\n            btn && (btn.interactable = false);\n        });\n\n        // \n        let nodeArr = this.roundNodeArr[this.curRoundIndex].children\n        nodeArr.map((node)=>{\n            if (node != target) {\n                node.active = false\n            }\n        })\n    }\n\n    playWalkSound(play:boolean = true){\n        if (play) {\n            AudioManager.playLoopEffect(QUIZGAMEBLUE, QuizBlueSoundConfig.SE_guoshengri01);\n        }else{\n            AudioManager.stopLoopEffect(QUIZGAMEBLUE, QuizBlueSoundConfig.SE_guoshengri01);\n        }\n    }\n    public override unregisterEvent() {\n        super.unregisterEvent()\n        AudioManager.stopLoopEffect(QUIZGAMEBLUE, QuizBlueSoundConfig.SE_guoshengri01);\n        AudioManager.stopLoopEffect(QUIZGAMEBLUE, QuizBlueSoundConfig.SE_guoshengri04);\n    }\n\n    // onDestroy(){\n    //     AudioManager.stopLoopEffect(QUIZGAMEBLUE, QuizBlueSoundConfig.SE_guoshengri01);\n    //     AudioManager.stopLoopEffect(QUIZGAMEBLUE, QuizBlueSoundConfig.SE_guoshengri04);\n    // }\n    \n}\n\n\n"],"file":"index.js"}