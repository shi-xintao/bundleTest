{"version":3,"sources":["assets/bundles/paint/src/paint/Gallery.ts","assets/bundles/paint/src/GaussianBlur.ts","assets/bundles/paint/src/TigoManager.ts","assets/bundles/paint/src/paint/galleryNode.ts","assets/bundles/paint/src/paint/galleryitem.ts","assets/bundles/paint/paintAlert/paintAlert.ts","assets/bundles/paint/src/paintAssetsManager.ts","assets/bundles/paint/src/paintConfig.ts","assets/bundles/paint/src/paintDataManager.ts","assets/bundles/paint/src/paint/paintMain.ts","assets/bundles/paint/paintTopBar/paintTopBar.ts","assets/bundles/paint/paint.ts","assets/bundles/paint/src/pen.ts","assets/bundles/paint/src/firstPaint/showPaint.ts","assets/bundles/paint/src/firstPaint/tanseMain.ts","assets/bundles/paint/src/tianSeManager.ts","assets/bundles/paint/src/paint/tianSeNodeInGallery.ts","assets/bundles/paint/src/firstPaint/tianSeNode.ts"],"names":["paintDataManager_1","require","galleryitem_1","tianSeManager_1","paintAssetsManager_1","TigoManager_1","EventSystem_1","_a","cc","_decorator","ccclass","property","Gallery","_super","__extends","_this","apply","this","arguments","itemPrefab","showItemPrefab","galleryItemPrefab","listNode","scrollView","frame_arr","select_Index","paintItemComponentMap","Map","assetMap","prototype","onLoad","console","log","default","on","callCocos_data","_data","data","action","param","unique","saveData","getSavePaintData","Promise","all","map","element","resolve","reject","base64","propId","img","Image","src","texture","Texture2D","initWithElement","paintAssetsManager","instance","setPaintTextureById","sent","initList","start","tianSeManager","open_gallery_in_firstPaint","m_pOwner","setShowLoading","platform","getPlatform","loadPaintFrame","params","method","key","getAll","type","callAppToStorage","i","sys","isNative","path","getNativePathByIndex","filePath","jsb","fileUtils","getWritablePath","isFileExist","assetManager","loadRemote","err","res","push","native_path","getPaintListData","len","length","galleryNode","instantiate","addChild","j","paintData","galleryItem","galleryitemComponent","getComponent","init","set","posNode","getChildByName","position","num","a","Math","floor","designResolution","Canvas","windths_1","width","scheduleOnce","setScrollViewOffset","Layout","enabled","node","setMoveOffset","windths","get","Number","color","pos","convertToWorldSpaceAR","v2","pos1","convertToNodeSpaceAR","p","x","y","scrollToOffset","refreshItem","ind","TanseIndex","getPaintDataById","active","tex","getPaintTextureById","spr","SpriteFrame","Sprite","spriteFrame","line","getPaintLineTextureById","spr1","tween","to","scale","call","destroy","onDestroy","releaseAsset","off","__decorate","Prefab","Node","ScrollView","Component","exports","requireComponent","executeInEditMode","disallowMultiple","executionOrder","GaussianBlur","_effect","_radius","sprite","material","Object","defineProperty","value","updateProperties","resetInEditor","getTexture","packable","Material","create","setMaterial","setProperty","getNodeSize","radius","height","EffectAsset","tooltip","CC_DEV","readonly","TigoManager","token","classId","gameId","userId","moduleId","lessonModuleId","setClassId","id","setGameId","setPropId","setUserId","setModuleId","setLessonModuleId","getBaseInfo","handleData","JSON","stringify","window","tiGo","BaseInfo","callApp","webkit","prompt","callAppToClose","next","closeNext","messageHandlers","postMessage","callAppToRecord","sec","word","name","time","toString","standardText","callAppToStopRecord","callAppToResult","page_num","page_num_1","callAppToHttp","api","url","callAppToLoaded","callAppToCollect","gameIndex","result","h","lessonId","lessonModelId","timestamp","getTime","Date","now","substr","_instance","callAppToSpeed","speedVal","ResLoader_1","paintConfig_1","galleryitem","lock","light","mubu","paint","itemInfo","isClick","Label","string","isSave","setTexture","loadDefaultTexture","lockVal","clickEvent","event","choose","ColorIndex","loadPropDetail","getSeverPropDetails","openPaint","tex_line","loadRes","iconUrl","setPaintLineTextureById","BUNDLE_NAME","showUnlock","events_1","QuitLessonAlert","label","onClickClose","emit","SET_TOP_BAR_ACTIVE","MainNode","tianseNode","onClickOk","paintTextureMap","paintLineTextureMap","getPaintTextureData","GUIDE_STATE","Music","SEVER_INTERFACE","MUSIC_PATH","SAVE_PAINT_SIGN","MESSAGE_IN_GALLERY","TEST_SEVER_URL","PAINT_DATA_CONFIG","isPlayUnlockSpine","LOCAL_PROP_DETAIL","itemData","sort","colorName","colorValue","HttpSystem_1","LocalStorageUtils_1","PAINT_ITEM_LIST_SAVE_KEY","paintDataManager","open_gallery","playUnlockSpineData","paintPropDetailMap","cur_Platform","paintItemList","getSeverOpenGalleryState","status","response","code","extrdata","__awaiter","loadPropList","loadPropLineTexture","loadFirstPropDetail","catch","e","error","CC_PREVIEW","saveListConfig","paintItemListConfig","getSeverPaintData","sever_obj","params1","parse","getLocalPaintData","LocalStorageUtils","getObject","unlockData","getUnlockPaintList","preload","slice","loadData","proplist","httpPost","rej","able","getBool","getOpenGalleryState","setPaintPropDetailById","getPaintPropDetailById","prop","httpGet","then","data_1","expandDes","resultData","tempData","find","item","filter","ele","setPaintItemUnlockById","save","setENPaintItemUnlockById","setENPaintItemPlayUnlockSpineById","obj","forEach","val","index","setObject","getUnlockSpineData","unLockPropData","1","propData","item1","item2","Gallery_1","tianSeNodeInGallery_1","paintMain","contentNode","galleryPre","tiansePre","quitAlertPre","quitAlertNode","zIndex","macro","MAX_ZINDEX","setBackVisit","initPaint","closePaint","showQuitAlertPre","TopBar","onBack","onNext","AudioManager_1","content","btnBack","firstPaintGame","paintGroup","paintGroupNode","loadingNode","firstPaintGameNode","userData","ud","setOwner","regisEvent","initPaintData","unLockData","splash","document","getElementById","style","display","initUI","openPaintGroup","isValid","openGallery","playMusic","bgm","Back","target","stopEffect","stopMusic","audioEngine","pauseMusic","pauseAllEffects","game","pause","LIFE_CYCLE_PARAMS","pen","penList","basicX","color_config","onEnable","refreshColorNode","tanse_index","color_index","select","unselect","_color","Color","fromHEX","CurColor","clickEventBack","guideState","INIT","CLICK_HB","setGuide","effect","playEffect","NewClass","scaleNode","guideNode","showNode","isTouch","left_pos","v3","right_pos","left_light","right_light","recordLightPos","EventType","TOUCH_START","touchStart","setScaleNode","left_node","right_node","unscheduleAllCallbacks","curIsGallery","unLockCount","max_tanse_index","setShowImage","tanIndex","_tex","tianSeNode_1","tanseMain","penPre","guidePre","tansePre","showPaintPre","isGuide","penNode","tanseNode","nextPaint","loadCurPropDetail","DONE","CLICK_FILL","cur_Color","main","firstGame","change","owner","pen_1","showPaint_1","tianSeNodeInGallery","paint_Camera","paint1","paint2","doneBtn","topMask","topBarPre","tetTexture","curDrawTexture2D","winWidth","winHeight","curTextureData","savedTexutreData","b_inited","curDrawMode","checkedPointDic","checkPointList","paintFrame","showPaintNode","addEvent","topBar","tex_paint","spr_paint","initView","ortho","alignWithScreen","RenderTexture","resetRendData","orthoSize","setContentSize","getContentSize","_depthStencilBuffer","initWithSize","gfx","RB_FMT_S8","targetTexture","render","textureData","readPixels","tetTexture1","filpYImage","picData","Uint8Array","rowBytes","row","srow","reStart","TOUCH_END","tempPoint","getLocation","checkColorFill","initWithData","PixelFormat","RGBA8888","inArea","checkPushPoint","_checkPoint","_curIndex","_b_IsWhite1","clickFill","checkPoint","pop","curIndex","colorTotal","opi","b_IsWhite","r","g","b","doneCurTs","saveFileToLocal","done","success","saveImageData","resetTianSeData","saveImageToWeb","canvas","createElement","ctx","getContext","imageData","createImageData","putImageData","dataURL","toDataURL","Camera","tianSeNode","isFirstSave","setBool"],"mappings":"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","sourcesContent":["import paintDataManager from \"../paintDataManager\";\nimport galleryitem from \"./galleryitem\";\nimport { tianSeManager } from \"../tianSeManager\";\nimport { paintAssetsManager } from \"../paintAssetsManager\";\nimport TigoManager from \"../TigoManager\";\nimport { storageParams } from \"../paintInterface\";\nimport EventSystem from \"../../../../kit/system/event/EventSystem\";\n\nconst { ccclass, property } = cc._decorator;\n@ccclass\nexport default class Gallery extends cc.Component {\n\n    @property(cc.Prefab)\n    public itemPrefab: cc.Prefab = null;\n\n    @property(cc.Prefab)\n    public showItemPrefab: cc.Prefab = null;\n\n    @property(cc.Prefab)\n    public galleryItemPrefab: cc.Prefab = null;\n\n    @property(cc.Node)\n    public listNode: cc.Node = null;\n\n    @property(cc.ScrollView)\n    public scrollView: cc.ScrollView = null;\n\n    frame_arr = []\n    select_Index = -1\n    paintItemComponentMap = new Map();\n\n    public onLoad() {\n        console.log(\"进入画廊 ===\")\n        EventSystem.on(\"callCocos_data\",this.callCocos_data,this);\n    }\n\n     public async callCocos_data(_data){\n        console.log(\"tianSeNode==========》\",_data)\n        let data = _data.data\n        if(data.action == \"TiGoStorageSuccess\"){\n            if(data.param.unique == \"gallery_all\")\n            {   \n                let saveData = paintDataManager.getSavePaintData()\n                await Promise.all(saveData.map((element)=>{\n                    return new Promise<void>((resolve, reject) => {\n                        let base64 = data.param.data[\"paint_\" +element.propId]\n                        if(base64)\n                        {   \n                            console.log(\"当前Base64文件 paint_\" +element.propId)\n                            let img = new Image();\n                            img.src = base64;\n                            // img.onload = () =>{\n                                let texture = new cc.Texture2D();\n                                texture.initWithElement(img);\n                                paintAssetsManager.instance.setPaintTextureById(element.propId,texture)\n                                resolve()\n                            // }\n                        }else{\n                            resolve()\n                        }\n                    });\n                }))\n                this.initList()\n            }\n        }\n    }\n\n    public start() {\n        if(tianSeManager.instance.open_gallery_in_firstPaint)\n        {\n            this.initList()\n        }else{\n            tianSeManager.instance.m_pOwner.setShowLoading(true)\n            let platform = paintDataManager.getPlatform()\n            if(platform == \"cn\"){\n                this.loadPaintFrame()  \n            }else{\n                let params:storageParams= {\n                    method:\"GET\",\n                    key:\"\",\n                    getAll:\"1\",\n                    type:\"file\",\n                    unique:\"gallery_all\",\n                }\n                console.log(\"获取原生端所有Base64===========\")\n                TigoManager.instance.callAppToStorage(params)\n            }\n        }\n    }\n\n    private assetMap = [];\n    async loadPaintFrame(){\n        let data = paintDataManager.getSavePaintData()\n        await Promise.all(data.map((element,i)=>{\n            return new Promise<void>((resolve, reject) => {\n                if(cc.sys.isNative){\n                    let path = paintDataManager.getNativePathByIndex(element.propId)\n                    let filePath = jsb.fileUtils.getWritablePath() + path;\n                    if (!jsb.fileUtils.isFileExist(filePath)) {\n                        console.log(`${filePath} 不存在`);\n                        resolve();\n                        return;\n                    }\n                    cc.assetManager.loadRemote(filePath,(err,res:any)=>{\n                        if(err)\n                        {\n                            console.log(\"加载失败\",err)\n                        }\n                        this.assetMap.push(res);\n                        console.log(\"加载成功\"+element.native_path)\n                        paintAssetsManager.instance.setPaintTextureById(element.propId,res)\n                        resolve()\n                    })\n                }else{\n                    resolve()\n                }\n            });\n        }));\n        this.initList()\n    }\n\n    /* 初始化画廊列表 */\n    public initList() {\n        console.log(\"初始化画廊列表\")\n        tianSeManager.instance.m_pOwner.setShowLoading(false)\n        let data = paintDataManager.getPaintListData()\n        let len = data.length\n        for (let i = 0; i < len; i+=4) {\n            let galleryNode =  cc.instantiate(this.itemPrefab);\n            this.listNode.addChild(galleryNode)\n            for (let j = 0; j < 4; j++) {\n                let paintData = data[i+j]\n                if(paintData)\n                {\n                    let galleryItem: cc.Node = cc.instantiate(this.galleryItemPrefab);\n                    let galleryitemComponent: galleryitem = galleryItem.getComponent<galleryitem>(galleryitem);\n                    galleryitemComponent.init(paintData);\n                    this.paintItemComponentMap.set(paintData.propId,galleryitemComponent)\n                    let posNode = galleryNode.getChildByName(\"pos\"+j)\n                    galleryItem.position = posNode.position\n                    galleryNode.addChild(galleryItem)\n                }\n            }\n        }\n        tianSeManager.instance.m_pOwner.setShowLoading(false)\n        /* 设置最大偏移量 */\n        let num = len % 4\n        let a = Math.floor(len * 0.25)\n        if(num!=0)\n        {   \n            let designResolution: cc.Size = cc.Canvas.instance.designResolution\n            let windths = designResolution.width\n            this.scheduleOnce(()=>{\n                this.setScrollViewOffset()\n                this.listNode.getComponent(cc.Layout).enabled = false\n                this.listNode.width = windths * a + windths * num * 0.25 //屏幕的4分之几\n                if(this.listNode.width <  this.scrollView.node.width)\n                {\n                    this.listNode.width = this.scrollView.node.width\n                }\n            },0.3)\n        }\n        // AudioManager.playMusic(BUNDLE_NAME, `${MUSIC_PATH}${Music.bgm}`);\n    }\n\n    public setScrollViewOffset(){\n        // 测试  \n        // tianSeManager.instance.propId = 1003  \n\n        //TODD：解锁动画 这版本先不加 \n        // let unlockData =  paintDataManager.playUnlockSpineData\n        // let len = unlockData.length\n        // for (let j = 0; j < len; j++) {\n        //     let element = unlockData[j];\n        //     let galleryitemComponent =this.paintItemComponentMap.get(element.propId)\n        //     galleryitemComponent.showUnlock()\n        //     //设置已经播放过解锁动画状态\n        //     paintDataManager.setENPaintItemPlayUnlockSpineById(element.propId)\n        // }\n        if(tianSeManager.instance.propId && tianSeManager.instance.propId != \"0\" && tianSeManager.instance.propId != \"\")\n        {   \n           this.setMoveOffset(tianSeManager.instance.propId)\n        }else{\n            // this.setMoveOffset(unlockData[len -1].propId)\n        }\n    }\n\n    public setMoveOffset(propId){\n        let designResolution: cc.Size = cc.Canvas.instance.designResolution\n        let windths = designResolution.width\n        console.log(\"进入画廊定位\" +propId)\n        let galleryitemComponent =this.paintItemComponentMap.get(Number(propId))\n        galleryitemComponent.node.getChildByName(\"num\").color = cc.color(0,255,0)\n        let pos = galleryitemComponent.node.convertToWorldSpaceAR(cc.v2(0, 0))\n        let pos1 = this.scrollView.node.convertToNodeSpaceAR(pos)\n        let p = cc.v2(pos1.x - windths / 2,pos1.y)\n        this.scrollView.scrollToOffset(p, 0.5);\n        // this.scheduleOnce(()=> galleryitemComponent.showUnlock(),0.5)\n    }\n\n    /* 刷新对应画框 */\n    public refreshItem() {\n        let ind = tianSeManager.instance.TanseIndex\n        console.log(\"进入刷新对应道具\"+ind)\n        let galleryitemComponent =this.paintItemComponentMap.get(ind)\n        let data = paintDataManager.getPaintDataById(ind)\n        galleryitemComponent.init(data);\n        galleryitemComponent.node.active = false\n\n        //展示挂画动画\n        let node = cc.instantiate(this.showItemPrefab)\n        let tex = paintAssetsManager.instance.getPaintTextureById(ind)\n        if(tex){\n            let spr: cc.SpriteFrame = new cc.SpriteFrame(tex)\n            node.getChildByName(\"paint\").getComponent(cc.Sprite).spriteFrame = spr\n        }else{\n            let line = paintAssetsManager.instance.getPaintLineTextureById(ind)\n            let spr1: cc.SpriteFrame = new cc.SpriteFrame(line)\n            node.getChildByName(\"paint\").getComponent(cc.Sprite).spriteFrame = spr1\n        }\n        this.node.addChild(node)\n        let pos = galleryitemComponent.node.convertToWorldSpaceAR(cc.v2(0, 0))\n        let pos1 = this.node.convertToNodeSpaceAR(pos)\n        cc.tween(node)\n        .to(0,{scale:3.5})\n        .to(1.5,{scale:1,position:pos1})\n        .call(()=>{\n            galleryitemComponent.node.active = true\n            node.destroy()\n        })\n        .start()\n    }\n\n    public onDestroy(){\n        for(let i = 0; i < this.assetMap.length; i ++) {\n            cc.assetManager.releaseAsset(this.assetMap[i]);\n        }\n        this.assetMap = [];\n        EventSystem.off(\"callCocos_data\",this.callCocos_data,this);\n    }\n}\n\n\n","// import EditorAsset from \"../../misc/EditorAsset\";\r\n\r\nconst { ccclass, property, requireComponent, executeInEditMode, disallowMultiple, executionOrder } = cc._decorator;\r\n\r\n/**\r\n * 高斯模糊 Shader 组件，该组件需要对应的 Effect 才能正常使用！\r\n * @see GaussianBlur.ts https://gitee.com/ifaswind/eazax-ccc/blob/master/components/effects/GaussianBlur.ts\r\n * @see eazax-gaussian-blur-adjustable.effect https://gitee.com/ifaswind/eazax-ccc/blob/master/resources/effects/eazax-gaussian-blur-adjustable.effect\r\n */\r\n@ccclass\r\n@requireComponent(cc.Sprite)\r\n@executeInEditMode\r\n@disallowMultiple\r\n@executionOrder(-100)\r\nexport default class GaussianBlur extends cc.Component {\r\n\r\n    @property private _effect: cc.EffectAsset = null;\r\n    @property({ type: cc.EffectAsset, tooltip: CC_DEV && 'Effect 资源', readonly: true })\r\n    public get effect() { return this._effect; }\r\n    public set effect(value: cc.EffectAsset) { this._effect = value; this.init(); }\r\n\r\n    @property private _radius: number = 10;\r\n    @property({ tooltip: CC_DEV && '模糊半径' })\r\n    public get radius() { return this._radius; }\r\n    public set radius(value: number) { this._radius = value > 50 ? 50 : value; this.updateProperties(); }\r\n\r\n    private sprite: cc.Sprite = null;\r\n\r\n    private material: cc.Material = null;\r\n\r\n    protected onLoad() {\r\n        this.init();\r\n    }\r\n\r\n    protected resetInEditor() {\r\n        this.init();\r\n    }\r\n\r\n    /**\r\n     * 初始化\r\n     */\r\n    public async init() {\r\n        /**\r\n         * 编辑器环境下自动绑定 Effect 资源\r\n         * 依赖于 EditorAsset 模块，没有该模块请将此代码块以及顶部导入语句去除\r\n         * @see EditorAsset.ts https://gitee.com/ifaswind/eazax-ccc/blob/master/misc/EditorAsset.ts\r\n         */\r\n        // if (CC_EDITOR && !this._effect) {\r\n        //     await new Promise<void>(res => {\r\n        //         const path = 'eazax-ccc/resources/effects/eazax-gaussian-blur-adjustable.effect';\r\n        //         EditorAsset.load(path, 'effect', (err: Error, result: cc.EffectAsset) => {\r\n        //             if (err) cc.warn(`[${this['__proto__']['__classname__']}]`, '请手动指定组件的 Effect 资源！');\r\n        //             else this._effect = result;\r\n        //             res();\r\n        //         });\r\n        //     });\r\n        // }\r\n        if (!this._effect) return;\r\n        // 使用自定义 Effect 需禁用纹理的 packable 属性（因为动态合图之后无法正确获取纹理 UV 坐标）\r\n        // 详情请看：https://docs.cocos.com/creator/manual/zh/asset-workflow/sprite.html#packable\r\n        this.sprite = this.node.getComponent(cc.Sprite);\r\n        if (this.sprite.spriteFrame) this.sprite.spriteFrame.getTexture().packable = false;\r\n        // 生成并应用材质\r\n        this.material = cc.Material.create(this._effect);\r\n        this.sprite.setMaterial(0, this.material);\r\n        // 更新材质属性\r\n        this.updateProperties();\r\n    }\r\n\r\n    /**\r\n     * 更新材质属性\r\n     */\r\n    private updateProperties() {\r\n        console.log(\"更新材质设置=========\")\r\n        this.material.setProperty('size', this.getNodeSize());\r\n        this.material.setProperty('radius', this.radius);\r\n    }\r\n\r\n    /**\r\n     * 获取节点尺寸\r\n     */\r\n    private getNodeSize() {\r\n        return cc.v2(this.node.width, this.node.height);\r\n    }\r\n\r\n}\r\n","import { storageParams } from \"./paintInterface\";\nexport default class TigoManager {\n\n\tpublic token: string = \"\";\n\tpublic classId: string = \"\";\n\tpublic gameId: string = \"\";\n\tpublic userId: string = \"\";\n\tpublic propId: string = null\n\tpublic moduleId: string = \"\";\n\tpublic lessonModuleId: string = \"\";\n\n\tpublic setClassId(id) {\n\t\tthis.classId = id;\n\t}\n\n\tpublic setGameId(id) {\n\t\tthis.gameId = id;\n\t}\n\n\tpublic setPropId(id) {\n\t\tthis.propId = id;\n\t}\n\n\tpublic setUserId(id) {\n\t\tthis.userId = id;\n\t}\n\n\tpublic setModuleId(id) {\n\t\tthis.moduleId = id;\n\t}\n\n\tpublic setLessonModuleId(id) {\n\t\tthis.lessonModuleId = id;\n\t}\n\n\t//获取用户信息\n\tpublic getBaseInfo() {\n\t\tvar handleData =\n\t\t{\n\t\t\t\"action\": \"TiGoBaseInfo\"\n\t\t}\n\t\tconsole.log(\"getBaseInfo ============== \" + JSON.stringify(handleData));\n\t\tif (window.tiGo) {\n\t\t\tvar BaseInfo = window.tiGo.callApp(JSON.stringify(handleData));\n\t\t\tconsole.log(BaseInfo);\n\t\t\treturn BaseInfo;\n\n\t\t}\n\t\tif (window.webkit) {\n\t\t\t// window.webkit.messageHandlers.callApp.postMessage(JSON.stringify(handleData));\n\t\t\tvar BaseInfo: any = window.prompt(\"callApp\", JSON.stringify(handleData));\n\t\t\tconsole.log(\"webkit BaseInfo ==== \" + BaseInfo);\n\t\t\treturn BaseInfo;\n\t\t}\n\t}\n\n\t//发送close消息给app \n\tpublic callAppToClose(data, next = false) {\n\t\tvar handleData = next ?\n\t\t\t{\n\t\t\t\t\"action\": \"TiGoClose\",\n\t\t\t\t\"param\": {\n\t\t\t\t\t\"closeNext\": data\n\t\t\t\t}\n\t\t\t} :\n\t\t\t{\n\t\t\t\t\"action\": \"TiGoClose\",\n\t\t\t\t\"param\": {\n\n\t\t\t\t}\n\t\t\t}\n\t\tconsole.log(\"callAppToClose ============== \" + JSON.stringify(handleData));\n\t\tif (window.tiGo) {\n\t\t\twindow.tiGo.callApp(JSON.stringify(handleData));\n\t\t}\n\t\tif (window.webkit) {\n\t\t\twindow.webkit.messageHandlers.callApp.postMessage(JSON.stringify(handleData));\n\t\t}\n\t}\n\n\t//开启录音\n\tpublic callAppToRecord(sec, word) {\n\t\tvar handleData =\n\t\t{\n\t\t\t\"action\": \"TiGoStartRecord\",\n\t\t\t\"param\": {\n\t\t\t\t\"name\": \"game1\",\n\t\t\t\t\"time\": sec.toString(),\n\t\t\t\t\"standardText\": word\n\t\t\t}\n\t\t}\n\t\tconsole.log(\"callAppToRecord ============== \" + JSON.stringify(handleData));\n\t\tif (window.tiGo) {\n\t\t\twindow.tiGo.callApp(JSON.stringify(handleData));\n\t\t}\n\t\tif (window.webkit) {\n\t\t\twindow.webkit.messageHandlers.callApp.postMessage(JSON.stringify(handleData));\n\t\t}\n\t}\n\n\t//关闭录音\n\tpublic callAppToStopRecord() {\n\t\tvar handleData =\n\t\t{\n\t\t\t\"action\": \"TiGoStopRecord\",\n\n\t\t}\n\t\tconsole.log(\"callAppToStopRecord ============== \" + JSON.stringify(handleData));\n\t\tif (window.tiGo) {\n\t\t\twindow.tiGo.callApp(JSON.stringify(handleData));\n\t\t}\n\t\tif (window.webkit) {\n\t\t\twindow.webkit.messageHandlers.callApp.postMessage(JSON.stringify(handleData));\n\t\t}\n\t}\n\n\t//语音测评\n\tpublic callAppToResult(word, path) {\n\n\t\tvar handleData =\n\t\t{\n\t\t\t\"action\": \"TiGoVoiceEvaluation\",\n\t\t\t\"param\": {\n\t\t\t\t\"standardText\": word,\n\t\t\t\t\"path\": path\n\t\t\t}\n\n\t\t}\n\t\tconsole.log(\"callAppToResult ============== \" + JSON.stringify(handleData));\n\t\tif (window.tiGo) {\n\t\t\twindow.tiGo.callApp(JSON.stringify(handleData));\n\t\t\t//  return data;\n\t\t}\n\t\tif (window.webkit) {\n\t\t\twindow.webkit.messageHandlers.callApp.postMessage(JSON.stringify(handleData));\n\t\t\t//   return data;\n\t\t}\n\t}\n\n\t//存储\n\n\tpublic callAppToStorage(params:storageParams) {\n\t\tvar value = \"\";\n\t\tswitch (params.method) {\n\t\t\tcase \"PUT\":\n\t\t\t\tvalue = params.value\n\t\t\t\tbreak;\n\t\t}\n\t\tvar handleData = {\n\t\t\t\"action\": \"TiGoStorage\",\n\t\t\t\"param\": {\n\t\t\t\t\"method\": params.method,// get put clear \n\t\t\t\t\"key\": params.key,\n\t\t\t\t\"type\":params.type ? params.type: \"\",\n\t\t\t\t\"getAll\":params.getAll ? params.getAll: \"\",\n\t\t\t\t\"value\": value,\n\t\t\t\t\"unique\":params.unique ? params.unique: \"\",\n\t\t\t}\n\t\t}\n\t\tconsole.log(\"callAppToStorage ============== \" + JSON.stringify(handleData));\n\t\tif (window.tiGo) {\n\t\t\tvar page_num = window.tiGo.callApp(JSON.stringify(handleData));\n\t\t\tconsole.log(page_num);\n\t\t\treturn page_num;\n\t\t}\n\t\tif (window.webkit) {\n\t\t\tlet page_num:any \n\t\t\tif(params.type == \"file\")   //非轻量级存储\n\t\t\t{\t\n\t\t\t\tconsole.log(\"非轻量级存储 file \b\")\n\t\t\t\twindow.webkit.messageHandlers.callApp.postMessage(JSON.stringify(handleData));\n\t\t\t}else{\n\t\t\t\tconsole.log(\"轻量级存储\")\n\t\t\t\tpage_num= window.prompt(\"callApp\", JSON.stringify(handleData));\n\t\t\t}\n\t\t\tconsole.log(page_num);\n\t\t\treturn page_num;\n\t\t}\n\t}\n\n\t//一切请求服务器的行为 api：接口 ，mehtod：put get post， params：接口所需参数 ，unique：交互app标识\n\tpublic callAppToHttp(api, method, params) {\n\t\tvar handleData = {\n\t\t\t\"action\": \"TiGoHttp\",\n\t\t\t\"param\": {\n\t\t\t\t\"url\": api,\n\t\t\t\t\"method\": method,\n\t\t\t\t\"params\": params,\n\t\t\t\t\"unique\": this.classId\n\t\t\t}\n\t\t}\n\t\tconsole.log(\"callAppToStorage ============== \" + JSON.stringify(handleData));\n\t\tif (window.tiGo) {\n\t\t\twindow.tiGo.callApp(JSON.stringify(handleData));\n\t\t}\n\t\tif (window.webkit) {\n\t\t\twindow.webkit.messageHandlers.callApp.postMessage(JSON.stringify(handleData));\n\t\t}\n\t}\n\n\tpublic callAppToLoaded() {\n\t\tvar handleData =\n\t\t{\n\t\t\t\"action\": \"TiGoLifecycle\",\n\t\t\t\"param\": {\n\t\t\t\t\"name\": \"loaded\",\n\t\t\t\t\"param\": \"\"\n\t\t\t}\n\t\t}\n\t\tconsole.log(\"callAppToLoaded ============== \" + JSON.stringify(handleData));\n\t\tif (window.tiGo) {\n\t\t\twindow.tiGo.callApp(JSON.stringify(handleData));\n\t\t}\n\t\tif (window.webkit) {\n\t\t\twindow.webkit.messageHandlers.callApp.postMessage(JSON.stringify(handleData));\n\t\t}\n\t}\n\n\tpublic callApp(handleData) {\n        console.log(\"callAppToStorage ============== \" + JSON.stringify(handleData));\n        if (window.tiGo) {\n            window.tiGo.callApp(JSON.stringify(handleData));\n        }\n        if (window.webkit) { \n            window.webkit.messageHandlers.callApp.postMessage(JSON.stringify(handleData));\n        }\n    }\n\n\n\tpublic callAppToCollect(gameIndex: number, type: number, result: string) {\n\t\tvar h = {\n\t\t\t\"userId\": this.userId,\n\t\t\t\"lessonId\": this.classId,\n\t\t\t\"lessonModelId\": this.lessonModuleId,\n\t\t\t\"gameIndex\": gameIndex,\n\t\t\t\"type\": type,\n\t\t\t\"result\": result,\n\t\t\t\"timestamp\": this.getTime()\n\t\t}\n\t\tvar handleData = {\n\t\t\t\"action\": \"TiGoHttp\",\n\t\t\t\"param\": {\n\t\t\t\t\"url\": \"api/operate/infoV2\",\n\t\t\t\t\"method\": \"POST\",\n\t\t\t\t\"params\": h\n\t\t\t}\n\t\t}\n\t\tconsole.log(\"callAppToStorage ============== \" + JSON.stringify(handleData));\n\t\tif (window.tiGo) {\n\t\t\twindow.tiGo.callApp(JSON.stringify(handleData));\n\t\t}\n\t\tif (window.webkit) {\n\t\t\twindow.webkit.messageHandlers.callApp.postMessage(JSON.stringify(handleData));\n\t\t}\n\t}\n\n\tpublic getTime() {\n\t\tvar time = Date.now().toString();//获取到毫秒的时间戳，精确到毫秒\n\t\ttime = time.substr(0, 10);//精确到秒\n\t\treturn time;\n\t}\n\n\tprivate static _instance: TigoManager;\n\n\tpublic static get instance(): TigoManager {\n        if (!TigoManager._instance) {\n            TigoManager._instance = new TigoManager();\n        }\n        return TigoManager._instance;\n    }\n\n\tpublic callAppToSpeed() {\n\t\tlet url = \"api/course/speed\"\n\t\tlet params = {\n\t\t\t\"userId\": this.userId,\n\t\t\t\"type\": this.moduleId,\n\t\t\t\"speedVal\": 2,\n\t\t\t\"lessonModelId\": this.lessonModuleId,\n\t\t}\n\t\tthis.callAppToHttp(url, \"POST\", params)\n\t}\n}\n\n","const {ccclass, property} = cc._decorator;\n@ccclass\nexport default class galleryNode extends cc.Component {\n\n    @property(cc.Node)\n    posNode: cc.Node = null;\n\n\n    // onLoad () {}\n\n    start () {\n        \n    }\n\n    // update (dt) {}\n}\n","import ResLoader from \"../../../../kit/framework/load/ResLoader\";\nimport { BUNDLE_NAME, SEVER_INTERFACE, TEST_SEVER_URL } from \"../paintConfig\";\nimport { paintAssetsManager } from \"../paintAssetsManager\";\nimport { tianSeManager } from \"../tianSeManager\";\nimport paintDataManager from \"../paintDataManager\";\n\nconst { ccclass, property } = cc._decorator;\n@ccclass\nexport default class galleryitem extends cc.Component {\n\n    @property(cc.Node)\n    lock: cc.Node = null;\n\n    @property(cc.Node)\n    light: cc.Node = null;\n\n    @property(cc.Node)\n    mubu: cc.Node = null;\n\n    @property(cc.Node)\n    paint: cc.Node = null;\n\n    itemInfo: any = {}\n    isClick = false\n\n    public onLoad() {\n\n    }\n\n    public init(data) {\n        this.itemInfo = data\n        this.isClick = false\n        this.node.getChildByName(\"num\").active = false\n        this.node.getChildByName(\"num\").getComponent(cc.Label).string = data.propId\n        if(data.isSave)\n        {   \n            let tex = paintAssetsManager.instance.getPaintTextureById(data.propId)\n            if(tex){\n                console.log(\"缓存取到了\"+data.propId)\n                let spr: cc.SpriteFrame = new cc.SpriteFrame()\n                spr.setTexture(tex);\n                this.paint.getComponent(cc.Sprite).spriteFrame = spr;\n                this.isClick = true\n            }else{\n                console.log(\"缓存没取到了\",tex)\n               this.loadDefaultTexture()\n            }\n        }else\n        {   \n            console.log(\"没有保存过\"+data.propId)\n            this.loadDefaultTexture()\n        }\n       \n        this.light.active = data.isSave\n        this.mubu.active = data.lockVal == 1\n        this.lock.active =  data.lockVal == 1\n    }\n\n    public clickEvent(event, choose) {\n        if (this.itemInfo.lockVal == 1 || !this.isClick) return\n        tianSeManager.instance.TanseIndex = this.itemInfo.propId\n        tianSeManager.instance.ColorIndex = -1\n        // this.paint.getComponent(cc.Sprite).spriteFrame = null\n        this.loadPropDetail()\n    }\n\n    async loadPropDetail(){\n        let result = await paintDataManager.getSeverPropDetails(this.itemInfo.propId);\n        tianSeManager.instance.openPaint(this.itemInfo)\n    }\n\n    public loadDefaultTexture(){\n        let tex_line = paintAssetsManager.instance.getPaintLineTextureById(this.itemInfo.propId)\n        if(tex_line)\n        {   \n            let spr:cc.SpriteFrame = new cc.SpriteFrame()\n            spr.setTexture(tex_line);\n            this.paint.getComponent(cc.Sprite).spriteFrame = spr;\n            this.isClick = true\n        }else{\n            ResLoader.loadRes(this.itemInfo.iconUrl,cc.Texture2D,(err,res)=>{\n                if(err)\n                {\n                    console.log(\"加载失败\",err)\n                }\n                console.log(\"加载成功\"+this.itemInfo.propId)\n                let spr: cc.SpriteFrame = new cc.SpriteFrame()\n                spr.setTexture(res);\n                this.paint.getComponent(cc.Sprite).spriteFrame = spr;\n                this.isClick = true\n                paintAssetsManager.instance.setPaintLineTextureById(this.itemInfo.propId,res)\n            },BUNDLE_NAME)\n        }\n        \n    }\n\n    showUnlock(){\n        this.node.getChildByName(\"num\").active = true\n        this.node.getChildByName(\"num\").getComponent(cc.Label).string = \"解锁了\"\n        // this.scheduleOnce(()=>{\n        //     this.node.getChildByName(\"num\").active = false\n        // },0.5)\n    }\n}\n","import { SET_TOP_BAR_ACTIVE } from \"../../../kit/events/events\";\nimport EventSystem from \"../../../kit/system/event/EventSystem\";\nimport { tianSeManager } from \"../src/tianSeManager\";\nconst { ccclass, property } = cc._decorator;\n@ccclass\nexport default class QuitLessonAlert extends cc.Component {\n\n    @property(cc.Label)\n    public label: cc.Label = null;\n\n\n    public onLoad() {\n\n    }\n\n    public init(data?: any): void {\n\n    }\n\n    public onClickClose(): void {\n        this.node.active = false\n        EventSystem.emit(SET_TOP_BAR_ACTIVE,{active:true});\n        tianSeManager.instance.MainNode.tianseNode.active = false\n        tianSeManager.instance.MainNode.refreshItem()\n    }\n\n    public onClickOk(): void {\n        this.node.active = false\n    }\n}\n","\nexport class paintAssetsManager{\n    private paintTextureMap:Map<number,cc.Texture2D> = new Map();         //涂过的图片缓存\n    private paintLineTextureMap:Map<number,cc.Texture2D> = new Map();     //线稿图贴图缓存\n    private static _instance: paintAssetsManager;\n\n    public setPaintTextureById(id,texture){\n        this.paintTextureMap.set(id,texture)\n        console.log(\"添加缓存下来的已经涂色ID---->\",id)\n    }\n\n    public getPaintTextureById(id):cc.Texture2D{\n        if(this.paintTextureMap.get(id)){\n            console.log(\"读取缓存下来的已经涂色ID---->\",id)\n        }\n        return this.paintTextureMap.get(id)\n    }\n\n    public setPaintLineTextureById(id,texture){\n        this.paintLineTextureMap.set(id,texture)\n        console.log(\"添加缓存下来的线稿ID---->\",id)\n    }\n\n    public getPaintLineTextureById(id):cc.Texture2D{\n        if(this.paintLineTextureMap.get(id)){\n            console.log(\"读取缓存下来的线稿ID---->\",id)\n        }\n        return this.paintLineTextureMap.get(id)\n    }\n\n    public getPaintTextureData(){\n        return this.paintTextureMap\n    }\n\n    public static get instance(): paintAssetsManager {\n        if (!paintAssetsManager._instance) {\n            paintAssetsManager._instance = new paintAssetsManager();\n        }\n        return paintAssetsManager._instance;\n    }\n}","export const enum GUIDE_STATE {\n    INIT = \"init\",\n    CLICK_HB = \"clickHb\",\n    CLICK_FILL = \"clickFill\",\n    DONE = \"done\",\n}\n\nexport const enum Music {\n    bgm = \"BGM_tuse_01\",\n    clickHb = \"SE_tuse_01\",\n    clickFill = \"SE_tuse_02\",\n    done = \"SE_tuse_03\",\n}\n\nexport const enum SEVER_INTERFACE {\n    proplist = \"proplist\",   //道具列表\n    prop = \"prop/\",          //道具详情\n}\n\nexport const MUSIC_PATH = \"audio/\"\nexport const BUNDLE_NAME: string = \"paint\"\nexport const SAVE_PAINT_SIGN = \"save_paint\"       //是否已经保存过图片\nexport const MESSAGE_IN_GALLERY = \"open_gallery\"  //打开画廊\n\n//235\n// export const TEST_SEVER_URL = \"https://test235-ebuapi.lingo-ace.com/api/game/\"\n\n//正式\nexport const TEST_SEVER_URL = \"https://ebu-api.lingoace.com/api/game/\"\n\n//测试\n// export const TEST_SEVER_URL = \"https://test-ebuapi.lingoace.com/api/game/\"\n\n\nexport const PAINT_DATA_CONFIG = [\n    { propId: 1000, lockVal: 0, isSave: false, isPlayUnlockSpine: true,iconUrl: \"res/ts/paint1\", native_path: \"paint1.png\" },\n    { propId: 1001, lockVal: 0, isSave: false, isPlayUnlockSpine: true,iconUrl: \"res/ts/paint2\", native_path: \"paint2.png\" },\n    { propId: 1002, lockVal: 0, isSave: false, isPlayUnlockSpine: true,iconUrl: \"res/ts/paint3\", native_path: \"paint3.png\" },\n    { propId: 1003, lockVal: 0, isSave: false, isPlayUnlockSpine: false,iconUrl: \"res/ts/paint4\", native_path: \"paint4.png\" },\n    { propId: 1004, lockVal: 0, isSave: false, isPlayUnlockSpine: false,iconUrl: \"res/ts/paint5\", native_path: \"paint5.png\" },\n]\n\nexport const LOCAL_PROP_DETAIL = [\n    {\n        propId: 1000,\n        itemData: [\n            { sort: 0, colorName: \"fense-yph\", colorValue: \"f2b9b2\" },\n            { sort: 1, colorName: \"lanse-yph\", colorValue: \"2775b6\" },\n            { sort: 2, colorName: \"huangse-yph\", colorValue: \"f8df72\" },\n            { sort: 3, colorName: \"hongse-yph\", colorValue: \"d23e28\" },\n            { sort: 4, colorName: \"chengse-yph\", colorValue: \"f97d1c\" },\n            { sort: 5, colorName: \"baise-yph\", colorValue: \"ffffff\" },\n        ]\n    },\n    {\n        propId: 1001,\n        itemData: [\n            { sort: 0, colorName: \"huangse-yph\", colorValue: \"eeee4a\" },\n            { sort: 1, colorName: \"lvse-yph\", colorValue: \"83cbac\" },\n            { sort: 2, colorName: \"fense-yph\", colorValue: \"f2b9b2\" },\n            { sort: 3, colorName: \"hongse-yph\", colorValue: \"f17666\" },\n            { sort: 4, colorName: \"zise-yph\", colorValue: \"c8adc4\" },\n            { sort: 5, colorName: \"baise-yph\", colorValue: \"ffffff\" },\n        ]\n    },\n    {\n        propId: 1002,\n        itemData: [\n            { sort: 0, colorName: \"hongse-yph\", colorValue: \"f17666\" },\n            { sort: 1, colorName: \"qianlanse-yph\", colorValue: \"7edde4\" },\n            { sort: 2, colorName: \"shenlanse-yph\", colorValue: \"144a74\" },\n            { sort: 3, colorName: \"fense-yph\", colorValue: \"fee1e5\" },\n            { sort: 4, colorName: \"huangse-yph\", colorValue: \"fecc11\" },\n            { sort: 5, colorName: \"baise-yph\", colorValue: \"ffffff\" },\n        ]\n    },\n    {\n        propId: 1003,\n        itemData: [ \n            { sort: 0, colorName: \"hongse-yph\", colorValue: \"d23e28\" },\n            { sort: 1, colorName: \"lvse-yph\", colorValue: \"20a162\" },\n            { sort: 2, colorName: \"zongse-yph\", colorValue: \"A5725F\" },\n            { sort: 3, colorName: \"huangse-yph\", colorValue: \"FCE59B\" },\n            { sort: 4, colorName: \"heise-yph\", colorValue: \"422A1A\" },\n            { sort: 5, colorName: \"baise-yph\", colorValue: \"ffffff\" },\n        ]\n    },\n    {\n        propId: 1004,\n        itemData: [\n            { sort: 0, colorName: \"fense-yph\", colorValue: \"ef82a0\" },\n            { sort: 1, colorName: \"hongse-yph\", colorValue: \"ed3321\" },\n            { sort: 2, colorName: \"huangse-yph\", colorValue: \"eeee4a\" },\n            { sort: 3, colorName: \"zise-yph\", colorValue: \"806d9e\" },\n            { sort: 4, colorName: \"zongse-yph\", colorValue: \"945833\" },\n            { sort: 5, colorName: \"baise-yph\", colorValue: \"ffffff\" },\n        ]\n    },\n]\n\n\n\n","import ResLoader from \"../../../kit/framework/load/ResLoader\";\nimport HttpSystem from \"../../../kit/system/net/http/HttpSystem\";\nimport { LocalStorageUtils } from \"../../../kit/utils/LocalStorageUtils\";\nimport { paintAssetsManager } from \"./paintAssetsManager\";\nimport { BUNDLE_NAME, LOCAL_PROP_DETAIL, PAINT_DATA_CONFIG, SAVE_PAINT_SIGN, SEVER_INTERFACE, TEST_SEVER_URL } from \"./paintConfig\";\nimport { storageParams } from \"./paintInterface\";\nimport TigoManager from \"./TigoManager\";\n\nconst PAINT_ITEM_LIST_SAVE_KEY = 'PAINT_ITEM_LIST_SAVE_KEY';\nclass paintDataManager{\n    private paintItemList: any[]; \n    public open_gallery:boolean = null\n    public playUnlockSpineData = []\n    private static _instance: paintDataManager;\n    private paintPropDetailMap:Map<number,any> = new Map(); \n    private cur_Platform = \"\"\n    constructor() {\n        this.paintItemList = [];\n    }\n\n    public async init(){\n        this.cur_Platform = this.getPlatform()\n        this.open_gallery = this.getSeverOpenGalleryState()\n        HttpSystem.instance.init((status,err,response)=>{\n            console.log(\" PAINT response\",response)\n            if(response.code == 10009){         //token 失效\n                let extrdata = {};\n                extrdata['target'] = 'login';\n                extrdata['isFinish'] =  true;\n                extrdata['gameId'] =  '';\n                extrdata['propId'] =  '';\n                extrdata['downloadUrl'] =  '';\n                TigoManager.instance.callApp({\"action\":\"TiGoNativePage\", \"param\": extrdata});\n            }\n        })\n\n\n        return new Promise(async(resolve,reject)=>{\n            await this.loadPropList()\n\n            // if(!this.open_gallery){               //未开启画廊\n                await this.loadPropLineTexture()  //加载线稿图\n                await this.loadFirstPropDetail()  //加载首个道具配置\n            // }\n            resolve(null)\n        }).catch((e) => {\n            cc.error(e);\n        });\n    }\n    /* web 和原生都需要 本地Chrome 调试  所以采用这种方式 调试哪个平台请把那个放在上面 */\n    public getPlatform():string{\n        if (cc.sys.isNative || CC_PREVIEW) {\n            return \"cn\";\n        }\n        if (!cc.sys.isNative|| CC_PREVIEW) {\n            return \"en\";\n        }\n    }\n\n    /* 加载道具列表配置 */\n    public loadPropList(){\n        let saveListConfig = {}             //道具保存状态\n        let paintItemListConfig = []        //道具列表\n        return new Promise(async (resolve, reject) => {\n            if(this.cur_Platform == \"en\")\n            {  \n                let params = {\n                    userId:TigoManager.instance.userId,\n                    gameId:TigoManager.instance.gameId,\n                    // userId:\"1111\",\n                    // gameId:10,\n                }\n                let sever_obj = await this.getSeverPaintData(params);\n                console.log(\"服务端返回道具列表=====\",sever_obj)\n                if(sever_obj){\n                    paintItemListConfig = sever_obj.data || [];\n                }\n                let params1:storageParams= {\n                    method:\"GET\",\n                    key:PAINT_ITEM_LIST_SAVE_KEY,\n                }\n                let data = TigoManager.instance.callAppToStorage(params1)\n                if(data){\n                    saveListConfig = JSON.parse(data)\n                }\n                console.log(\"原生端储存状态 saveListConfig=====\",saveListConfig)\n            }else{\n                paintItemListConfig = await this.getLocalPaintData();\n                saveListConfig = LocalStorageUtils.getObject(PAINT_ITEM_LIST_SAVE_KEY)||{};\n            }\n            let len = paintItemListConfig.length\n            for (let i = 0; i < len; i++) {\n                let  element = paintItemListConfig[i];\n                // if(i<2){\n                //     element.lockVal = 0            //测试\n                // }\n                \n                if(saveListConfig[i] && saveListConfig[i].isSave)\n                {\n                    element.isSave = saveListConfig[i].isSave\n                    element.lockVal = saveListConfig[i].lockVal\n                    element.isPlayUnlockSpine = saveListConfig[i].isPlayUnlockSpine\n                }\n                this.paintItemList[i] = element\n            }\n            // this.getUnlockSpineData() //保存需要播放解锁动画的道具\n            resolve(null);\n            console.log(\"===道具列表===\",this.paintItemList)\n        }).catch((e) => {\n            cc.error(e);\n        });  //加载道具列表\n    }\n\n    /* 预先加载线稿图  预加载5张 剩下的偷偷加载*/  \n    public loadPropLineTexture(){\n        let unlockData = this.getUnlockPaintList()\n        let preload = unlockData.slice(5)\n        let loadData = unlockData.slice(0,5)\n\n        preload.map((element,i)=>{\n            ResLoader.loadRes(element.iconUrl,cc.Texture2D,(err,res)=>{\n                console.log(\"后台加载的道具id===========》\"+element.propId)\n                paintAssetsManager.instance.setPaintLineTextureById(element.propId,res)\n            },BUNDLE_NAME)\n        })\n       \n        return Promise.all(loadData.map((element,i)=>{\n            return new Promise<void>((resolve, reject) => {\n                ResLoader.loadRes(element.iconUrl,cc.Texture2D,(err,res)=>{\n                    console.log(\"预先加载的道具id===========》\"+element.propId)\n                    paintAssetsManager.instance.setPaintLineTextureById(element.propId,res)\n                    resolve();\n                },BUNDLE_NAME)\n            }).catch((e) => {\n                cc.error(e);\n            });\n        }));\n    }\n\n    /* 加载第一个道具配置 */\n    public loadFirstPropDetail(){\n        let propId = 0\n        let unlockData = this.getUnlockPaintList()\n        if(unlockData[0])\n        {\n            propId = unlockData[0].propId || 0\n        }\n        console.log(\"首个道具ID\"+propId)\n        return this.getSeverPropDetails(propId)\n    }\n\n    /* H5道具列表 */\n    public getSeverPaintData(params:{userId:string,gameId:any}){\n        let url = TEST_SEVER_URL + SEVER_INTERFACE.proplist\n        // TigoManager.instance.token = \"eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJcdTAwMDcrODYxODM0NTE3OTgwMyIsImNyZWF0ZWQiOjE2MzIzOTYxODY3NDEsImV4cCI6MTY0Nzk0ODE4Nn0.ftUZ7vG9fvA3bvifoii8OYWI-WRIn1J__e3Mt7BidpOQ8ajTLZJwSOqDo--U4mfN0NL0MXdpXGUkVsyweCM1QA\"\n        // params = {\n        //     userId:\"265\",\n        //     gameId:16\n        // }\n        // let url1 = TEST_SEVER_URL + SEVER_INTERFACE.prop + 34\n        // HttpSystem.instance.httpGet(url1,null,`{\"Authorization\": \"Bearer ${TigoManager.instance.token}\"}`).then((res) => {\n        //     console.log(\"画笔配置\",res)\n        //     // let data = JSON.parse(res.data.expandDes)\n        //     // console.log(\"画笔配置\",data)\n        // })\n        return HttpSystem.instance.httpPost(url,params,null,`{\"Authorization\": \"Bearer ${TigoManager.instance.token}\"}`)\n    }\n\n    /* 原生道具列表 */\n    public getLocalPaintData(): Promise<any> {\n        return new Promise((res, rej) => {\n            res(PAINT_DATA_CONFIG);\n        })\n    }\n    \n    /* 是否已经开启画廊 */\n    public getSeverOpenGalleryState():boolean{\n        if(this.cur_Platform == \"en\")\n        {   \n            let params:storageParams= {\n                method:\"GET\",\n                key:SAVE_PAINT_SIGN,\n            }\n            let able = TigoManager.instance.callAppToStorage(params)\n            console.log(\"是否开启了画廊\",able)\n            return  able || false\n        }else{\n            return LocalStorageUtils.getBool(SAVE_PAINT_SIGN)\n        }\n    }\n\n    public getOpenGalleryState():boolean{\n        return this.open_gallery\n    }\n\n    // 获取道具数据\n    public setPaintPropDetailById(id,data){\n        this.paintPropDetailMap.set(id,data)\n        console.log(\"添加缓存下来的道具详情ID---->\",id)\n    }\n\n    public getPaintPropDetailById(id){\n        console.log(\"读取到了道具详情缓存ID==\"+id)\n        console.log(\"读取到了道具详情\",this.paintPropDetailMap.get(id))\n        return this.paintPropDetailMap.get(id)\n    }\n\n    /* 道具详情 */\n    public getSeverPropDetails(id:number){\n        let data = this.getPaintPropDetailById(id)\n        if(data)\n        {   console.log(\"该道具详情已经缓存 可直接读取\")\n            return Promise.resolve(null)\n        }else{\n            return new Promise((resolve,reject)=>{\n                if(this.cur_Platform == \"en\"){\n                    let url = TEST_SEVER_URL + SEVER_INTERFACE.prop + id\n                    HttpSystem.instance.httpGet(url,null,`{\"Authorization\": \"Bearer ${TigoManager.instance.token}\"}`).then((res) => {\n                        if(res.data){\n                            console.log(\"服务器返回的画笔数据\",res)\n                            let data = JSON.parse(res.data.expandDes)\n                            console.log(\"服务器返回的画笔data\",data)\n                            this.setPaintPropDetailById(id,data)\n                        }else{\n                            console.log(\"没加载到 ========================== 读取默认颜色配置\")\n                            this.setPaintPropDetailById(id,LOCAL_PROP_DETAIL[0])\n                        }\n                        resolve(res);\n                    })\n                }else{\n                    let resultData;\n                    let tempData = LOCAL_PROP_DETAIL.find(item=>{\n                        return item.propId == id;\n                    })\n                    if(tempData)\n                    {\n                        resultData = tempData\n                    }else{\n                        resultData = LOCAL_PROP_DETAIL[0]\n                    }\n                    this.setPaintPropDetailById(id,resultData)\n                    resolve(resultData);\n                }\n            }).catch((e) => {\n                cc.error(e);\n            });\n        }\n    }\n\n    /* 获取已解锁列表 */\n    public getUnlockPaintList():any[]{\n        let data = this.paintItemList.filter(item => {return item.lockVal == 0})\n        return data\n    }\n\n    /* 获取已保存列表 */\n    public getSavePaintData():any[]{\n        let data = this.paintItemList.filter(item => {return item.isSave == true})\n        return data\n    }\n\n    /* 获取全部列表 */\n    public getPaintListData():any{\n        return this.paintItemList;\n    }\n\n    /* 获取原生平台下保存路径 */ \n    public getNativePathByIndex(propId){\n        // return this.paintItemList[index].native_path\n        return propId + \"paint.png\" //修改这个需要同步给陈勇\n    }\n\n    /* 根据ID获取对应数据 */\n    public getPaintDataById(id:number){\n        return this.paintItemList.find(ele=>{\n            return ele.propId == id;\n        })\n    }\n\n    /* 保存涂色状态到本地 */\n    public setPaintItemUnlockById(id: number){\n        let paintData = this.paintItemList.find(ele => {\n            return ele.propId == id;\n        })\n        paintData.isSave = true;\n        console.log(\"改变线稿为保存状态---->\"+ id, \" ----------->\")\n        this.save();\n    }\n\n     /* 设置道具解锁到本地 */\n     public setENPaintItemUnlockById(id: number){\n        let paintData = this.paintItemList.find(ele => {\n            return ele.propId == id;\n        })\n        paintData.lockVal = 0;\n        console.log(\"改变道具为解锁状态---->\"+ id, \" ----------->\")\n        this.save();\n    }\n\n    /* 设置已经播放过解锁动画到本地 */\n    public setENPaintItemPlayUnlockSpineById(id: number){\n        let paintData = this.paintItemList.find(ele => {\n            return ele.propId == id;\n        })\n        paintData.isPlayUnlockSpine = true;\n        console.log(\"改变道具为已播放解锁动画状态---->\"+ id, \" ----------->\")\n        this.save();\n    }\n\n    public save(){\n        let obj = {}\n        this.paintItemList.forEach((val,index) => {\n            let key = index;\n            obj[key] = {}\n            obj[key]['isSave'] = val.isSave;\n            obj[key]['lockVal'] = val.lockVal;\n            obj[key]['isPlayUnlockSpine'] = val.isPlayUnlockSpine;\n        })\n        if(this.cur_Platform == \"en\")\n        {\n            let params:storageParams= {\n                method:\"PUT\",\n                key:PAINT_ITEM_LIST_SAVE_KEY,\n                value:JSON.stringify(obj),\n            }\n            console.log(\"保存列表每个道具状态===============》\"+obj)\n            TigoManager.instance.callAppToStorage(params)\n        }else{\n            LocalStorageUtils.setObject(PAINT_ITEM_LIST_SAVE_KEY, obj);\n        }\n    }\n\n    /* 获取需要播放解锁动画的道具 */\n    public getUnlockSpineData(){\n        //已解锁的道具\n        // let unLockPropData = LocalStorageUtils.getObject(\"LESSON_REWARD_INFO\") || {}\n       \n        let unLockPropData = {\n            1:{propId:1000},\n            // 2:{propId:1001},\n            // 3:{propId:1002},\n            // 4:{propId:1003},\n            // 5:{propId:1004},\n        }\n           \n        for (let key in unLockPropData) {\n            let element = unLockPropData[key];\n            let propData = this.getPaintDataById(element.propId)        \n            if(propData && !propData.isPlayUnlockSpine){                //如果没有播放过解锁动画\n                this.setENPaintItemUnlockById(element.propId)           //设置为解锁状态\n                this.playUnlockSpineData.push(element)\n                this.playUnlockSpineData.sort((item1,item2)=>{          //排道具ID排序 \n                    return item1.propId - item2.propId\n                })\n            }\n        }\n    }\n\n    public static get instance(): paintDataManager {\n        if (!paintDataManager._instance) {\n            paintDataManager._instance = new paintDataManager();\n        }\n        return paintDataManager._instance;\n    }\n}\nexport default paintDataManager.instance","import { SET_TOP_BAR_ACTIVE } from \"../../../../kit/events/events\";\nimport EventSystem from \"../../../../kit/system/event/EventSystem\";\nimport { tianSeManager } from \"../tianSeManager\";\nimport Gallery from \"./Gallery\";\nimport tianSeNodeInGallery from \"./tianSeNodeInGallery\";\nconst { ccclass, property } = cc._decorator;\n@ccclass\nexport default class paintMain extends cc.Component {\n\n    @property(cc.Node)\n    contentNode: cc.Node = null;\n\n    @property(cc.Prefab)\n    galleryPre: cc.Prefab = null;\n\n    @property(cc.Prefab)\n    tiansePre: cc.Prefab = null;\n\n    @property(cc.Prefab)\n    quitAlertPre: cc.Prefab = null;\n\n    public quitAlertNode: cc.Node = null\n    public galleryNode: cc.Node = null\n    public tianseNode: cc.Node = null\n\n    onLoad() {\n        tianSeManager.instance.init(this)\n        this.galleryNode = cc.instantiate(this.galleryPre)\n        this.node.addChild(this.galleryNode)\n        this.galleryNode.active = true\n    }\n\n    start() {\n        this.quitAlertNode = cc.instantiate(this.quitAlertPre)\n        this.node.addChild(this.quitAlertNode)\n        this.quitAlertNode.active = false\n        this.quitAlertNode.zIndex = cc.macro.MAX_ZINDEX\n    }\n\n    openPaint(data) {\n        EventSystem.emit(SET_TOP_BAR_ACTIVE,{active:false});\n        tianSeManager.instance.m_pOwner.setBackVisit(false)\n        if(!this.tianseNode){\n            this.tianseNode = cc.instantiate(this.tiansePre)\n            this.node.addChild(this.tianseNode)\n        }\n        this.tianseNode.active = true\n        this.tianseNode.getComponent<tianSeNodeInGallery>(tianSeNodeInGallery).initPaint(data)\n    }\n\n    closePaint() {\n        this.refreshItem()\n        this.tianseNode.active = false\n        tianSeManager.instance.m_pOwner.setBackVisit(true)\n        EventSystem.emit(SET_TOP_BAR_ACTIVE,{active:true});\n    }\n\n    refreshItem() {\n        this.galleryNode.getComponent<Gallery>(Gallery).refreshItem()\n    }\n\n    showQuitAlertPre() {\n        this.quitAlertNode.active = true\n    }\n    // update (dt) {}\n}\n","import { SET_TOP_BAR_ACTIVE } from \"../../../kit/events/events\";\nimport EventSystem from \"../../../kit/system/event/EventSystem\";\nimport { tianSeManager } from \"../src/tianSeManager\";\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class TopBar extends cc.Component {\n\n    public onBack(): void {\n        if(cc.sys.isNative)\n        {   \n            // tianSeManager.instance.showQuitAlertPre()\n            EventSystem.emit(SET_TOP_BAR_ACTIVE,{active:true});\n            tianSeManager.instance.MainNode.tianseNode.active = false\n            // tianSeManager.instance.MainNode.refreshItem()\n        }else{\n            tianSeManager.instance.m_pOwner.setBackVisit(true)\n            tianSeManager.instance.MainNode.tianseNode.active = false\n            // tianSeManager.instance.MainNode.refreshItem()\n        }\n    }\n\n    public onNext(): void {\n        \n    }\n\n}\n","import { LIFE_CYCLE_PARAMS } from \"../../kit/events/events\";\nimport ResLoader from \"../../kit/framework/load/ResLoader\";\nimport AudioManager from \"../../kit/system/audio/AudioManager\";\nimport EventSystem from \"../../kit/system/event/EventSystem\";\nimport { BUNDLE_NAME, MESSAGE_IN_GALLERY, Music, MUSIC_PATH} from \"./src/paintConfig\";\nimport paintDataManager from \"./src/paintDataManager\";\nimport { tianSeManager } from \"./src/tianSeManager\";\nimport TigoManager from \"./src/TigoManager\";\nconst { ccclass, property } = cc._decorator;\n@ccclass\nexport default class paint extends cc.Component {\n\n    @property(cc.Node)\n    content: cc.Node = null;\n\n    @property(cc.Node)\n    btnBack: cc.Node = null;\n\n    @property(cc.Prefab)\n    firstPaintGame: cc.Prefab = null;\n\n    @property(cc.Prefab)\n    paintGroup: cc.Prefab = null;\n\n    public paintGroupNode: cc.Node = null\n    public loadingNode: cc.Node = null\n    public firstPaintGameNode: cc.Node = null\n\n    public start() {\n        this.setBackVisit(true)\n    }\n\n    public onLoad() {\n        let userData = TigoManager.instance.getBaseInfo();\n        if (userData) {\n            let ud = JSON.parse(userData);\n            TigoManager.instance.token = ud.token\n            TigoManager.instance.setUserId(ud.userId);\n            TigoManager.instance.setGameId(ud.gameId);\n            TigoManager.instance.setPropId(ud.propId);\n            tianSeManager.instance.setPropId(ud.propId)\n            TigoManager.instance.setClassId(ud.lessonId);\n            TigoManager.instance.setModuleId(ud.moduleId);\n            TigoManager.instance.setLessonModuleId(ud.lessonModuleId);\n            console.log(\"gameId == \" + TigoManager.instance.classId + \"  userId == \" + TigoManager.instance.userId);\n        }\n\n        tianSeManager.instance.setOwner(this)\n        this.regisEvent()\n        this.initPaintData()\n    }\n\n    public initPaintData() {\n        paintDataManager.init().then(() => {\n            ResLoader.loadRes(\"prefab/loaDing\", cc.Prefab, (err, res) => {\n                this.loadingNode = cc.instantiate(res)\n                this.loadingNode.active = false\n                this.node.getChildByName(\"uiNode\").addChild(this.loadingNode)\n\n                let unLockData = paintDataManager.getUnlockPaintList()\n                if(unLockData.length == 0)\n                {\n                    console.log(\"您尚未获得任何免费道具\")\n                }\n\n                if (!cc.sys.isNative) {\n                    var splash = document.getElementById('splash');\n                    splash.style.display = 'none';\n                }\n                this.initUI()\n            }, BUNDLE_NAME)\n        },()=>{\n            this.initUI()\n        })\n    }\n\n    /* 打开涂色游戏 */\n    public openPaint() {\n        this.firstPaintGameNode = cc.instantiate(this.firstPaintGame)\n        this.content.addChild(this.firstPaintGameNode)\n    }\n\n    public setShowLoading(able) {\n        this.loadingNode.active = able\n    }\n\n    /* 打开涂色馆 */\n    public openPaintGroup() {\n        if (cc.isValid(this.firstPaintGameNode)) {\n            this.firstPaintGameNode.destroy()\n        }\n        this.paintGroupNode = cc.instantiate(this.paintGroup)\n        this.content.addChild(this.paintGroupNode)\n    }\n\n    public initUI() {\n        let openGallery = paintDataManager.getOpenGalleryState()\n        if (!openGallery) {\n            this.openPaint()\n        } else {\n            this.openPaintGroup()\n        }\n        console.log(\"是否进入画廊--->\",openGallery)\n        AudioManager.playMusic(BUNDLE_NAME, `${MUSIC_PATH}${Music.bgm}`)\n    }\n\n    public setBackVisit(able?: boolean) {\n        if (cc.sys.isNative) {\n            this.btnBack.active = false\n        } else {\n            this.btnBack.active = able\n        }\n    }\n\n    public Back(event, choose) {\n        console.log(\"返回原生========》\")\n        event.target.active = false\n        AudioManager.stopEffect()\n        AudioManager.stopMusic()\n        cc.audioEngine.pauseMusic();\n        cc.audioEngine.pauseAllEffects();\n        cc.game.pause();\n        TigoManager.instance.callAppToClose(\"replayOrNext\", true);\n    }\n\n    public regisEvent() {\n        // cc.game.on(cc.game.EVENT_HIDE, function () {\n        //     console.log(\"游戏进入了后台~~~~~~~~\");\n        //     cc.audioEngine.pauseMusic();\n        //     cc.audioEngine.pauseAllEffects();\n        //     cc.game.pause();\n        // });\n\n        // cc.game.on(cc.game.EVENT_SHOW, function () {\n        //     console.log(\"重新回到了游戏~~~~~~~~\");\n        //     cc.audioEngine.resumeMusic();\n        //     cc.audioEngine.resumeAllEffects();\n        //     cc.game.resume();\n        // });\n\n        EventSystem.on(MESSAGE_IN_GALLERY, this.openPaintGroup, this);\n        EventSystem.on(LIFE_CYCLE_PARAMS, this.setPropId, this);\n    }\n\n    public setPropId(_data) {\n        let data = _data.data\n        console.log(\"给子游戏传参数了========>\",_data)\n        tianSeManager.instance.setPropId(data.propId)\n    }\n\n    public onDestroy() {\n        EventSystem.off(MESSAGE_IN_GALLERY, this.openPaintGroup, this);\n        EventSystem.off(LIFE_CYCLE_PARAMS, this.setPropId, this);\n    }\n}\n\n\n\n\n","import { BUNDLE_NAME,GUIDE_STATE,LOCAL_PROP_DETAIL,MUSIC_PATH } from \"./paintConfig\";\nimport { tianSeManager } from \"./tianSeManager\";\nimport AudioManager from \"../../../kit/system/audio/AudioManager\";\nimport paintDataManager from \"./paintDataManager\";\nconst {ccclass, property} = cc._decorator;\n@ccclass\nexport default class pen extends cc.Component {\n\n    @property(cc.Node)\n    penList: cc.Node[] = [];\n\n    public basicX:number = 80\n    public color_config:any = null\n    \n    public onEnable(){\n        // this.refreshColorNode()\n    }\n\n    /* 刷新当前选中颜色 */\n    public refreshColorNode(){\n        let len = this.penList.length\n        let tanse_index = tianSeManager.instance.TanseIndex\n        let color_index = tianSeManager.instance.ColorIndex\n        console.log(\"tanse_index =================================================>\"+tanse_index)\n        console.log(\"ColorIndex =================================================>\"+color_index)\n        let data = paintDataManager.getPaintPropDetailById(tanse_index)\n        this.color_config = data.itemData\n        if(!this.color_config)\n        {   \n            console.log(\"pen ====> 读取默认颜色配置\")\n            this.color_config = LOCAL_PROP_DETAIL[0].itemData\n        }\n        console.log(\"this.color_config =================================================>\",this.color_config)\n        // this.color_config = LOCAL_PROP_DETAIL[0].itemData\n        for (let i = 0; i < len; i++) {\n            let able = i == color_index\n            const node = this.penList[i];\n\n            let floor = node.getChildByName(\"floor\")\n            let select = node.getChildByName(\"select\")\n            let unselect = node.getChildByName(\"unselect\")\n            let _color =  this.color_config[i].colorValue \n            floor.color = new cc.Color().fromHEX(\"#\" +_color)\n        \n            select.active = able\n            unselect.active = !able\n            node.x = able == true ? 37 : this.basicX\n\n            if(able) {\n                tianSeManager.instance.CurColor = floor.color\n            }\n        }\n    }\n\n    /* 设置新颜色并刷新界面 */\n    public clickEventBack (event,choose) {\n        if(choose == tianSeManager.instance.ColorIndex){\n            return\n        }\n        tianSeManager.instance.ColorIndex = Number(choose)\n        this.refreshColorNode()\n        if(tianSeManager.instance.guideState == GUIDE_STATE.INIT)\n        {\n            tianSeManager.instance.guideState = GUIDE_STATE.CLICK_HB\n            tianSeManager.instance.setGuide()\n        }\n        // if(cc.sys.isNative)\n        // {   \n            let effect = this.color_config[choose].colorName\n            AudioManager.playEffect(BUNDLE_NAME, `${MUSIC_PATH}${effect}`);\n        // }\n    }\n}\n","import EventSystem from \"../../../../kit/system/event/EventSystem\";\nimport { paintAssetsManager } from \"../paintAssetsManager\";\nimport { MESSAGE_IN_GALLERY } from \"../paintConfig\";\nimport { tianSeManager } from \"../tianSeManager\";\n\nconst { ccclass, property } = cc._decorator;\n@ccclass\nexport default class NewClass extends cc.Component {\n\n    @property(cc.Node)\n    scaleNode: cc.Node = null\n\n    @property(cc.Node)\n    guideNode: cc.Node = null\n\n    @property(cc.Node)\n    showNode: cc.Node = null\n\n    isTouch: boolean = false\n\n    left_pos = cc.v3(0, 0)\n    right_pos = cc.v3(0, 0)\n\n    left_light: cc.Node = null\n    right_light: cc.Node = null\n    onLoad() {\n        this.recordLightPos()\n        this.node.on(cc.Node.EventType.TOUCH_START, this.touchStart, this)\n    }\n\n    onEnable() {\n        this.scaleNode.scale = 1.5\n        this.guideNode.active = false\n        this.showNode.active = false\n        this.scheduleOnce(() => {\n            this.guideNode.active = true\n        }, 4)\n    }\n\n    recordLightPos() {\n        this.left_light = this.node.getChildByName(\"left_light\")\n        this.right_light = this.node.getChildByName(\"right_light\")\n        this.left_pos = this.left_light.position\n        this.right_pos = this.right_light.position\n    }\n\n    setScaleNode() {\n        let left_node = this.node.getChildByName(\"left_node\")\n        let right_node = this.node.getChildByName(\"right_node\")\n        this.left_light.position = this.left_pos\n        this.right_light.position = this.right_pos\n\n        cc.tween(this.left_light).to(1.5, { position: left_node.position }).start()\n        cc.tween(this.right_light).to(1.5, { position: right_node.position }).start()\n        cc.tween(this.scaleNode).to(1.5, { scale: 1 }).call(() => this.isTouch = true).start()\n    }\n\n    touchStart() {\n        if (this.isTouch) {\n            this.unscheduleAllCallbacks()\n            this.guideNode.active = false\n            this.isTouch = false\n            this.node.active = false\n            if (tianSeManager.instance.curIsGallery) {\n                tianSeManager.instance.closePaint()\n            } else {      //进入画廊\n                if (tianSeManager.instance.unLockCount >= tianSeManager.instance.max_tanse_index) {\n                    EventSystem.emit(MESSAGE_IN_GALLERY);\n                }\n            }\n        }\n    }\n\n    setShowImage(tanIndex) {\n        this.scheduleOnce(()=>{\n            let _tex = null\n            let tex = paintAssetsManager.instance.getPaintTextureById(tanIndex)\n            let tex_line = paintAssetsManager.instance.getPaintLineTextureById(tanIndex)\n            if (tex) {\n                console.log(\"取到了已经涂过缓存 ======\")\n                _tex = tex\n            } else {\n                console.log(\"取到了线稿缓存 ======\")\n                _tex = tex_line\n            }\n            let spr: cc.SpriteFrame = new cc.SpriteFrame()\n            this.showNode.active = true\n            spr.setTexture(_tex)\n            this.showNode.getComponent(cc.Sprite).spriteFrame = spr;\n            this.setScaleNode()\n        })\n    }\n\n    onDestroy() {\n        this.node.off(cc.Node.EventType.TOUCH_START, this.touchStart, this)\n    }\n}\n","import tianSeNode from \"./tianSeNode\";\nimport { GUIDE_STATE } from \"../paintConfig\";\nimport pen from \"../pen\";\nimport showPaint from \"./showPaint\";\nimport { tianSeManager } from \"../tianSeManager\";\nimport paintDataManager from \"../paintDataManager\";\nconst {ccclass, property} = cc._decorator;\n@ccclass\nexport default class tanseMain extends cc.Component {\n\n    @property(cc.Prefab)\n    penPre: cc.Prefab = null;\n\n    @property(cc.Prefab)\n    guidePre: cc.Prefab = null;\n\n    @property(cc.Prefab)\n    tansePre: cc.Prefab = null;\n\n    @property(cc.Prefab)\n    showPaintPre: cc.Prefab = null;\n\n    public isGuide = true\n    public penNode: cc.Node = null\n    public guideNode: cc.Node = null\n    public tanseNode: cc.Node = null\n\n    public onLoad () {\n        tianSeManager.instance.init(this,true,true)\n        this.loadPropDetail()\n    }\n    \n    public loadPropDetail(){\n        paintDataManager.getSeverPropDetails(tianSeManager.instance.TanseIndex).then(()=>{\n            this.tanseNode = cc.instantiate(this.tansePre)\n            this.node.addChild(this.tanseNode)\n\n            this.guideNode = cc.instantiate(this.guidePre)\n            this.node.addChild(this.guideNode)\n            this.guideNode.active = false\n\n            this.setGuide()\n        });\n    }\n\n    public start () {\n       \n    }\n\n    public nextPaint(){\n        this.loadCurPropDetail()\n    }\n\n    async loadCurPropDetail(){\n        paintDataManager.getSeverPropDetails(tianSeManager.instance.TanseIndex).then(()=>{\n            this.tanseNode.getComponent<tianSeNode>(tianSeNode).initPaint()\n        });\n    }\n\n    /* 引导 */\n    public setGuide() {\n        this.guideNode.active = false\n        this.unscheduleAllCallbacks()\n        if(!this.isGuide || tianSeManager.instance.guideState == GUIDE_STATE.DONE) return\n        switch (tianSeManager.instance.guideState) {\n            case GUIDE_STATE.INIT:\n                this.scheduleOnce(() => {\n                        this.guideNode.active = true\n                        this.guideNode.x = this.tanseNode.getChildByName(\"penNode\").x + 100\n                }, 2)\n                break\n            case GUIDE_STATE.CLICK_HB:\n                this.scheduleOnce(() => {\n                        this.guideNode.active = true\n                        this.guideNode.x = this.tanseNode.x - 100\n                }, 2)\n                break\n            case GUIDE_STATE.CLICK_FILL:\n                tianSeManager.instance.guideState = GUIDE_STATE.DONE\n                this.tanseNode.getChildByName(\"done\").active = true\n                break\n            case  GUIDE_STATE.DONE:\n                this.tanseNode.getChildByName(\"done\").active = false\n                break\n        }\n    }\n}\n","import { GUIDE_STATE, MESSAGE_IN_GALLERY } from \"./paintConfig\";\nimport paintDataManager from \"./paintDataManager\";\n\nconst { ccclass, property } = cc._decorator;\n@ccclass\nexport class tianSeManager {\n    private static _instance: tianSeManager\n\n    public propId: any = null\n    public guideState: string = \"\"\n    public curIsGallery: boolean = false\n    public MainNode: any = null;\n    public unLockCount: number = 0;\n    public m_pOwner: any = null;\n    private tanse_index: number = null;\n    private color_index: number = null;\n    public max_tanse_index: number = 0;\n    public open_gallery_in_firstPaint: Boolean = false\n    private cur_Color: cc.Color = cc.color(255, 255, 255);\n\n    /* 初始化 */\n    public init(main: cc.Component,isGuide = false,firstGame = false): void {\n        this.MainNode = main\n        this.color_index = -1\n\n        if(firstGame){\n            let unLockData = paintDataManager.getUnlockPaintList()\n            if(unLockData)\n            {\n                this.tanse_index = unLockData[this.unLockCount].propId\n                this.max_tanse_index = unLockData.length\n            }\n        }else{\n            this.curIsGallery = true\n            this.unLockCount = 0\n            this.tanse_index = 0\n            this.max_tanse_index = 0\n        }\n\n        if (isGuide) {\n            this.guideState = GUIDE_STATE.INIT\n        }\n    }\n\n    public change(): void {\n        this.unLockCount++\n        if (this.unLockCount >= this.max_tanse_index) {\n            this.open_gallery_in_firstPaint = true     //先进的游戏场景又进的画廊\n            // EventSystem.emit(MESSAGE_IN_GALLERY);\n            return\n        }\n        let unLockData = paintDataManager.getUnlockPaintList()\n        if(unLockData){\n            tianSeManager.instance.TanseIndex = unLockData[this.unLockCount].propId\n            this.MainNode.nextPaint()\n        }\n    }\n\n    public setPropId(id){\n        let able = paintDataManager.getOpenGalleryState()\n        if(able)\n        {\n            this.propId = id\n        }\n    }\n\n    public setOwner(owner){\n        this.m_pOwner = owner\n    }\n    \n    public openPaint(data) {\n        this.MainNode.openPaint(data)\n    }\n\n    public closePaint() {\n        this.MainNode.closePaint()\n    }\n\n    public refreshItem(){\n        this.MainNode.refreshItem()\n    }\n\n    public showQuitAlertPre() {\n        this.MainNode.showQuitAlertPre()\n    }\n\n    public setGuide() {\n        this.MainNode.setGuide()\n    }\n\n    public get TanseIndex(): number {\n        return this.tanse_index;\n    }\n\n    public get ColorIndex(): number {\n        return this.color_index;\n    }\n\n    public set ColorIndex(value: number) {\n        this.color_index = value;\n        // console.log(\"当前颜色下标\" + this.color_index)\n    }\n\n    public get CurColor(): cc.Color {\n        return this.cur_Color;\n    }\n\n    public set CurColor(value: cc.Color) {\n        this.cur_Color = value;\n        // console.log(\"当前颜色\", this.cur_Color)\n    }\n\n    public set TanseIndex(value: number) {\n        this.tanse_index = value;\n    }\n\n    public static get instance(): tianSeManager {\n        if (!tianSeManager._instance) {\n            tianSeManager._instance = new tianSeManager();\n        }\n        return tianSeManager._instance;\n    }\n}\n","import AudioManager from \"../../../../kit/system/audio/AudioManager\";\r\nimport ResLoader from \"../../../../kit/framework/load/ResLoader\";\r\nimport { BUNDLE_NAME,Music, MUSIC_PATH } from \"../../src/paintConfig\";\r\nimport { tianSeManager } from \"../tianSeManager\";\r\nimport { paintAssetsManager } from \"../paintAssetsManager\";\r\nimport pen from \"../pen\";\r\nimport { storageParams } from \"../paintInterface\";\r\nimport TigoManager from \"../TigoManager\";\r\nimport paintDataManager from \"../paintDataManager\";\r\nimport showPaint from \"../firstPaint/showPaint\";\r\nconst { ccclass, property } = cc._decorator;\r\n@ccclass\r\nexport default class tianSeNodeInGallery extends cc.Component {\r\n\r\n    @property(cc.Camera)\r\n    paint_Camera: cc.Camera = null;\r\n\r\n    @property(cc.Node)\r\n    paint1: cc.Node = null;\r\n\r\n    @property(cc.Node)\r\n    paint2: cc.Node = null;\r\n\r\n    @property(cc.Node)\r\n    doneBtn: cc.Node = null;\r\n\r\n    @property(cc.Node)\r\n    topMask: cc.Node = null;\r\n\r\n    @property(cc.Prefab)\r\n    penPre: cc.Prefab = null;\r\n\r\n    @property(cc.Prefab)\r\n    topBarPre: cc.Prefab = null;\r\n\r\n    @property(cc.Prefab)\r\n    showPaintPre: cc.Prefab = null;\r\n\r\n\r\n    private tetTexture: cc.RenderTexture = null;\r\n    private curDrawTexture2D: cc.Texture2D = null;\r\n\r\n    /**\r\n     * 像素数据，数据类型为 RGBA 格式的 大小为 （长 x 高 x 4（R、G、B、A））Uint8Array 数组\r\n     */\r\n    private winWidth: number = 0;\r\n    private winHeight: number = 0;\r\n\r\n    private curTextureData: any = {};\r\n    private savedTexutreData: any = {};\r\n\r\n    private b_inited: boolean = false;\r\n\r\n    /**\r\n     * 0 填充，-1清除\r\n     */\r\n    private curDrawMode = 0;\r\n    private checkedPointDic: any = {};\r\n    private checkPointList: Array<any> = [];\r\n\r\n    public paintFrame = []\r\n    public penNode:cc.Node = null\r\n    public isTouch = false\r\n    public showPaintNode: cc.Node = null\r\n\r\n    data:any = {}\r\n\r\n    public onLoad() {\r\n        this.addEvent()\r\n        this.penNode = cc.instantiate(this.penPre)\r\n        this.node.addChild(this.penNode)\r\n        let topBar = cc.instantiate(this.topBarPre)\r\n        this.node.addChild(topBar)\r\n        topBar.zIndex = cc.macro.MAX_ZINDEX\r\n        // AudioManager.playMusic(BUNDLE_NAME, `${MUSIC_PATH}${Music.bgm}`);\r\n    }\r\n\r\n    public initPaint(data){\r\n        this.data = data\r\n        this.b_inited = false;  \r\n        this.isTouch = false\r\n        if(this.showPaintNode)\r\n        {    \r\n            this.showPaintNode.active = false\r\n        }\r\n        this.node.getChildByName(\"done\").active = true\r\n        this.penNode.getComponent<pen>(pen).refreshColorNode()\r\n        this.loadPaintFrame(data)\r\n    }\r\n\r\n    async loadPaintFrame(data){\r\n        let tex_paint = paintAssetsManager.instance.getPaintTextureById(data.propId)\r\n        let spr_paint: cc.SpriteFrame = new cc.SpriteFrame()\r\n        spr_paint.setTexture(tex_paint)\r\n        console.log(\"读取已涂色图片成功\"+data.propId)\r\n        this.paint2.getComponent(cc.Sprite).spriteFrame = spr_paint;\r\n       \r\n        let tex_line = paintAssetsManager.instance.getPaintLineTextureById(tianSeManager.instance.TanseIndex)\r\n        if(tex_line){\r\n            console.log(\"读取精灵成功\"+tianSeManager.instance.TanseIndex)\r\n            let spr: cc.SpriteFrame = new cc.SpriteFrame(tex_line)\r\n            this.paint1.getComponent(cc.Sprite).spriteFrame = spr\r\n            this.initView()\r\n        }else{\r\n            console.log(\"未取到重新加载\",tianSeManager.instance.TanseIndex)\r\n            ResLoader.loadRes(data.iconUrl,cc.Texture2D,(err,res)=>{\r\n                if(err)\r\n                {\r\n                    console.log(\"加载失败\"+tianSeManager.instance.TanseIndex)\r\n                }\r\n                console.log(\"加载成功\",tianSeManager.instance.TanseIndex)\r\n                let spr: cc.SpriteFrame = new cc.SpriteFrame(res)\r\n                this.paint1.getComponent(cc.Sprite).spriteFrame = spr;\r\n                paintAssetsManager.instance.setPaintLineTextureById(this.data.propId,res)\r\n                this.initView()\r\n            },BUNDLE_NAME)\r\n        }\r\n    }\r\n\r\n    protected initView(): void {\r\n        this.curDrawMode = 0;\r\n        this.topMask.active = false\r\n        this.paint_Camera.ortho = true\r\n        this.paint_Camera.alignWithScreen = false;\r\n        this.tetTexture = new cc.RenderTexture();\r\n        this.curDrawTexture2D = new cc.Texture2D();\r\n\r\n        this.scheduleOnce(()=>{this.resetRendData()})\r\n    }\r\n\r\n    public resetRendData() {\r\n        this.paint2.active = false\r\n        this.paint_Camera.orthoSize = this.paint1.height * .5;\r\n\r\n        this.winWidth = this.paint1.width\r\n        this.winHeight = this.paint1.height\r\n\r\n        this.paint2.x = this.paint1.x\r\n        this.paint2.y = this.paint1.y\r\n        this.paint_Camera.node.x = this.paint1.x\r\n        this.paint_Camera.node.y = this.paint1.y\r\n\r\n        this.paint2.setContentSize(this.paint1.getContentSize())\r\n        this.paint_Camera.node.setContentSize(this.paint1.getContentSize())\r\n\r\n        // @ts-ignore\r\n        this.tetTexture._depthStencilBuffer = null;\r\n        // @ts-ignore\r\n        this.tetTexture.initWithSize(this.paint1.width, this.paint1.height, cc.gfx.RB_FMT_S8);\r\n        this.paint_Camera.targetTexture = this.tetTexture;\r\n        this.paint_Camera.render(this.paint1)\r\n\r\n\r\n        // this.scheduleOnce(() => {\r\n            this.paint2.active = true\r\n            let textureData: any = this.tetTexture.readPixels();\r\n            this.savedTexutreData = textureData.slice(); // slice()会返回新的数组\r\n            let tetTexture1 = new cc.RenderTexture();\r\n             // @ts-ignore\r\n            tetTexture1._depthStencilBuffer = null;\r\n            // @ts-ignore\r\n            tetTexture1.initWithSize(this.paint1.width, this.paint1.height, cc.gfx.RB_FMT_S8);\r\n            this.paint_Camera.targetTexture = tetTexture1;\r\n            this.paint_Camera.render(this.paint2)\r\n\r\n            this.scheduleOnce(()=>{\r\n                this.curTextureData = tetTexture1.readPixels();\r\n                //  this.curDrawTexture2D.initWithData(this.filpYImage(this.curTextureData, this.winWidth, this.winHeight), cc.Texture2D.PixelFormat.RGBA8888, this.winWidth, this.winHeight);\r\n            },0.1)\r\n            // this.tetTexture.setFlipY(false);\r\n            this.b_inited = true;\r\n            // let spr: cc.SpriteFrame = new cc.SpriteFrame()\r\n            // this.curDrawTexture2D.initWithData(this.filpYImage(this.curTextureData, this.winWidth, this.winHeight), cc.Texture2D.PixelFormat.RGBA8888, this.winWidth, this.winHeight);\r\n            // spr.setTexture(this.curDrawTexture2D);\r\n            // this.paint2.getComponent(cc.Sprite).spriteFrame = spr;\r\n            // this.node.active = true\r\n        // })\r\n    }\r\n\r\n    /**\r\n     * 转化图片RGBA数据\r\n     * @param data \r\n     * @param width \r\n     * @param height \r\n     */\r\n    private filpYImage(data, width, height): any {\r\n        // create the data array\r\n        let picData = new Uint8Array(width * height * 4);\r\n        let rowBytes = width * 4;\r\n        for (let row = 0; row < height; row++) {\r\n            let srow = height - 1 - row;\r\n            let start = srow * width * 4;\r\n            let reStart = row * width * 4;\r\n            // save the piexls data\r\n            for (let i = 0; i < rowBytes; i++) {\r\n                picData[reStart + i] = data[start + i];\r\n            }\r\n        }\r\n        return picData;\r\n    }\r\n\r\n    /**\r\n     * 添加监听事件\r\n     */\r\n    private addEvent(): void {\r\n        this.paint1.on(cc.Node.EventType.TOUCH_END, (event: cc.Event.EventTouch) => {\r\n            if (!this.b_inited || !this.curTextureData || tianSeManager.instance.ColorIndex == -1) return;\r\n            this.isTouch = true\r\n            let tempPoint = event.getLocation()\r\n\r\n            let pos = this.paint1.convertToNodeSpaceAR(cc.v2(tempPoint.x, tempPoint.y))\r\n            pos.x = pos.x + this.paint1.width * .5\r\n            pos.y = pos.y + this.paint1.height * .5\r\n            this.checkColorFill(Math.floor(pos.x), Math.floor(pos.y));\r\n\r\n            let spr: cc.SpriteFrame = new cc.SpriteFrame()\r\n            this.curDrawTexture2D.initWithData(this.filpYImage(this.curTextureData, this.winWidth, this.winHeight), cc.Texture2D.PixelFormat.RGBA8888, this.winWidth, this.winHeight);\r\n            spr.setTexture(this.curDrawTexture2D);\r\n            // this.curDrawTexture2D.setFilters(cc.Texture2D.Filter.NEAREST,cc.Texture2D.Filter.NEAREST)\r\n            this.paint2.getComponent(cc.Sprite).spriteFrame = spr;\r\n        }, this);\r\n    }\r\n\r\n    //检测填充点\r\n    private checkColorFill(x, y): void {\r\n        if (!this.inArea(x, y)) return;\r\n        this.checkPointList = [];\r\n        this.checkedPointDic = {};\r\n\r\n        this.checkPushPoint(this.checkedPointDic, { x: x, y: y });\r\n        let _checkPoint = this.checkPointList[0]; // 删除并返回数组中最后一个元\r\n        let _curIndex = Math.floor(this.winWidth * _checkPoint.y * 4 + _checkPoint.x * 4);\r\n        let _b_IsWhite1 = this.savedTexutreData[_curIndex] + this.savedTexutreData[_curIndex + 1] + this.savedTexutreData[_curIndex + 2];\r\n        if (_b_IsWhite1) {\r\n            AudioManager.playEffect(BUNDLE_NAME, `${MUSIC_PATH}${Music.clickFill}`);\r\n        }\r\n        while (this.checkPointList.length > 0) {\r\n            let checkPoint = this.checkPointList.pop(); // 删除并返回数组中最后一个元素\r\n\r\n            if (!checkPoint) continue;\r\n            if (!this.inArea(checkPoint.x, checkPoint.y)) continue;\r\n\r\n            let curIndex = Math.floor(this.winWidth * checkPoint.y * 4 + checkPoint.x * 4);\r\n            let colorTotal = this.savedTexutreData[curIndex] + this.savedTexutreData[curIndex + 1] + this.savedTexutreData[curIndex + 2];\r\n            let opi = this.savedTexutreData[curIndex + 3]\r\n            let b_IsWhite = colorTotal > 300; // 300 的值是一个优化点，原本的值属于255*3纯黑\r\n            if (!b_IsWhite) continue; // 跳过循环\r\n\r\n            // this.checkedPointDic[checkPoint.x + \"_\" + checkPoint.y] = true;\r\n            switch (this.curDrawMode) {\r\n                case 0:\r\n                    this.curTextureData[curIndex] = tianSeManager.instance.CurColor.r;\r\n                    this.curTextureData[curIndex + 1] = tianSeManager.instance.CurColor.g;\r\n                    this.curTextureData[curIndex + 2] = tianSeManager.instance.CurColor.b;\r\n                    break;\r\n                case -1:\r\n                    this.curTextureData[curIndex] = 255;\r\n                    this.curTextureData[curIndex + 1] = 255;\r\n                    this.curTextureData[curIndex + 2] = 255;\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n            this.checkPushPoint(this.checkedPointDic, { x: checkPoint.x, y: checkPoint.y + 1 });\r\n            this.checkPushPoint(this.checkedPointDic, { x: checkPoint.x, y: checkPoint.y - 1 });\r\n            this.checkPushPoint(this.checkedPointDic, { x: checkPoint.x + 1, y: checkPoint.y });\r\n            this.checkPushPoint(this.checkedPointDic, { x: checkPoint.x - 1, y: checkPoint.y });\r\n        }\r\n    }\r\n\r\n    // var a = {}\r\n    // a[10] = {}\r\n    // a[10][20] = true\r\n    // console.log(a) =》 {10：{}}\r\n    /** \r\n     * 检索触摸点\r\n     * @param checkedPointDic \r\n     * @param checkPoint 触摸点\r\n     */\r\n    private checkPushPoint(checkedPointDic, checkPoint) {\r\n        if (checkedPointDic[checkPoint.x] && checkedPointDic[checkPoint.x][checkPoint.y]) return;\r\n\r\n        if (!checkedPointDic[checkPoint.x]) checkedPointDic[checkPoint.x] = {};\r\n        checkedPointDic[checkPoint.x][checkPoint.y] = true;\r\n        this.checkPointList.push(checkPoint);\r\n    }\r\n\r\n    /**\r\n     * 返回点是否属于屏幕内              \r\n     * @param x \r\n     * @param y \r\n     */\r\n    private inArea(x: number, y: number): boolean {\r\n        return x >= 0 && x <= this.winWidth && y >= 0 && y <= this.winHeight;\r\n    }\r\n\r\n    public doneCurTs(event, choose) {\r\n        event.target.active = false\r\n        // AudioManager.playEffect(BUNDLE_NAME, `${MUSIC_PATH}${Music.done}`);\r\n        // tianSeManager.instance.m_pOwner.setShowLoading(true)\r\n\r\n        //如果打开一点没动 保存旧的\r\n        if(this.isTouch){\r\n            //改变图片为保存状态 并保存texture到本地\r\n            paintDataManager.setPaintItemUnlockById(tianSeManager.instance.TanseIndex)\r\n            paintAssetsManager.instance.setPaintTextureById(tianSeManager.instance.TanseIndex,this.curDrawTexture2D)\r\n            //保存到设备作为备份\r\n            this.saveFileToLocal(this.curTextureData)\r\n              //刷新画廊界面\r\n            // tianSeManager.instance.refreshItem()\r\n        }else{\r\n            console.log(\"该涂色道具无任何变化～～～\")\r\n        }\r\n       \r\n        //展示涂好的作品\r\n        if(this.showPaintNode)\r\n        {   \r\n            this.showPaintNode.active = true\r\n            this.showPaintNode.getComponent<showPaint>(showPaint).setShowImage(tianSeManager.instance.TanseIndex)\r\n        }else{\r\n            this.showPaintNode = cc.instantiate(this.showPaintPre)\r\n            this.node.addChild(this.showPaintNode)\r\n            this.showPaintNode.getComponent<showPaint>(showPaint).setShowImage(tianSeManager.instance.TanseIndex)\r\n        }\r\n       \r\n        AudioManager.playEffect(BUNDLE_NAME, `${MUSIC_PATH}${Music.done}`);\r\n    }\r\n\r\n    public saveFileToLocal(data){\r\n        if (cc.sys.isNative) {\r\n            let path = paintDataManager.getNativePathByIndex(this.data.propId)\r\n            let filePath = jsb.fileUtils.getWritablePath() + path;\r\n            let _data = this.filpYImage(data, this.winWidth, this.winHeight)\r\n            // @ts-ignore\r\n            let success = jsb.saveImageData(_data, this.winWidth, this.winHeight, filePath)\r\n            if (success) {\r\n                // this.paint2.getComponent(cc.Sprite).spriteFrame = null\r\n                // let data  = paintAssetsManager.instance.getPaintTextureById(this.data.propId)\r\n                // cc.assetManager.releaseAsset(data)\r\n                // cc.assetManager.loadRemote(filePath,(err,res:any)=>{\r\n                //     if(err)\r\n                //     {\r\n                //         console.log(\"加载失败\",err)\r\n                //     }\r\n                //     // tianSeManager.instance.m_pOwner.setShowLoading(false)\r\n                //     console.log(\"加载成功\"+this.data.native_path)\r\n                //     paintAssetsManager.instance.setPaintTextureById(this.data.propId,res)\r\n                //     tianSeManager.instance.closePaint()\r\n                //    \r\n                // })\r\n                this.resetTianSeData()\r\n                console.log(\"save image data success, file: \" + filePath);\r\n            }\r\n            else {\r\n                cc.error(\"save image data failed!\");\r\n            }\r\n        }else{\r\n            this.saveImageToWeb()\r\n        }\r\n    }\r\n\r\n    public saveImageToWeb(){\r\n        let canvas = document.createElement('canvas');\r\n        let width = canvas.width = this.winWidth;\r\n        let height = canvas.height = this.winHeight;\r\n        let ctx = canvas.getContext('2d');\r\n\r\n        let rowBytes = width * 4;\r\n        for (let row = 0; row < height; row++) {\r\n            let srow = height - 1 - row;\r\n            let imageData = ctx.createImageData(width, 1);\r\n            let start = srow * width * 4;\r\n            for (let i = 0; i < rowBytes; i++) {\r\n                imageData.data[i] = this.curTextureData[start + i];\r\n            }\r\n            ctx.putImageData(imageData, 0, row);\r\n        }\r\n        let dataURL = canvas.toDataURL();\r\n      \r\n        let params:storageParams= {\r\n            method:\"PUT\",\r\n            key:\"paint_\" + tianSeManager.instance.TanseIndex,\r\n            type:\"file\",\r\n            value:dataURL\r\n        }\r\n        TigoManager.instance.callAppToStorage(params)\r\n        this.resetTianSeData()\r\n    }     \r\n\r\n    public resetTianSeData(){\r\n        this.savedTexutreData = {}\r\n        this.curTextureData = {}\r\n        this.checkedPointDic= {};\r\n        this.checkPointList= [];\r\n    }\r\n\r\n    public onDestroy() {\r\n\r\n    }\r\n}\r\n\r\n\r\n","import AudioManager from \"../../../../kit/system/audio/AudioManager\";\r\nimport ResLoader from \"../../../../kit/framework/load/ResLoader\";\r\nimport { BUNDLE_NAME, GUIDE_STATE, Music, MUSIC_PATH, SAVE_PAINT_SIGN } from \"../paintConfig\";\r\nimport { LocalStorageUtils } from \"../../../../kit/utils/LocalStorageUtils\";\r\nimport paintDataManager from \"../paintDataManager\";\r\nimport { paintAssetsManager } from \"../paintAssetsManager\";\r\nimport { storageParams } from \"../paintInterface\";\r\nimport TigoManager from \"../TigoManager\";\r\nimport { tianSeManager } from \"../tianSeManager\";\r\nimport showPaint from \"./showPaint\";\r\nimport pen from \"../pen\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n@ccclass\r\nexport default class tianSeNode extends cc.Component {\r\n\r\n    @property(cc.Camera)\r\n    paint_Camera: cc.Camera = null;\r\n\r\n    @property(cc.Node)\r\n    paint1: cc.Node = null;\r\n\r\n    @property(cc.Node)\r\n    paint2: cc.Node = null;\r\n\r\n    @property(cc.Node)\r\n    doneBtn: cc.Node = null;\r\n\r\n    @property(cc.Node)\r\n    topMask: cc.Node = null;\r\n    isFirstSave:boolean = false\r\n\r\n    @property(cc.Prefab)\r\n    showPaintPre: cc.Prefab = null;\r\n\r\n    @property(cc.Prefab)\r\n    penPre: cc.Prefab = null;\r\n\r\n    private tetTexture: cc.RenderTexture = null;\r\n    private curDrawTexture2D: cc.Texture2D = null;\r\n\r\n    /**\r\n     * 像素数据，数据类型为 RGBA 格式的 大小为 （长 x 高 x 4（R、G、B、A））Uint8Array 数组\r\n     */\r\n    private winWidth: number = 0;\r\n    private winHeight: number = 0;\r\n\r\n    private curTextureData: any = {};\r\n    private savedTexutreData: any = {};\r\n\r\n    private b_inited: boolean = false;\r\n\r\n    /**\r\n     * 0 填充，-1清除\r\n     */\r\n    private curDrawMode = 0;\r\n    private checkedPointDic: any = {};\r\n    private checkPointList: Array<any> = [];\r\n    public paintFrame = []\r\n\r\n    public penNode: cc.Node = null\r\n    public showPaintNode: cc.Node = null\r\n\r\n    public onLoad() {\r\n        this.addEvent()\r\n\r\n        this.penNode = cc.instantiate(this.penPre)\r\n        this.node.addChild(this.penNode)\r\n\r\n        this.initPaint()\r\n        // AudioManager.playMusic(BUNDLE_NAME, `${MUSIC_PATH}${Music.bgm}`);\r\n    }\r\n    \r\n    public initPaint(){\r\n        this.b_inited = false;  \r\n        this.node.getChildByName(\"done\").active = true\r\n        this.penNode.getComponent<pen>(pen).refreshColorNode()\r\n        this.loadPaintFrame()\r\n    }\r\n\r\n    public loadPaintFrame(){\r\n        let tex = paintAssetsManager.instance.getPaintLineTextureById(tianSeManager.instance.TanseIndex)\r\n        if(tex){\r\n            console.log(\"读取精灵成功\"+tianSeManager.instance.TanseIndex)\r\n            let spr: cc.SpriteFrame = new cc.SpriteFrame(tex)\r\n            this.paint1.getComponent(cc.Sprite).spriteFrame = spr\r\n            this.initView()\r\n        }else{\r\n            let data = paintDataManager.getPaintDataById(tianSeManager.instance.TanseIndex)\r\n            ResLoader.loadRes(data.iconUrl,cc.Texture2D,(err,res)=>{\r\n                if(err)\r\n                {\r\n                    console.log(\"加载失败ID=====>\",tianSeManager.instance.TanseIndex)\r\n                }else{\r\n                    console.log(\"加载成功\",res)\r\n                    let spr: cc.SpriteFrame = new cc.SpriteFrame(res)\r\n                    this.paint1.getComponent(cc.Sprite).spriteFrame = spr;\r\n                    paintAssetsManager.instance.setPaintLineTextureById(tianSeManager.instance.TanseIndex,res)\r\n                }\r\n                this.initView()\r\n            },BUNDLE_NAME)\r\n        }\r\n    }\r\n\r\n    protected initView(): void {\r\n        this.curDrawMode = 0;\r\n        this.topMask.active = false\r\n        this.paint_Camera.ortho = true\r\n        this.paint_Camera.alignWithScreen = false;\r\n        this.tetTexture = new cc.RenderTexture();\r\n        this.curDrawTexture2D = new cc.Texture2D();\r\n        this.scheduleOnce(()=>{this.resetRendData()})\r\n    }\r\n\r\n    public resetRendData() {\r\n        this.paint2.active = false\r\n       \r\n        this.paint_Camera.orthoSize = this.paint1.height * .5;\r\n\r\n        this.winWidth = this.paint1.width\r\n        this.winHeight = this.paint1.height\r\n\r\n        this.paint2.x = this.paint1.x\r\n        this.paint2.y = this.paint1.y\r\n        this.paint_Camera.node.x = this.paint1.x\r\n        this.paint_Camera.node.y = this.paint1.y\r\n\r\n        \r\n        this.paint2.setContentSize(this.paint1.getContentSize())\r\n        this.paint_Camera.node.setContentSize(this.paint1.getContentSize())\r\n\r\n       \r\n\r\n        // @ts-ignore\r\n        this.tetTexture._depthStencilBuffer = null;\r\n        // @ts-ignore\r\n        this.tetTexture.initWithSize(this.paint1.width, this.paint1.height, cc.gfx.RB_FMT_S8);\r\n        this.paint_Camera.targetTexture = this.tetTexture;\r\n        this.paint_Camera.render(this.paint1)\r\n\r\n        this.scheduleOnce(() => {\r\n            let textureData: any = this.tetTexture.readPixels();\r\n            this.savedTexutreData = textureData.slice(); // slice()会返回新的数组\r\n            this.curTextureData = textureData.slice();\r\n\r\n            // this.tetTexture.setFlipY(false);\r\n            this.b_inited = true;\r\n            let spr: cc.SpriteFrame = new cc.SpriteFrame()\r\n            this.curDrawTexture2D.initWithData(this.filpYImage(this.curTextureData, this.winWidth, this.winHeight), cc.Texture2D.PixelFormat.RGBA8888, this.winWidth, this.winHeight);\r\n            spr.setTexture(this.curDrawTexture2D);\r\n            this.paint2.getComponent(cc.Sprite).spriteFrame = spr;\r\n            this.paint2.active = true\r\n        }, 1)\r\n    }\r\n\r\n    /**\r\n     * 转化图片RGBA数据\r\n     * @param data \r\n     * @param width \r\n     * @param height \r\n     */\r\n    private filpYImage(data, width, height): any {\r\n        // create the data array\r\n        let picData = new Uint8Array(width * height * 4);\r\n        let rowBytes = width * 4;\r\n        for (let row = 0; row < height; row++) {\r\n            let srow = height - 1 - row;\r\n            let start = srow * width * 4;\r\n            let reStart = row * width * 4;\r\n            // save the piexls data\r\n            for (let i = 0; i < rowBytes; i++) {\r\n                picData[reStart + i] = data[start + i];\r\n            }\r\n        }\r\n        return picData;\r\n    }\r\n\r\n    /**\r\n     * 添加监听事件\r\n     */\r\n    private addEvent(): void {\r\n        this.paint1.on(cc.Node.EventType.TOUCH_END, (event: cc.Event.EventTouch) => {\r\n            if (!this.b_inited || !this.curTextureData ) return;\r\n           \r\n            if(tianSeManager.instance.guideState == GUIDE_STATE.CLICK_HB)\r\n            {\r\n                tianSeManager.instance.guideState = GUIDE_STATE.CLICK_FILL\r\n                tianSeManager.instance.setGuide()\r\n            }\r\n            let tempPoint = event.getLocation()\r\n\r\n            let pos = this.paint1.convertToNodeSpaceAR(cc.v2(tempPoint.x, tempPoint.y))\r\n            pos.x = pos.x + this.paint1.width * .5\r\n            pos.y = pos.y + this.paint1.height * .5\r\n            this.checkColorFill(Math.floor(pos.x), Math.floor(pos.y));\r\n\r\n            let spr: cc.SpriteFrame = new cc.SpriteFrame()\r\n            this.curDrawTexture2D.initWithData(this.filpYImage(this.curTextureData, this.winWidth, this.winHeight), cc.Texture2D.PixelFormat.RGBA8888, this.winWidth, this.winHeight);\r\n            spr.setTexture(this.curDrawTexture2D);\r\n            // this.curDrawTexture2D.setFilters(cc.Texture2D.Filter.NEAREST,cc.Texture2D.Filter.NEAREST)\r\n            this.paint2.getComponent(cc.Sprite).spriteFrame = spr;\r\n        }, this);\r\n    }\r\n\r\n    //检测填充点\r\n    private checkColorFill(x, y): void {\r\n        if (!this.inArea(x, y)) return;\r\n        this.checkPointList = [];\r\n        this.checkedPointDic = {};\r\n\r\n        this.checkPushPoint(this.checkedPointDic, { x: x, y: y });\r\n        let _checkPoint = this.checkPointList[0]; // 删除并返回数组中最后一个元\r\n        let _curIndex = Math.floor(this.winWidth * _checkPoint.y * 4 + _checkPoint.x * 4);\r\n        let _b_IsWhite1 = this.savedTexutreData[_curIndex] + this.savedTexutreData[_curIndex + 1] + this.savedTexutreData[_curIndex + 2];\r\n        if (_b_IsWhite1) {\r\n            AudioManager.playEffect(BUNDLE_NAME, `${MUSIC_PATH}${Music.clickFill}`);\r\n        }\r\n        while (this.checkPointList.length > 0) {\r\n            let checkPoint = this.checkPointList.pop(); // 删除并返回数组中最后一个元素\r\n\r\n            if (!checkPoint) continue;\r\n            if (!this.inArea(checkPoint.x, checkPoint.y)) continue;\r\n\r\n            let curIndex = Math.floor(this.winWidth * checkPoint.y * 4 + checkPoint.x * 4);\r\n            let colorTotal = this.savedTexutreData[curIndex] + this.savedTexutreData[curIndex + 1] + this.savedTexutreData[curIndex + 2];\r\n            let opi = this.savedTexutreData[curIndex + 3]\r\n            let b_IsWhite = colorTotal > 300; // 300 的值是一个优化点，原本的值属于255*3纯黑\r\n            if (!b_IsWhite) continue; // 跳过循环\r\n\r\n            // this.checkedPointDic[checkPoint.x + \"_\" + checkPoint.y] = true;\r\n            switch (this.curDrawMode) {\r\n                case 0:\r\n                    this.curTextureData[curIndex] = tianSeManager.instance.CurColor.r;\r\n                    this.curTextureData[curIndex + 1] = tianSeManager.instance.CurColor.g;\r\n                    this.curTextureData[curIndex + 2] = tianSeManager.instance.CurColor.b;\r\n                    break;\r\n                case -1:\r\n                    this.curTextureData[curIndex] = 255;\r\n                    this.curTextureData[curIndex + 1] = 255;\r\n                    this.curTextureData[curIndex + 2] = 255;\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n            this.checkPushPoint(this.checkedPointDic, { x: checkPoint.x, y: checkPoint.y + 1 });\r\n            this.checkPushPoint(this.checkedPointDic, { x: checkPoint.x, y: checkPoint.y - 1 });\r\n            this.checkPushPoint(this.checkedPointDic, { x: checkPoint.x + 1, y: checkPoint.y });\r\n            this.checkPushPoint(this.checkedPointDic, { x: checkPoint.x - 1, y: checkPoint.y });\r\n        }\r\n    }\r\n\r\n    // var a = {}\r\n    // a[10] = {}\r\n    // a[10][20] = true\r\n    // console.log(a) =》 {10：{}}\r\n    /** \r\n     * 检索触摸点\r\n     * @param checkedPointDic \r\n     * @param checkPoint 触摸点\r\n     */\r\n    private checkPushPoint(checkedPointDic, checkPoint) {\r\n        if (checkedPointDic[checkPoint.x] && checkedPointDic[checkPoint.x][checkPoint.y]) return;\r\n\r\n        if (!checkedPointDic[checkPoint.x]) checkedPointDic[checkPoint.x] = {};\r\n        checkedPointDic[checkPoint.x][checkPoint.y] = true;\r\n        this.checkPointList.push(checkPoint);\r\n    }\r\n\r\n    /**\r\n     * 返回点是否属于屏幕内              \r\n     * @param x \r\n     * @param y \r\n     */\r\n    private inArea(x: number, y: number): boolean {\r\n        return x >= 0 && x <= this.winWidth && y >= 0 && y <= this.winHeight;\r\n    }\r\n\r\n    public doneCurTs(event, choose) {\r\n        event.target.active = false\r\n        paintDataManager.setPaintItemUnlockById(tianSeManager.instance.TanseIndex)\r\n        paintAssetsManager.instance.setPaintTextureById(tianSeManager.instance.TanseIndex,this.curDrawTexture2D)\r\n\r\n        if(this.showPaintNode)\r\n        {   \r\n            this.showPaintNode.active = true\r\n            this.showPaintNode.getComponent<showPaint>(showPaint).setShowImage(tianSeManager.instance.TanseIndex)\r\n        }else{\r\n            this.showPaintNode = cc.instantiate(this.showPaintPre)\r\n            if(this.showPaintNode){\r\n                this.node.addChild(this.showPaintNode)\r\n                this.showPaintNode.getComponent<showPaint>(showPaint).setShowImage(tianSeManager.instance.TanseIndex)\r\n            }\r\n        }\r\n        this.saveFileToLocal(this.curTextureData)\r\n\r\n        if(!this.isFirstSave)\r\n        {   \r\n            let platform = paintDataManager.getPlatform()\r\n            if(platform == \"cn\")\r\n            {\r\n                LocalStorageUtils.setBool(SAVE_PAINT_SIGN,true)\r\n            }else{\r\n                let params:storageParams= {\r\n                    method:\"PUT\",\r\n                    key:SAVE_PAINT_SIGN,\r\n                    value:\"1\",\r\n                }\r\n                console.log(\"H5 保存了第一张图片～～～～\")\r\n                TigoManager.instance.callAppToStorage(params) || {}\r\n            }\r\n            this.isFirstSave = true\r\n            tianSeManager.instance.guideState = GUIDE_STATE.DONE\r\n            tianSeManager.instance.setGuide()\r\n        }\r\n        AudioManager.playEffect(BUNDLE_NAME, `${MUSIC_PATH}${Music.done}`);\r\n    }\r\n\r\n    public saveFileToLocal(data){\r\n        if (cc.sys.isNative) {\r\n            console.log(\"保存图片 isNative \")\r\n            let path = paintDataManager.getNativePathByIndex(tianSeManager.instance.TanseIndex)\r\n            let filePath = jsb.fileUtils.getWritablePath() + path;\r\n            let _data = this.filpYImage(data, this.winWidth, this.winHeight)\r\n            // @ts-ignore\r\n            let success = jsb.saveImageData(_data, this.winWidth, this.winHeight, filePath)\r\n            if (success) {\r\n                // cc.assetManager.loadRemote(filePath,(err,res:any)=>{\r\n                //     if(err)\r\n                //     {\r\n                //         console.log(\"加载失败\",err)\r\n                //     }\r\n                //     paintAssetsManager.instance.setPaintTextureById(tianSeManager.instance.TanseIndex,res)\r\n                //    \r\n                // })\r\n                tianSeManager.instance.change()\r\n                this.resetTianSeData()\r\n                console.log(\"save image data success, file: \" + filePath);\r\n            }\r\n            else {\r\n                cc.error(\"save image data failed!\");\r\n            }\r\n        }else {\r\n            console.log(\"保存图片 isMobile \")\r\n            this.saveImageToWeb()\r\n        }\r\n    }\r\n\r\n    public saveImageToWeb(){\r\n        let canvas = document.createElement('canvas');\r\n        let width = canvas.width = this.winWidth;\r\n        let height = canvas.height = this.winHeight;\r\n        let ctx = canvas.getContext('2d');\r\n\r\n        let rowBytes = width * 4;\r\n        for (let row = 0; row < height; row++) {\r\n            let srow = height - 1 - row;\r\n            let imageData = ctx.createImageData(width, 1);\r\n            let start = srow * width * 4;\r\n            for (let i = 0; i < rowBytes; i++) {\r\n                imageData.data[i] = this.curTextureData[start + i];\r\n            }\r\n            ctx.putImageData(imageData, 0, row);\r\n        }\r\n        let dataURL = canvas.toDataURL();\r\n        let params:storageParams= {\r\n            method:\"PUT\",\r\n            key:\"paint_\" + tianSeManager.instance.TanseIndex,\r\n            type:\"file\",\r\n            value:dataURL\r\n        }\r\n        TigoManager.instance.callAppToStorage(params)\r\n        tianSeManager.instance.change()      //内有 tianSeManager.instance.TanseIndex++ 操作 要放到后面\r\n        this.resetTianSeData()\r\n    }     \r\n\r\n    public resetTianSeData(){\r\n        this.savedTexutreData = {}\r\n        this.curTextureData = {}\r\n        this.checkedPointDic= {};\r\n        this.checkPointList= [];\r\n    }\r\n    public onDestroy() {\r\n\r\n\r\n    }\r\n}\r\n\r\n\r\n"],"file":"index.js"}